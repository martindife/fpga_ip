// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2022.1 (lin64) Build 3526262 Mon Apr 18 15:47:01 MDT 2022
// Date        : Thu Sep  7 14:01:31 2023
// Host        : teddy01.dhcp.fnal.gov running 64-bit Scientific Linux release 7.9 (Nitrogen)
// Command     : write_verilog -force -mode funcsim -rename_top aurora_64b66b_SL -prefix
//               aurora_64b66b_SL_ aurora_64b66b_SL_sim_netlist.v
// Design      : aurora_64b66b_SL
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xczu49dr-ffvf1760-2-e
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "aurora_64b66b_v12_0_9, Coregen v14.3_ip3, Number of lanes = 1, Line rate is double1.25Gbps, Reference Clock is double156.25MHz, Interface is Framing, Flow Control is None and is operating in DUPLEX configuration" *) 
(* NotValidForBitStream *)
module aurora_64b66b_SL
   (s_axi_tx_tdata,
    s_axi_tx_tlast,
    s_axi_tx_tkeep,
    s_axi_tx_tvalid,
    s_axi_tx_tready,
    m_axi_rx_tdata,
    m_axi_rx_tlast,
    m_axi_rx_tkeep,
    m_axi_rx_tvalid,
    rxp,
    rxn,
    txp,
    txn,
    gt_refclk1_p,
    gt_refclk1_n,
    gt_refclk1_out,
    hard_err,
    soft_err,
    channel_up,
    lane_up,
    user_clk_out,
    mmcm_not_locked_out,
    sync_clk_out,
    reset_pb,
    gt_rxcdrovrden_in,
    power_down,
    loopback,
    pma_init,
    gt_pll_lock,
    gt0_drpaddr,
    gt0_drpdi,
    gt0_drpdo,
    gt0_drprdy,
    gt0_drpen,
    gt0_drpwe,
    init_clk,
    link_reset_out,
    gt_powergood,
    sys_reset_out,
    gt_reset_out,
    tx_out_clk);
  input [0:63]s_axi_tx_tdata;
  input s_axi_tx_tlast;
  input [0:7]s_axi_tx_tkeep;
  input s_axi_tx_tvalid;
  output s_axi_tx_tready;
  output [0:63]m_axi_rx_tdata;
  output m_axi_rx_tlast;
  output [0:7]m_axi_rx_tkeep;
  output m_axi_rx_tvalid;
  input [0:0]rxp;
  input [0:0]rxn;
  output [0:0]txp;
  output [0:0]txn;
  input gt_refclk1_p;
  input gt_refclk1_n;
  output gt_refclk1_out;
  output hard_err;
  output soft_err;
  output channel_up;
  output [0:0]lane_up;
  output user_clk_out;
  output mmcm_not_locked_out;
  output sync_clk_out;
  input reset_pb;
  input gt_rxcdrovrden_in;
  input power_down;
  input [2:0]loopback;
  input pma_init;
  output gt_pll_lock;
  input [9:0]gt0_drpaddr;
  input [15:0]gt0_drpdi;
  output [15:0]gt0_drpdo;
  output gt0_drprdy;
  input gt0_drpen;
  input gt0_drpwe;
  input init_clk;
  output link_reset_out;
  output [0:0]gt_powergood;
  output sys_reset_out;
  output gt_reset_out;
  output tx_out_clk;

  wire channel_up;
  wire [9:0]gt0_drpaddr;
  wire [15:0]gt0_drpdi;
  wire [15:0]gt0_drpdo;
  wire gt0_drpen;
  wire gt0_drprdy;
  wire gt0_drpwe;
  wire gt_pll_lock;
  wire [0:0]gt_powergood;
  wire gt_refclk1_n;
  wire gt_refclk1_out;
  wire gt_refclk1_p;
  wire gt_reset_out;
  wire gt_rxcdrovrden_in;
  wire hard_err;
  wire init_clk;
  wire [0:0]lane_up;
  wire link_reset_out;
  wire [2:0]loopback;
  wire [0:63]m_axi_rx_tdata;
  wire [0:7]m_axi_rx_tkeep;
  wire m_axi_rx_tlast;
  wire m_axi_rx_tvalid;
  wire mmcm_not_locked_out;
  wire pma_init;
  wire power_down;
  wire reset_pb;
  wire [0:0]rxn;
  wire [0:0]rxp;
  wire [0:63]s_axi_tx_tdata;
  wire [0:7]s_axi_tx_tkeep;
  wire s_axi_tx_tlast;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire soft_err;
  wire sync_clk_out;
  wire sys_reset_out;
  wire tx_out_clk;
  wire [0:0]txn;
  wire [0:0]txp;
  wire user_clk_out;
  wire NLW_inst_mmcm_not_locked_out_UNCONNECTED;

  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  aurora_64b66b_SL_aurora_64b66b_SL_support inst
       (.channel_up(channel_up),
        .gt0_drpaddr(gt0_drpaddr),
        .gt0_drpdi(gt0_drpdi),
        .gt0_drpdo(gt0_drpdo),
        .gt0_drpen(gt0_drpen),
        .gt0_drprdy(gt0_drprdy),
        .gt0_drpwe(gt0_drpwe),
        .gt_pll_lock(gt_pll_lock),
        .gt_powergood(gt_powergood),
        .gt_refclk1_n(gt_refclk1_n),
        .gt_refclk1_out(gt_refclk1_out),
        .gt_refclk1_p(gt_refclk1_p),
        .gt_reset_out(gt_reset_out),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .hard_err(hard_err),
        .init_clk(init_clk),
        .lane_up(lane_up),
        .link_reset_out(link_reset_out),
        .loopback(loopback),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .m_axi_rx_tkeep(m_axi_rx_tkeep),
        .m_axi_rx_tlast(m_axi_rx_tlast),
        .m_axi_rx_tvalid(m_axi_rx_tvalid),
        .mmcm_not_locked_out(NLW_inst_mmcm_not_locked_out_UNCONNECTED),
        .mmcm_not_locked_out2(mmcm_not_locked_out),
        .pma_init(pma_init),
        .power_down(power_down),
        .reset_pb(reset_pb),
        .rxn(rxn),
        .rxp(rxp),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .s_axi_tx_tkeep(s_axi_tx_tkeep),
        .s_axi_tx_tlast(s_axi_tx_tlast),
        .s_axi_tx_tready(s_axi_tx_tready),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .soft_err(soft_err),
        .sync_clk_out(sync_clk_out),
        .sys_reset_out(sys_reset_out),
        .tx_out_clk(tx_out_clk),
        .txn(txn),
        .txp(txp),
        .user_clk_out(user_clk_out));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_AURORA_LANE
   (lane_up_flop_i,
    tx_reset_i,
    enable_err_detect_i,
    rst_pma_init_usrclk,
    D,
    rxdatavalid_to_ll_i,
    got_cc_i,
    got_idles_i,
    soft_err_i,
    rx_polarity_r_reg,
    in0,
    TX_HEADER_1_reg,
    hard_err_i,
    remote_ready_i,
    \RX_SEP_NB_reg[2] ,
    rx_pe_data_v_c,
    pipe1_rx_pdu_in_progress_c,
    rx_sep_c,
    stg5_reg,
    \RX_SEP_NB_reg[1] ,
    \RX_SEP_NB_reg[2]_0 ,
    RX_SEP_reg,
    \RX_SEP_NB_reg[2]_1 ,
    \TX_DATA_reg[63] ,
    s_level_out_d1_aurora_64b66b_SL_cdc_to_reg,
    stg5_reg_0,
    sys_reset_out,
    stg1_aurora_64b66b_SL_cdc_to_reg,
    reset_count_r0,
    ready_r_reg0,
    RX_HEADER_0_REG_reg,
    rx_header_1_i,
    rxdatavalid_i,
    rx_header_err_i,
    TX_HEADER_0_reg,
    HARD_ERR_reg,
    \RX_DATA_REG_reg[0] ,
    Q,
    txdatavalid_symgen_i,
    channel_up_tx_if,
    TX_HEADER_1_reg_0,
    TX_HEADER_1_reg_1,
    reset_lanes_i,
    rx_lossofsync_i,
    master_do_rd_en,
    rx_pe_data_v_r_reg,
    gen_cc_i,
    gen_ch_bond_i,
    \TX_DATA_reg[59] ,
    \TX_DATA_reg[55] ,
    \TX_DATA_reg[63]_0 ,
    \TX_DATA_reg[63]_1 ,
    \TX_DATA_reg[56] ,
    \TX_DATA_reg[51] ,
    \TX_DATA_reg[50] ,
    \TX_DATA_reg[49] ,
    \TX_DATA_reg[48] ,
    \TX_DATA_reg[58] ,
    \TX_DATA_reg[58]_0 ,
    \TX_DATA_reg[57] ,
    \TX_DATA_reg[7] ,
    \TX_DATA_reg[59]_0 ,
    \TX_DATA_reg[62] ,
    \TX_DATA_reg[61] ,
    \TX_DATA_reg[60] ,
    \TX_DATA_reg[59]_1 );
  output lane_up_flop_i;
  output tx_reset_i;
  output enable_err_detect_i;
  output rst_pma_init_usrclk;
  output [69:0]D;
  output rxdatavalid_to_ll_i;
  output got_cc_i;
  output got_idles_i;
  output soft_err_i;
  output rx_polarity_r_reg;
  output in0;
  output [1:0]TX_HEADER_1_reg;
  output hard_err_i;
  output remote_ready_i;
  output \RX_SEP_NB_reg[2] ;
  output rx_pe_data_v_c;
  output pipe1_rx_pdu_in_progress_c;
  output rx_sep_c;
  output stg5_reg;
  output \RX_SEP_NB_reg[1] ;
  output \RX_SEP_NB_reg[2]_0 ;
  output RX_SEP_reg;
  output \RX_SEP_NB_reg[2]_1 ;
  output [63:0]\TX_DATA_reg[63] ;
  input s_level_out_d1_aurora_64b66b_SL_cdc_to_reg;
  input stg5_reg_0;
  input sys_reset_out;
  input stg1_aurora_64b66b_SL_cdc_to_reg;
  input reset_count_r0;
  input ready_r_reg0;
  input RX_HEADER_0_REG_reg;
  input rx_header_1_i;
  input rxdatavalid_i;
  input rx_header_err_i;
  input TX_HEADER_0_reg;
  input HARD_ERR_reg;
  input \RX_DATA_REG_reg[0] ;
  input [64:0]Q;
  input txdatavalid_symgen_i;
  input channel_up_tx_if;
  input TX_HEADER_1_reg_0;
  input TX_HEADER_1_reg_1;
  input reset_lanes_i;
  input rx_lossofsync_i;
  input master_do_rd_en;
  input rx_pe_data_v_r_reg;
  input gen_cc_i;
  input gen_ch_bond_i;
  input \TX_DATA_reg[59] ;
  input [3:0]\TX_DATA_reg[55] ;
  input \TX_DATA_reg[63]_0 ;
  input \TX_DATA_reg[63]_1 ;
  input \TX_DATA_reg[56] ;
  input \TX_DATA_reg[51] ;
  input \TX_DATA_reg[50] ;
  input \TX_DATA_reg[49] ;
  input \TX_DATA_reg[48] ;
  input \TX_DATA_reg[58] ;
  input \TX_DATA_reg[58]_0 ;
  input \TX_DATA_reg[57] ;
  input [47:0]\TX_DATA_reg[7] ;
  input \TX_DATA_reg[59]_0 ;
  input \TX_DATA_reg[62] ;
  input \TX_DATA_reg[61] ;
  input \TX_DATA_reg[60] ;
  input \TX_DATA_reg[59]_1 ;

  wire [69:0]D;
  wire HARD_ERR_reg;
  wire [64:0]Q;
  wire \RX_DATA_REG_reg[0] ;
  wire RX_HEADER_0_REG_reg;
  wire \RX_SEP_NB_reg[1] ;
  wire \RX_SEP_NB_reg[2] ;
  wire \RX_SEP_NB_reg[2]_0 ;
  wire \RX_SEP_NB_reg[2]_1 ;
  wire RX_SEP_reg;
  wire SOFT_ERR0;
  wire \TX_DATA_reg[48] ;
  wire \TX_DATA_reg[49] ;
  wire \TX_DATA_reg[50] ;
  wire \TX_DATA_reg[51] ;
  wire [3:0]\TX_DATA_reg[55] ;
  wire \TX_DATA_reg[56] ;
  wire \TX_DATA_reg[57] ;
  wire \TX_DATA_reg[58] ;
  wire \TX_DATA_reg[58]_0 ;
  wire \TX_DATA_reg[59] ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[59]_1 ;
  wire \TX_DATA_reg[60] ;
  wire \TX_DATA_reg[61] ;
  wire \TX_DATA_reg[62] ;
  wire [63:0]\TX_DATA_reg[63] ;
  wire \TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire [47:0]\TX_DATA_reg[7] ;
  wire TX_HEADER_0_reg;
  wire [1:0]TX_HEADER_1_reg;
  wire TX_HEADER_1_reg_0;
  wire TX_HEADER_1_reg_1;
  wire channel_up_tx_if;
  wire enable_err_detect_i;
  wire gen_cc_i;
  wire gen_ch_bond_i;
  wire got_cc_i;
  wire got_idles_i;
  wire hard_err_i;
  wire illegal_btf_i;
  wire in0;
  wire lane_up_flop_i;
  wire master_do_rd_en;
  wire pipe1_rx_pdu_in_progress_c;
  wire ready_r_reg0;
  wire remote_ready_i;
  wire reset_count_r0;
  wire reset_lanes_i;
  wire rst_pma_init_usrclk;
  wire rx_header_1_i;
  wire rx_header_err_i;
  wire rx_header_err_r;
  wire rx_lossofsync_i;
  wire rx_pe_data_v_c;
  wire rx_pe_data_v_r_reg;
  wire rx_polarity_r_reg;
  wire rx_sep_c;
  wire rxdatavalid_i;
  wire rxdatavalid_to_ll_i;
  wire s_level_out_d1_aurora_64b66b_SL_cdc_to_reg;
  wire soft_err_i;
  wire stg1_aurora_64b66b_SL_cdc_to_reg;
  wire stg5_reg;
  wire stg5_reg_0;
  wire sys_reset_out;
  wire tx_reset_i;
  wire txdatavalid_symgen_i;

  aurora_64b66b_SL_aurora_64b66b_SL_ERR_DETECT err_detect_i
       (.HARD_ERR_reg_0(HARD_ERR_reg),
        .SOFT_ERR0(SOFT_ERR0),
        .SOFT_ERR_reg_0(stg5_reg_0),
        .hard_err_i(hard_err_i),
        .rx_header_err_i(rx_header_err_i),
        .rx_header_err_r(rx_header_err_r),
        .soft_err_i(soft_err_i));
  aurora_64b66b_SL_aurora_64b66b_SL_LANE_INIT_SM lane_init_sm_i
       (.Q(Q[64]),
        .SOFT_ERR0(SOFT_ERR0),
        .enable_err_detect_i(enable_err_detect_i),
        .illegal_btf_i(illegal_btf_i),
        .in0(in0),
        .lane_up_flop_i_0(lane_up_flop_i),
        .master_do_rd_en(master_do_rd_en),
        .ready_r_reg0(ready_r_reg0),
        .reset_count_r0(reset_count_r0),
        .reset_lanes_i(reset_lanes_i),
        .rst_r_reg_0(tx_reset_i),
        .rx_header_err_r(rx_header_err_r),
        .rx_lossofsync_i(rx_lossofsync_i),
        .rx_polarity_r_reg_0(rx_polarity_r_reg),
        .s_level_out_d1_aurora_64b66b_SL_cdc_to_reg(s_level_out_d1_aurora_64b66b_SL_cdc_to_reg),
        .s_level_out_d5_reg(stg5_reg_0),
        .sys_reset_out(sys_reset_out));
  aurora_64b66b_SL_aurora_64b66b_SL_SYM_DEC sym_dec_i
       (.D(D[69:2]),
        .Q(Q[63:0]),
        .\RX_DATA_REG_reg[0]_0 (stg5_reg_0),
        .\RX_DATA_REG_reg[0]_1 (\RX_DATA_REG_reg[0] ),
        .RX_HEADER_0_REG_reg_0(RX_HEADER_0_REG_reg),
        .RX_SEP7_reg_0(D[0]),
        .\RX_SEP_NB_reg[1]_0 (\RX_SEP_NB_reg[1] ),
        .\RX_SEP_NB_reg[2]_0 (\RX_SEP_NB_reg[2] ),
        .\RX_SEP_NB_reg[2]_1 (\RX_SEP_NB_reg[2]_0 ),
        .\RX_SEP_NB_reg[2]_2 (\RX_SEP_NB_reg[2]_1 ),
        .RX_SEP_reg_0(D[1]),
        .RX_SEP_reg_1(RX_SEP_reg),
        .got_cc_i(got_cc_i),
        .got_idles_i(got_idles_i),
        .illegal_btf_i(illegal_btf_i),
        .pipe1_rx_pdu_in_progress_c(pipe1_rx_pdu_in_progress_c),
        .remote_ready_det_reg_0(lane_up_flop_i),
        .remote_ready_i(remote_ready_i),
        .rx_header_1_i(rx_header_1_i),
        .rx_pe_data_v_c(rx_pe_data_v_c),
        .rx_pe_data_v_r_reg(rx_pe_data_v_r_reg),
        .rx_sep_c(rx_sep_c),
        .rxdatavalid_i(rxdatavalid_i),
        .rxdatavalid_r_reg_0(rxdatavalid_to_ll_i),
        .sys_reset_out(sys_reset_out));
  aurora_64b66b_SL_aurora_64b66b_SL_SYM_GEN sym_gen_i
       (.\TX_DATA_reg[48]_0 (\TX_DATA_reg[48] ),
        .\TX_DATA_reg[49]_0 (\TX_DATA_reg[49] ),
        .\TX_DATA_reg[50]_0 (\TX_DATA_reg[50] ),
        .\TX_DATA_reg[51]_0 (\TX_DATA_reg[51] ),
        .\TX_DATA_reg[55]_0 (\TX_DATA_reg[55] ),
        .\TX_DATA_reg[56]_0 (\TX_DATA_reg[56] ),
        .\TX_DATA_reg[57]_0 (\TX_DATA_reg[57] ),
        .\TX_DATA_reg[58]_0 (\TX_DATA_reg[58] ),
        .\TX_DATA_reg[58]_1 (\TX_DATA_reg[58]_0 ),
        .\TX_DATA_reg[59]_0 (\TX_DATA_reg[59] ),
        .\TX_DATA_reg[59]_1 (\TX_DATA_reg[59]_0 ),
        .\TX_DATA_reg[59]_2 (\TX_DATA_reg[59]_1 ),
        .\TX_DATA_reg[60]_0 (\TX_DATA_reg[60] ),
        .\TX_DATA_reg[61]_0 (\TX_DATA_reg[61] ),
        .\TX_DATA_reg[62]_0 (\TX_DATA_reg[62] ),
        .\TX_DATA_reg[63]_0 (\TX_DATA_reg[63] ),
        .\TX_DATA_reg[63]_1 (\TX_DATA_reg[63]_0 ),
        .\TX_DATA_reg[63]_2 (\TX_DATA_reg[63]_1 ),
        .\TX_DATA_reg[7]_0 (\TX_DATA_reg[7] ),
        .TX_HEADER_0_reg_0(TX_HEADER_0_reg),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg),
        .TX_HEADER_1_reg_1(TX_HEADER_1_reg_0),
        .TX_HEADER_1_reg_2(TX_HEADER_1_reg_1),
        .channel_up_tx_if(channel_up_tx_if),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .stg1_aurora_64b66b_SL_cdc_to_reg(stg1_aurora_64b66b_SL_cdc_to_reg),
        .stg5_reg(stg5_reg),
        .stg5_reg_0(stg5_reg_0),
        .txdatavalid_symgen_i(txdatavalid_symgen_i));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_BLOCK_SYNC_SM
   (D,
    blocksync_out_i,
    SR,
    gtwiz_userclk_rx_usrclk_out,
    Q,
    rxheadervalid_i);
  output [0:0]D;
  output blocksync_out_i;
  input [0:0]SR;
  input gtwiz_userclk_rx_usrclk_out;
  input [1:0]Q;
  input rxheadervalid_i;

  wire BLOCKSYNC_OUT_i_1_n_0;
  wire [0:0]D;
  wire [1:0]Q;
  wire RXGEARBOXSLIP_OUT_i_2_n_0;
  wire RXGEARBOXSLIP_OUT_i_4_n_0;
  wire RXGEARBOXSLIP_OUT_i_5_n_0;
  wire RXGEARBOXSLIP_OUT_i_6_n_0;
  wire [0:0]SR;
  wire begin_r;
  wire begin_r_i_2__0_n_0;
  wire blocksync_out_i;
  wire gtwiz_userclk_rx_usrclk_out;
  wire next_begin_c;
  wire next_sh_invalid_c;
  wire next_sh_valid_c;
  wire next_slip_c;
  wire next_slip_c0__0;
  wire next_sync_done_c;
  wire next_test_sh_c;
  wire [15:0]p_0_in__6;
  wire [9:0]p_0_in__7;
  wire [3:1]p_1_in;
  wire rxheadervalid_i;
  wire sh_count_equals_max_i__14;
  wire sh_invalid_cnt_equals_zero_i__4;
  wire sh_valid_r_i_2_n_0;
  wire \slip_count_i[15]_i_1_n_0 ;
  wire \slip_count_i_reg_n_0_[0] ;
  wire \slip_count_i_reg_n_0_[10] ;
  wire \slip_count_i_reg_n_0_[11] ;
  wire \slip_count_i_reg_n_0_[12] ;
  wire \slip_count_i_reg_n_0_[13] ;
  wire \slip_count_i_reg_n_0_[14] ;
  wire \slip_count_i_reg_n_0_[1] ;
  wire \slip_count_i_reg_n_0_[2] ;
  wire \slip_count_i_reg_n_0_[3] ;
  wire \slip_count_i_reg_n_0_[4] ;
  wire \slip_count_i_reg_n_0_[5] ;
  wire \slip_count_i_reg_n_0_[6] ;
  wire \slip_count_i_reg_n_0_[7] ;
  wire \slip_count_i_reg_n_0_[8] ;
  wire \slip_count_i_reg_n_0_[9] ;
  wire slip_done_i;
  wire slip_pulse_i;
  wire slip_r_i_2_n_0;
  wire sync_done_r;
  wire sync_done_r_i_3_n_0;
  wire sync_done_r_i_5_n_0;
  wire sync_done_r_i_6_n_0;
  wire sync_done_r_i_7_n_0;
  wire sync_done_r_i_8_n_0;
  wire sync_header_count_i0;
  wire sync_header_count_i0_carry__0_n_2;
  wire sync_header_count_i0_carry__0_n_3;
  wire sync_header_count_i0_carry__0_n_4;
  wire sync_header_count_i0_carry__0_n_5;
  wire sync_header_count_i0_carry__0_n_6;
  wire sync_header_count_i0_carry__0_n_7;
  wire sync_header_count_i0_carry_n_0;
  wire sync_header_count_i0_carry_n_1;
  wire sync_header_count_i0_carry_n_2;
  wire sync_header_count_i0_carry_n_3;
  wire sync_header_count_i0_carry_n_4;
  wire sync_header_count_i0_carry_n_5;
  wire sync_header_count_i0_carry_n_6;
  wire sync_header_count_i0_carry_n_7;
  wire [15:0]sync_header_count_i_reg;
  wire \sync_header_invalid_count_i[9]_i_2_n_0 ;
  wire [9:0]sync_header_invalid_count_i_reg;
  wire system_reset_r;
  wire system_reset_r2;
  wire test_sh_r;
  wire test_sh_r_i_2_n_0;
  wire [7:6]NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED;
  wire [7:7]NLW_sync_header_count_i0_carry__0_O_UNCONNECTED;

  LUT4 #(
    .INIT(16'h1110)) 
    BLOCKSYNC_OUT_i_1
       (.I0(p_1_in[1]),
        .I1(system_reset_r2),
        .I2(blocksync_out_i),
        .I3(sync_done_r),
        .O(BLOCKSYNC_OUT_i_1_n_0));
  FDRE BLOCKSYNC_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(BLOCKSYNC_OUT_i_1_n_0),
        .Q(blocksync_out_i),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h4444444440000000)) 
    RXGEARBOXSLIP_OUT_i_1
       (.I0(p_1_in[1]),
        .I1(RXGEARBOXSLIP_OUT_i_2_n_0),
        .I2(sh_count_equals_max_i__14),
        .I3(next_slip_c0__0),
        .I4(RXGEARBOXSLIP_OUT_i_4_n_0),
        .I5(RXGEARBOXSLIP_OUT_i_5_n_0),
        .O(slip_pulse_i));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    RXGEARBOXSLIP_OUT_i_2
       (.I0(sync_done_r),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .I4(test_sh_r),
        .I5(begin_r),
        .O(RXGEARBOXSLIP_OUT_i_2_n_0));
  LUT5 #(
    .INIT(32'h0800FFFF)) 
    RXGEARBOXSLIP_OUT_i_3
       (.I0(sync_done_r_i_5_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_6_n_0),
        .I2(sync_header_invalid_count_i_reg[3]),
        .I3(sync_header_invalid_count_i_reg[4]),
        .I4(blocksync_out_i),
        .O(next_slip_c0__0));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_4
       (.I0(p_1_in[3]),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .O(RXGEARBOXSLIP_OUT_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT4 #(
    .INIT(16'h8F88)) 
    RXGEARBOXSLIP_OUT_i_5
       (.I0(p_1_in[2]),
        .I1(next_slip_c0__0),
        .I2(slip_done_i),
        .I3(p_1_in[1]),
        .O(RXGEARBOXSLIP_OUT_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'h01)) 
    RXGEARBOXSLIP_OUT_i_6
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .O(RXGEARBOXSLIP_OUT_i_6_n_0));
  FDRE RXGEARBOXSLIP_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(slip_pulse_i),
        .Q(D),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFBAAAAA)) 
    begin_r_i_1__0
       (.I0(begin_r_i_2__0_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(p_1_in[3]),
        .I3(p_1_in[2]),
        .I4(sh_count_equals_max_i__14),
        .I5(next_slip_c0__0),
        .O(next_begin_c));
  LUT4 #(
    .INIT(16'hFDDD)) 
    begin_r_i_2__0
       (.I0(RXGEARBOXSLIP_OUT_i_2_n_0),
        .I1(sync_done_r),
        .I2(slip_done_i),
        .I3(p_1_in[1]),
        .O(begin_r_i_2__0_n_0));
  FDSE begin_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000009000)) 
    sh_invalid_r_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_valid_r_i_2_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_invalid_c));
  FDRE sh_invalid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_invalid_c),
        .Q(p_1_in[2]),
        .R(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000006000)) 
    sh_valid_r_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_valid_r_i_2_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_valid_c));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    sh_valid_r_i_2
       (.I0(sync_done_r),
        .I1(rxheadervalid_i),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .O(sh_valid_r_i_2_n_0));
  FDRE sh_valid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_valid_c),
        .Q(p_1_in[3]),
        .R(system_reset_r2));
  LUT1 #(
    .INIT(2'h1)) 
    \slip_count_i[15]_i_1 
       (.I0(p_1_in[1]),
        .O(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D),
        .Q(\slip_count_i_reg_n_0_[0] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[9] ),
        .Q(\slip_count_i_reg_n_0_[10] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[10] ),
        .Q(\slip_count_i_reg_n_0_[11] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[11] ),
        .Q(\slip_count_i_reg_n_0_[12] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[12] ),
        .Q(\slip_count_i_reg_n_0_[13] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[13] ),
        .Q(\slip_count_i_reg_n_0_[14] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[14] ),
        .Q(slip_done_i),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[0] ),
        .Q(\slip_count_i_reg_n_0_[1] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[1] ),
        .Q(\slip_count_i_reg_n_0_[2] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[2] ),
        .Q(\slip_count_i_reg_n_0_[3] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[3] ),
        .Q(\slip_count_i_reg_n_0_[4] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[4] ),
        .Q(\slip_count_i_reg_n_0_[5] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[5] ),
        .Q(\slip_count_i_reg_n_0_[6] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[6] ),
        .Q(\slip_count_i_reg_n_0_[7] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[7] ),
        .Q(\slip_count_i_reg_n_0_[8] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[8] ),
        .Q(\slip_count_i_reg_n_0_[9] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAA0A08000)) 
    slip_r_i_1
       (.I0(RXGEARBOXSLIP_OUT_i_2_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(next_slip_c0__0),
        .I3(RXGEARBOXSLIP_OUT_i_4_n_0),
        .I4(p_1_in[2]),
        .I5(slip_r_i_2_n_0),
        .O(next_slip_c));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h2)) 
    slip_r_i_2
       (.I0(p_1_in[1]),
        .I1(slip_done_i),
        .O(slip_r_i_2_n_0));
  FDRE slip_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_slip_c),
        .Q(p_1_in[1]),
        .R(system_reset_r2));
  LUT3 #(
    .INIT(8'h80)) 
    sync_done_r_i_1
       (.I0(sh_invalid_cnt_equals_zero_i__4),
        .I1(sync_done_r_i_3_n_0),
        .I2(sh_count_equals_max_i__14),
        .O(next_sync_done_c));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    sync_done_r_i_2
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[4]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[1]),
        .I4(sync_header_invalid_count_i_reg[0]),
        .I5(sync_done_r_i_5_n_0),
        .O(sh_invalid_cnt_equals_zero_i__4));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    sync_done_r_i_3
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .I2(sync_done_r),
        .I3(p_1_in[1]),
        .I4(begin_r),
        .I5(test_sh_r),
        .O(sync_done_r_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    sync_done_r_i_4
       (.I0(sync_done_r_i_6_n_0),
        .I1(sync_header_count_i_reg[1]),
        .I2(sync_header_count_i_reg[0]),
        .I3(sync_header_count_i_reg[3]),
        .I4(sync_header_count_i_reg[2]),
        .I5(sync_done_r_i_7_n_0),
        .O(sh_count_equals_max_i__14));
  LUT5 #(
    .INIT(32'h00000001)) 
    sync_done_r_i_5
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[9]),
        .I4(sync_header_invalid_count_i_reg[8]),
        .O(sync_done_r_i_5_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    sync_done_r_i_6
       (.I0(sync_header_count_i_reg[7]),
        .I1(sync_header_count_i_reg[6]),
        .I2(sync_header_count_i_reg[4]),
        .I3(sync_header_count_i_reg[5]),
        .O(sync_done_r_i_6_n_0));
  LUT5 #(
    .INIT(32'h20000000)) 
    sync_done_r_i_7
       (.I0(sync_header_count_i_reg[13]),
        .I1(sync_header_count_i_reg[12]),
        .I2(sync_header_count_i_reg[14]),
        .I3(sync_header_count_i_reg[15]),
        .I4(sync_done_r_i_8_n_0),
        .O(sync_done_r_i_7_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    sync_done_r_i_8
       (.I0(sync_header_count_i_reg[10]),
        .I1(sync_header_count_i_reg[11]),
        .I2(sync_header_count_i_reg[8]),
        .I3(sync_header_count_i_reg[9]),
        .O(sync_done_r_i_8_n_0));
  FDRE sync_done_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sync_done_c),
        .Q(sync_done_r),
        .R(system_reset_r2));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry
       (.CI(sync_header_count_i_reg[0]),
        .CI_TOP(1'b0),
        .CO({sync_header_count_i0_carry_n_0,sync_header_count_i0_carry_n_1,sync_header_count_i0_carry_n_2,sync_header_count_i0_carry_n_3,sync_header_count_i0_carry_n_4,sync_header_count_i0_carry_n_5,sync_header_count_i0_carry_n_6,sync_header_count_i0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__6[8:1]),
        .S(sync_header_count_i_reg[8:1]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry__0
       (.CI(sync_header_count_i0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED[7:6],sync_header_count_i0_carry__0_n_2,sync_header_count_i0_carry__0_n_3,sync_header_count_i0_carry__0_n_4,sync_header_count_i0_carry__0_n_5,sync_header_count_i0_carry__0_n_6,sync_header_count_i0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_sync_header_count_i0_carry__0_O_UNCONNECTED[7],p_0_in__6[15:9]}),
        .S({1'b0,sync_header_count_i_reg[15:9]}));
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_count_i[0]_i_1 
       (.I0(sync_header_count_i_reg[0]),
        .O(p_0_in__6[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \sync_header_count_i[15]_i_1 
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .O(sync_header_count_i0));
  FDRE \sync_header_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[0]),
        .Q(sync_header_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[10]),
        .Q(sync_header_count_i_reg[10]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[11]),
        .Q(sync_header_count_i_reg[11]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[12]),
        .Q(sync_header_count_i_reg[12]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[13]),
        .Q(sync_header_count_i_reg[13]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[14]),
        .Q(sync_header_count_i_reg[14]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[15]),
        .Q(sync_header_count_i_reg[15]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[1]),
        .Q(sync_header_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[2]),
        .Q(sync_header_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[3]),
        .Q(sync_header_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[4]),
        .Q(sync_header_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[5]),
        .Q(sync_header_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[6]),
        .Q(sync_header_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[7]),
        .Q(sync_header_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[8]),
        .Q(sync_header_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__6[9]),
        .Q(sync_header_count_i_reg[9]),
        .R(begin_r));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_invalid_count_i[0]_i_1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .O(p_0_in__7[0]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[1]_i_1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .O(p_0_in__7[1]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[2]_i_1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .O(p_0_in__7[2]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[3]_i_1 
       (.I0(sync_header_invalid_count_i_reg[1]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .O(p_0_in__7[3]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[4]_i_1 
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .O(p_0_in__7[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sync_header_invalid_count_i[5]_i_1 
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[2]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .I5(sync_header_invalid_count_i_reg[5]),
        .O(p_0_in__7[5]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[6]_i_1 
       (.I0(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .O(p_0_in__7[6]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[7]_i_1 
       (.I0(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .O(p_0_in__7[7]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[8]_i_1 
       (.I0(sync_header_invalid_count_i_reg[6]),
        .I1(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .O(p_0_in__7[8]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[9]_i_1 
       (.I0(sync_header_invalid_count_i_reg[7]),
        .I1(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I2(sync_header_invalid_count_i_reg[6]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .I4(sync_header_invalid_count_i_reg[9]),
        .O(p_0_in__7[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sync_header_invalid_count_i[9]_i_2 
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[3]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[0]),
        .I4(sync_header_invalid_count_i_reg[2]),
        .I5(sync_header_invalid_count_i_reg[4]),
        .O(\sync_header_invalid_count_i[9]_i_2_n_0 ));
  FDRE \sync_header_invalid_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__7[0]),
        .Q(sync_header_invalid_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__7[1]),
        .Q(sync_header_invalid_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__7[2]),
        .Q(sync_header_invalid_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__7[3]),
        .Q(sync_header_invalid_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__7[4]),
        .Q(sync_header_invalid_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__7[5]),
        .Q(sync_header_invalid_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__7[6]),
        .Q(sync_header_invalid_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__7[7]),
        .Q(sync_header_invalid_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__7[8]),
        .Q(sync_header_invalid_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__7[9]),
        .Q(sync_header_invalid_count_i_reg[9]),
        .R(begin_r));
  FDRE system_reset_r2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(system_reset_r),
        .Q(system_reset_r2),
        .R(1'b0));
  FDRE system_reset_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(SR),
        .Q(system_reset_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAA00AAAAAA0020)) 
    test_sh_r_i_1
       (.I0(RXGEARBOXSLIP_OUT_i_2_n_0),
        .I1(next_slip_c0__0),
        .I2(p_1_in[2]),
        .I3(sh_count_equals_max_i__14),
        .I4(test_sh_r_i_2_n_0),
        .I5(p_1_in[3]),
        .O(next_test_sh_c));
  LUT3 #(
    .INIT(8'hF4)) 
    test_sh_r_i_2
       (.I0(rxheadervalid_i),
        .I1(test_sh_r),
        .I2(begin_r),
        .O(test_sh_r_i_2_n_0));
  FDRE test_sh_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_test_sh_c),
        .Q(test_sh_r),
        .R(system_reset_r2));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_CHANNEL_BOND_GEN
   (gen_ch_bond_i,
    txdatavalid_i,
    gen_ch_bond_int_reg_0,
    sys_reset_out,
    gen_ch_bond_int_reg_1);
  output gen_ch_bond_i;
  input txdatavalid_i;
  input gen_ch_bond_int_reg_0;
  input sys_reset_out;
  input gen_ch_bond_int_reg_1;

  wire \free_count_r[0]_i_1_n_0 ;
  wire \free_count_r[0]_i_3_n_0 ;
  wire [0:4]free_count_r_reg;
  wire freeze_free_count_r;
  wire gen_ch_bond_i;
  wire gen_ch_bond_int_i_1_n_0;
  wire gen_ch_bond_int_reg_0;
  wire gen_ch_bond_int_reg_1;
  wire [4:0]p_0_in__3;
  wire sys_reset_out;
  wire txdatavalid_i;

  LUT3 #(
    .INIT(8'hBA)) 
    \free_count_r[0]_i_1 
       (.I0(sys_reset_out),
        .I1(\free_count_r[0]_i_3_n_0 ),
        .I2(freeze_free_count_r),
        .O(\free_count_r[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \free_count_r[0]_i_2 
       (.I0(free_count_r_reg[0]),
        .I1(free_count_r_reg[2]),
        .I2(free_count_r_reg[3]),
        .I3(free_count_r_reg[4]),
        .I4(free_count_r_reg[1]),
        .O(p_0_in__3[4]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT5 #(
    .INIT(32'hFFFFFDFF)) 
    \free_count_r[0]_i_3 
       (.I0(free_count_r_reg[4]),
        .I1(free_count_r_reg[3]),
        .I2(free_count_r_reg[0]),
        .I3(free_count_r_reg[1]),
        .I4(free_count_r_reg[2]),
        .O(\free_count_r[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \free_count_r[1]_i_1 
       (.I0(free_count_r_reg[1]),
        .I1(free_count_r_reg[4]),
        .I2(free_count_r_reg[3]),
        .I3(free_count_r_reg[2]),
        .O(p_0_in__3[3]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \free_count_r[2]_i_1 
       (.I0(free_count_r_reg[2]),
        .I1(free_count_r_reg[3]),
        .I2(free_count_r_reg[4]),
        .O(p_0_in__3[2]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \free_count_r[3]_i_1 
       (.I0(free_count_r_reg[4]),
        .I1(free_count_r_reg[3]),
        .O(p_0_in__3[1]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \free_count_r[4]_i_1 
       (.I0(free_count_r_reg[4]),
        .O(p_0_in__3[0]));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[0] 
       (.C(gen_ch_bond_int_reg_0),
        .CE(freeze_free_count_r),
        .D(p_0_in__3[4]),
        .Q(free_count_r_reg[0]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[1] 
       (.C(gen_ch_bond_int_reg_0),
        .CE(freeze_free_count_r),
        .D(p_0_in__3[3]),
        .Q(free_count_r_reg[1]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[2] 
       (.C(gen_ch_bond_int_reg_0),
        .CE(freeze_free_count_r),
        .D(p_0_in__3[2]),
        .Q(free_count_r_reg[2]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[3] 
       (.C(gen_ch_bond_int_reg_0),
        .CE(freeze_free_count_r),
        .D(p_0_in__3[1]),
        .Q(free_count_r_reg[3]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[4] 
       (.C(gen_ch_bond_int_reg_0),
        .CE(freeze_free_count_r),
        .D(p_0_in__3[0]),
        .Q(free_count_r_reg[4]),
        .R(\free_count_r[0]_i_1_n_0 ));
  (* inverted = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    freeze_free_count_r_reg_inv
       (.C(gen_ch_bond_int_reg_0),
        .CE(1'b1),
        .D(txdatavalid_i),
        .Q(freeze_free_count_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    gen_ch_bond_int_i_1
       (.I0(gen_ch_bond_int_reg_1),
        .I1(free_count_r_reg[2]),
        .I2(free_count_r_reg[1]),
        .I3(free_count_r_reg[0]),
        .I4(free_count_r_reg[3]),
        .I5(free_count_r_reg[4]),
        .O(gen_ch_bond_int_i_1_n_0));
  FDRE gen_ch_bond_int_reg
       (.C(gen_ch_bond_int_reg_0),
        .CE(1'b1),
        .D(gen_ch_bond_int_i_1_n_0),
        .Q(gen_ch_bond_i),
        .R(1'b0));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_CHANNEL_ERR_DETECT
   (hard_err,
    hard_err_i,
    CHANNEL_HARD_ERR_reg_0);
  output hard_err;
  input hard_err_i;
  input CHANNEL_HARD_ERR_reg_0;

  wire CHANNEL_HARD_ERR_reg_0;
  wire hard_err;
  wire hard_err_i;

  FDRE CHANNEL_HARD_ERR_reg
       (.C(CHANNEL_HARD_ERR_reg_0),
        .CE(1'b1),
        .D(hard_err_i),
        .Q(hard_err),
        .R(1'b0));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_CHANNEL_INIT_SM
   (reset_lanes_i,
    SR,
    CHANNEL_UP_RX_IF_reg_0,
    CHANNEL_UP_TX_IF_reg_0,
    wait_for_lane_up_r_reg_0,
    R0,
    CHANNEL_UP_TX_IF_reg_1,
    CHANNEL_UP_RX_IF_reg_1,
    CHANNEL_UP_TX_IF_reg_2,
    reset_lanes_c,
    CHANNEL_UP_TX_IF_reg_3,
    wait_for_lane_up_r0,
    remote_ready_i,
    got_idles_i,
    sys_reset_out,
    gen_cc_i,
    gen_ch_bond_i,
    GEN_SEP7_i_3,
    GEN_SEP7_i_3_0,
    GEN_SEP7_i_3_1,
    GEN_SEP7_i_3_2,
    GEN_SEP7_i_3_3,
    soft_err_i);
  output reset_lanes_i;
  output [0:0]SR;
  output CHANNEL_UP_RX_IF_reg_0;
  output CHANNEL_UP_TX_IF_reg_0;
  output wait_for_lane_up_r_reg_0;
  output R0;
  output CHANNEL_UP_TX_IF_reg_1;
  output CHANNEL_UP_RX_IF_reg_1;
  output CHANNEL_UP_TX_IF_reg_2;
  input reset_lanes_c;
  input CHANNEL_UP_TX_IF_reg_3;
  input wait_for_lane_up_r0;
  input remote_ready_i;
  input got_idles_i;
  input sys_reset_out;
  input gen_cc_i;
  input gen_ch_bond_i;
  input GEN_SEP7_i_3;
  input GEN_SEP7_i_3_0;
  input GEN_SEP7_i_3_1;
  input GEN_SEP7_i_3_2;
  input GEN_SEP7_i_3_3;
  input soft_err_i;

  wire CHANNEL_UP_RX_IF_reg_0;
  wire CHANNEL_UP_RX_IF_reg_1;
  wire CHANNEL_UP_TX_IF_reg_0;
  wire CHANNEL_UP_TX_IF_reg_1;
  wire CHANNEL_UP_TX_IF_reg_2;
  wire CHANNEL_UP_TX_IF_reg_3;
  wire GEN_SEP7_i_3;
  wire GEN_SEP7_i_3_0;
  wire GEN_SEP7_i_3_1;
  wire GEN_SEP7_i_3_2;
  wire GEN_SEP7_i_3_3;
  wire R0;
  wire [0:0]SR;
  wire any_idles_r;
  (* RTL_KEEP = "true" *) wire [8:0]chan_bond_timeout_val;
  wire channel_up_c;
  wire gen_cc_i;
  wire gen_ch_bond_i;
  wire got_idles_i;
  wire idle_xmit_cntr;
  wire \idle_xmit_cntr[0]_i_2_n_0 ;
  wire \idle_xmit_cntr[0]_i_3_n_0 ;
  wire \idle_xmit_cntr[0]_i_4_n_0 ;
  wire \idle_xmit_cntr[1]_i_1_n_0 ;
  wire \idle_xmit_cntr[2]_i_1_n_0 ;
  wire \idle_xmit_cntr[3]_i_1_n_0 ;
  wire \idle_xmit_cntr[4]_i_1_n_0 ;
  wire \idle_xmit_cntr[5]_i_1_n_0 ;
  wire \idle_xmit_cntr_reg_n_0_[0] ;
  wire \idle_xmit_cntr_reg_n_0_[1] ;
  wire \idle_xmit_cntr_reg_n_0_[2] ;
  wire \idle_xmit_cntr_reg_n_0_[3] ;
  wire \idle_xmit_cntr_reg_n_0_[4] ;
  wire \idle_xmit_cntr_reg_n_0_[5] ;
  wire next_ready_c;
  wire next_wait_for_remote_c;
  wire ready_r;
  wire remote_ready_i;
  wire remote_ready_r;
  wire reset_lanes_c;
  wire reset_lanes_i;
  wire soft_err_i;
  wire sys_reset_out;
  wire wait_for_lane_up_r0;
  wire wait_for_lane_up_r_reg_0;
  wire wait_for_remote_r;

  FDRE #(
    .INIT(1'b0)) 
    CHANNEL_UP_RX_IF_reg
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(1'b1),
        .D(remote_ready_r),
        .Q(CHANNEL_UP_RX_IF_reg_0),
        .R(sys_reset_out));
  LUT5 #(
    .INIT(32'h0000A200)) 
    CHANNEL_UP_TX_IF_i_1
       (.I0(ready_r),
        .I1(wait_for_remote_r),
        .I2(\idle_xmit_cntr[0]_i_3_n_0 ),
        .I3(remote_ready_r),
        .I4(SR),
        .O(channel_up_c));
  FDRE #(
    .INIT(1'b0)) 
    CHANNEL_UP_TX_IF_reg
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(1'b1),
        .D(channel_up_c),
        .Q(CHANNEL_UP_TX_IF_reg_0),
        .R(sys_reset_out));
  LUT6 #(
    .INIT(64'h11F1FFFFFFFFFFFF)) 
    GEN_SEP7_i_6
       (.I0(GEN_SEP7_i_3),
        .I1(GEN_SEP7_i_3_0),
        .I2(GEN_SEP7_i_3_1),
        .I3(GEN_SEP7_i_3_2),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(GEN_SEP7_i_3_3),
        .O(CHANNEL_UP_TX_IF_reg_1));
  LUT3 #(
    .INIT(8'hFE)) 
    \TX_DATA[63]_i_3 
       (.I0(SR),
        .I1(gen_cc_i),
        .I2(gen_ch_bond_i),
        .O(wait_for_lane_up_r_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    any_idles_r_reg
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(1'b1),
        .D(got_idles_i),
        .Q(any_idles_r),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    hold_valid_r_i_1
       (.I0(CHANNEL_UP_RX_IF_reg_0),
        .O(CHANNEL_UP_RX_IF_reg_1));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(chan_bond_timeout_val[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b1),
        .O(chan_bond_timeout_val[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b1),
        .O(chan_bond_timeout_val[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b1),
        .O(chan_bond_timeout_val[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b1),
        .O(chan_bond_timeout_val[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(chan_bond_timeout_val[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b1),
        .O(chan_bond_timeout_val[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(chan_bond_timeout_val[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(chan_bond_timeout_val[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFEAAAAAAAA)) 
    \idle_xmit_cntr[0]_i_1 
       (.I0(\idle_xmit_cntr[0]_i_3_n_0 ),
        .I1(\idle_xmit_cntr_reg_n_0_[0] ),
        .I2(\idle_xmit_cntr_reg_n_0_[3] ),
        .I3(any_idles_r),
        .I4(\idle_xmit_cntr[0]_i_4_n_0 ),
        .I5(wait_for_remote_r),
        .O(idle_xmit_cntr));
  LUT6 #(
    .INIT(64'hEAAAAAAAAAAAAAAA)) 
    \idle_xmit_cntr[0]_i_2 
       (.I0(\idle_xmit_cntr_reg_n_0_[0] ),
        .I1(\idle_xmit_cntr_reg_n_0_[1] ),
        .I2(\idle_xmit_cntr_reg_n_0_[3] ),
        .I3(\idle_xmit_cntr_reg_n_0_[4] ),
        .I4(\idle_xmit_cntr_reg_n_0_[5] ),
        .I5(\idle_xmit_cntr_reg_n_0_[2] ),
        .O(\idle_xmit_cntr[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \idle_xmit_cntr[0]_i_3 
       (.I0(\idle_xmit_cntr_reg_n_0_[0] ),
        .I1(\idle_xmit_cntr_reg_n_0_[1] ),
        .I2(\idle_xmit_cntr_reg_n_0_[3] ),
        .I3(\idle_xmit_cntr_reg_n_0_[4] ),
        .I4(\idle_xmit_cntr_reg_n_0_[5] ),
        .I5(\idle_xmit_cntr_reg_n_0_[2] ),
        .O(\idle_xmit_cntr[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \idle_xmit_cntr[0]_i_4 
       (.I0(\idle_xmit_cntr_reg_n_0_[5] ),
        .I1(\idle_xmit_cntr_reg_n_0_[4] ),
        .I2(\idle_xmit_cntr_reg_n_0_[1] ),
        .I3(\idle_xmit_cntr_reg_n_0_[2] ),
        .O(\idle_xmit_cntr[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFFC0000000)) 
    \idle_xmit_cntr[1]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[0] ),
        .I1(\idle_xmit_cntr_reg_n_0_[3] ),
        .I2(\idle_xmit_cntr_reg_n_0_[4] ),
        .I3(\idle_xmit_cntr_reg_n_0_[5] ),
        .I4(\idle_xmit_cntr_reg_n_0_[2] ),
        .I5(\idle_xmit_cntr_reg_n_0_[1] ),
        .O(\idle_xmit_cntr[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8FFFFFFFF0000000)) 
    \idle_xmit_cntr[2]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[1] ),
        .I1(\idle_xmit_cntr_reg_n_0_[0] ),
        .I2(\idle_xmit_cntr_reg_n_0_[5] ),
        .I3(\idle_xmit_cntr_reg_n_0_[4] ),
        .I4(\idle_xmit_cntr_reg_n_0_[3] ),
        .I5(\idle_xmit_cntr_reg_n_0_[2] ),
        .O(\idle_xmit_cntr[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h80FFFFFFFF000000)) 
    \idle_xmit_cntr[3]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[2] ),
        .I1(\idle_xmit_cntr_reg_n_0_[1] ),
        .I2(\idle_xmit_cntr_reg_n_0_[0] ),
        .I3(\idle_xmit_cntr_reg_n_0_[4] ),
        .I4(\idle_xmit_cntr_reg_n_0_[5] ),
        .I5(\idle_xmit_cntr_reg_n_0_[3] ),
        .O(\idle_xmit_cntr[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000FFFFFFFF0000)) 
    \idle_xmit_cntr[4]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[2] ),
        .I1(\idle_xmit_cntr_reg_n_0_[3] ),
        .I2(\idle_xmit_cntr_reg_n_0_[1] ),
        .I3(\idle_xmit_cntr_reg_n_0_[0] ),
        .I4(\idle_xmit_cntr_reg_n_0_[5] ),
        .I5(\idle_xmit_cntr_reg_n_0_[4] ),
        .O(\idle_xmit_cntr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h80000000FFFFFFFF)) 
    \idle_xmit_cntr[5]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[2] ),
        .I1(\idle_xmit_cntr_reg_n_0_[4] ),
        .I2(\idle_xmit_cntr_reg_n_0_[3] ),
        .I3(\idle_xmit_cntr_reg_n_0_[1] ),
        .I4(\idle_xmit_cntr_reg_n_0_[0] ),
        .I5(\idle_xmit_cntr_reg_n_0_[5] ),
        .O(\idle_xmit_cntr[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[0] 
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[0]_i_2_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[1] 
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[1]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[2] 
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[2]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[3] 
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[3]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[4] 
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[4]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[5] 
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[5]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[5] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'hC888)) 
    ready_r_i_1__0
       (.I0(ready_r),
        .I1(remote_ready_r),
        .I2(\idle_xmit_cntr[0]_i_3_n_0 ),
        .I3(wait_for_remote_r),
        .O(next_ready_c));
  FDRE #(
    .INIT(1'b0)) 
    ready_r_reg
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(wait_for_lane_up_r0));
  FDRE #(
    .INIT(1'b0)) 
    remote_ready_r_reg
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(1'b1),
        .D(remote_ready_i),
        .Q(remote_ready_r),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  FDRE #(
    .INIT(1'b1)) 
    reset_lanes_flop_0_i
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(1'b1),
        .D(reset_lanes_c),
        .Q(reset_lanes_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT1 #(
    .INIT(2'h1)) 
    s_axi_tx_tready_i_1
       (.I0(CHANNEL_UP_TX_IF_reg_0),
        .O(R0));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h8)) 
    soft_err_i_1
       (.I0(CHANNEL_UP_TX_IF_reg_0),
        .I1(soft_err_i),
        .O(CHANNEL_UP_TX_IF_reg_2));
  FDRE #(
    .INIT(1'b0)) 
    wait_for_lane_up_r_reg
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(1'b1),
        .D(wait_for_lane_up_r0),
        .Q(SR),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT5 #(
    .INIT(32'hF2FFF2FA)) 
    wait_for_remote_r_i_1
       (.I0(wait_for_remote_r),
        .I1(\idle_xmit_cntr[0]_i_3_n_0 ),
        .I2(SR),
        .I3(remote_ready_r),
        .I4(ready_r),
        .O(next_wait_for_remote_c));
  FDRE #(
    .INIT(1'b0)) 
    wait_for_remote_r_reg
       (.C(CHANNEL_UP_TX_IF_reg_3),
        .CE(1'b1),
        .D(next_wait_for_remote_c),
        .Q(wait_for_remote_r),
        .R(wait_for_lane_up_r0));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_CLOCK_CORRECTION_CHANNEL_BONDING
   (do_rd_en_i,
    master_do_rd_en,
    rx_header_err_i,
    CC_detect_dlyd1,
    rx_lossofsync_i,
    bit_err_chan_bond_i,
    ANY_VLD_BTF_FLAG,
    valid_btf_detect_dlyd1,
    hard_err_usr0,
    ENABLE_ERR_DETECT_reg,
    Q,
    rxdatavalid_i,
    hold_reg_r_reg_0,
    rx_header_1_i,
    rxfsm_reset_i,
    \LINK_RESET_reg[0]_0 ,
    LINK_RESET_OUT0,
    final_gater_for_fifo_din_i,
    ANY_VLD_BTF_FLAG0__4,
    hold_reg_r_reg_1,
    START_CB_WRITES_OUT,
    srst,
    gtwiz_userclk_rx_usrclk_out,
    s_level_out_d5_reg,
    out,
    in0,
    D,
    cbcc_fifo_reset_rd_clk,
    init_clk,
    cbcc_reset_cbstg2_rd_clk,
    stg5,
    CC_detect_pulse_i,
    SR,
    p_8_in,
    CB_detect0,
    \count_for_reset_r_reg[23]_0 ,
    txbufstatus_out,
    channel_up_tx_if,
    hard_err_usr_reg,
    hard_err_usr_reg_0,
    enable_err_detect_i,
    allow_block_sync_propagation_reg,
    LINK_RESET_OUT_reg,
    hard_err_rst_int,
    FINAL_GATER_FOR_FIFO_DIN_reg_0,
    new_do_wr_en_reg_0,
    \wr_monitor_flag_reg[0]_0 ,
    \valid_btf_detect_extend_r_reg[4]_0 ,
    START_CB_WRITES_OUT_reg_0);
  output do_rd_en_i;
  output master_do_rd_en;
  output rx_header_err_i;
  output CC_detect_dlyd1;
  output rx_lossofsync_i;
  output bit_err_chan_bond_i;
  output ANY_VLD_BTF_FLAG;
  output valid_btf_detect_dlyd1;
  output hard_err_usr0;
  output ENABLE_ERR_DETECT_reg;
  output [64:0]Q;
  output rxdatavalid_i;
  output hold_reg_r_reg_0;
  output rx_header_1_i;
  output rxfsm_reset_i;
  output [0:0]\LINK_RESET_reg[0]_0 ;
  output LINK_RESET_OUT0;
  output final_gater_for_fifo_din_i;
  output ANY_VLD_BTF_FLAG0__4;
  output hold_reg_r_reg_1;
  output START_CB_WRITES_OUT;
  input srst;
  input gtwiz_userclk_rx_usrclk_out;
  input s_level_out_d5_reg;
  input out;
  input in0;
  input [66:0]D;
  input cbcc_fifo_reset_rd_clk;
  input init_clk;
  input cbcc_reset_cbstg2_rd_clk;
  input stg5;
  input CC_detect_pulse_i;
  input [0:0]SR;
  input p_8_in;
  input CB_detect0;
  input \count_for_reset_r_reg[23]_0 ;
  input [0:0]txbufstatus_out;
  input channel_up_tx_if;
  input hard_err_usr_reg;
  input hard_err_usr_reg_0;
  input enable_err_detect_i;
  input allow_block_sync_propagation_reg;
  input LINK_RESET_OUT_reg;
  input hard_err_rst_int;
  input FINAL_GATER_FOR_FIFO_DIN_reg_0;
  input new_do_wr_en_reg_0;
  input [0:0]\wr_monitor_flag_reg[0]_0 ;
  input [0:0]\valid_btf_detect_extend_r_reg[4]_0 ;
  input START_CB_WRITES_OUT_reg_0;

  wire ANY_VLD_BTF_FLAG;
  wire ANY_VLD_BTF_FLAG0__4;
  wire ANY_VLD_BTF_FLAG_i_1_n_0;
  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CB_detect_dlyd1;
  wire CB_detect_dlyd10;
  wire CB_detect_dlyd1p0;
  wire CC_RX_HEADER_OUT_ERR0;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r;
  wire [66:0]D;
  wire ENABLE_ERR_DETECT_reg;
  wire FINAL_GATER_FOR_FIFO_DIN_i_1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_3_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_4_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_5_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_6_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_reg_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT;
  wire FIRST_CB_BITERR_CB_RESET_OUT1__15;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_3_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_5_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_6_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_7_n_0;
  wire \LINK_RESET[0]_i_2_n_0 ;
  wire \LINK_RESET[0]_i_3_n_0 ;
  wire \LINK_RESET[0]_i_4_n_0 ;
  wire \LINK_RESET[0]_i_5_n_0 ;
  wire \LINK_RESET[0]_i_6_n_0 ;
  wire LINK_RESET_OUT0;
  wire LINK_RESET_OUT_reg;
  wire [0:0]\LINK_RESET_reg[0]_0 ;
  wire [64:0]Q;
  wire [0:0]SR;
  wire START_CB_WRITES_OUT;
  wire START_CB_WRITES_OUT_i_1_n_0;
  wire START_CB_WRITES_OUT_reg_0;
  wire allow_block_sync_propagation_reg;
  wire bit_err_chan_bond_i;
  wire buffer_too_empty_c;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire channel_up_tx_if;
  wire \count_for_reset_r[0]_i_3_n_0 ;
  wire [23:0]count_for_reset_r_reg;
  wire \count_for_reset_r_reg[0]_i_2_n_0 ;
  wire \count_for_reset_r_reg[0]_i_2_n_1 ;
  wire \count_for_reset_r_reg[0]_i_2_n_10 ;
  wire \count_for_reset_r_reg[0]_i_2_n_11 ;
  wire \count_for_reset_r_reg[0]_i_2_n_12 ;
  wire \count_for_reset_r_reg[0]_i_2_n_13 ;
  wire \count_for_reset_r_reg[0]_i_2_n_14 ;
  wire \count_for_reset_r_reg[0]_i_2_n_15 ;
  wire \count_for_reset_r_reg[0]_i_2_n_2 ;
  wire \count_for_reset_r_reg[0]_i_2_n_3 ;
  wire \count_for_reset_r_reg[0]_i_2_n_4 ;
  wire \count_for_reset_r_reg[0]_i_2_n_5 ;
  wire \count_for_reset_r_reg[0]_i_2_n_6 ;
  wire \count_for_reset_r_reg[0]_i_2_n_7 ;
  wire \count_for_reset_r_reg[0]_i_2_n_8 ;
  wire \count_for_reset_r_reg[0]_i_2_n_9 ;
  wire \count_for_reset_r_reg[16]_i_1_n_1 ;
  wire \count_for_reset_r_reg[16]_i_1_n_10 ;
  wire \count_for_reset_r_reg[16]_i_1_n_11 ;
  wire \count_for_reset_r_reg[16]_i_1_n_12 ;
  wire \count_for_reset_r_reg[16]_i_1_n_13 ;
  wire \count_for_reset_r_reg[16]_i_1_n_14 ;
  wire \count_for_reset_r_reg[16]_i_1_n_15 ;
  wire \count_for_reset_r_reg[16]_i_1_n_2 ;
  wire \count_for_reset_r_reg[16]_i_1_n_3 ;
  wire \count_for_reset_r_reg[16]_i_1_n_4 ;
  wire \count_for_reset_r_reg[16]_i_1_n_5 ;
  wire \count_for_reset_r_reg[16]_i_1_n_6 ;
  wire \count_for_reset_r_reg[16]_i_1_n_7 ;
  wire \count_for_reset_r_reg[16]_i_1_n_8 ;
  wire \count_for_reset_r_reg[16]_i_1_n_9 ;
  wire \count_for_reset_r_reg[23]_0 ;
  wire \count_for_reset_r_reg[8]_i_1_n_0 ;
  wire \count_for_reset_r_reg[8]_i_1_n_1 ;
  wire \count_for_reset_r_reg[8]_i_1_n_10 ;
  wire \count_for_reset_r_reg[8]_i_1_n_11 ;
  wire \count_for_reset_r_reg[8]_i_1_n_12 ;
  wire \count_for_reset_r_reg[8]_i_1_n_13 ;
  wire \count_for_reset_r_reg[8]_i_1_n_14 ;
  wire \count_for_reset_r_reg[8]_i_1_n_15 ;
  wire \count_for_reset_r_reg[8]_i_1_n_2 ;
  wire \count_for_reset_r_reg[8]_i_1_n_3 ;
  wire \count_for_reset_r_reg[8]_i_1_n_4 ;
  wire \count_for_reset_r_reg[8]_i_1_n_5 ;
  wire \count_for_reset_r_reg[8]_i_1_n_6 ;
  wire \count_for_reset_r_reg[8]_i_1_n_7 ;
  wire \count_for_reset_r_reg[8]_i_1_n_8 ;
  wire \count_for_reset_r_reg[8]_i_1_n_9 ;
  wire do_rd_en;
  wire do_rd_en_i;
  wire do_wr_en;
  wire do_wr_en_i_1_n_0;
  wire enable_err_detect_i;
  wire \fifo_din_i_reg[71]_i_1_n_0 ;
  wire \fifo_din_i_reg_reg_n_0_[0] ;
  wire \fifo_din_i_reg_reg_n_0_[10] ;
  wire \fifo_din_i_reg_reg_n_0_[11] ;
  wire \fifo_din_i_reg_reg_n_0_[12] ;
  wire \fifo_din_i_reg_reg_n_0_[13] ;
  wire \fifo_din_i_reg_reg_n_0_[14] ;
  wire \fifo_din_i_reg_reg_n_0_[15] ;
  wire \fifo_din_i_reg_reg_n_0_[16] ;
  wire \fifo_din_i_reg_reg_n_0_[17] ;
  wire \fifo_din_i_reg_reg_n_0_[18] ;
  wire \fifo_din_i_reg_reg_n_0_[19] ;
  wire \fifo_din_i_reg_reg_n_0_[1] ;
  wire \fifo_din_i_reg_reg_n_0_[20] ;
  wire \fifo_din_i_reg_reg_n_0_[21] ;
  wire \fifo_din_i_reg_reg_n_0_[22] ;
  wire \fifo_din_i_reg_reg_n_0_[23] ;
  wire \fifo_din_i_reg_reg_n_0_[24] ;
  wire \fifo_din_i_reg_reg_n_0_[25] ;
  wire \fifo_din_i_reg_reg_n_0_[26] ;
  wire \fifo_din_i_reg_reg_n_0_[27] ;
  wire \fifo_din_i_reg_reg_n_0_[28] ;
  wire \fifo_din_i_reg_reg_n_0_[29] ;
  wire \fifo_din_i_reg_reg_n_0_[2] ;
  wire \fifo_din_i_reg_reg_n_0_[30] ;
  wire \fifo_din_i_reg_reg_n_0_[31] ;
  wire \fifo_din_i_reg_reg_n_0_[32] ;
  wire \fifo_din_i_reg_reg_n_0_[33] ;
  wire \fifo_din_i_reg_reg_n_0_[34] ;
  wire \fifo_din_i_reg_reg_n_0_[35] ;
  wire \fifo_din_i_reg_reg_n_0_[36] ;
  wire \fifo_din_i_reg_reg_n_0_[37] ;
  wire \fifo_din_i_reg_reg_n_0_[38] ;
  wire \fifo_din_i_reg_reg_n_0_[39] ;
  wire \fifo_din_i_reg_reg_n_0_[3] ;
  wire \fifo_din_i_reg_reg_n_0_[40] ;
  wire \fifo_din_i_reg_reg_n_0_[41] ;
  wire \fifo_din_i_reg_reg_n_0_[42] ;
  wire \fifo_din_i_reg_reg_n_0_[43] ;
  wire \fifo_din_i_reg_reg_n_0_[44] ;
  wire \fifo_din_i_reg_reg_n_0_[45] ;
  wire \fifo_din_i_reg_reg_n_0_[46] ;
  wire \fifo_din_i_reg_reg_n_0_[47] ;
  wire \fifo_din_i_reg_reg_n_0_[48] ;
  wire \fifo_din_i_reg_reg_n_0_[49] ;
  wire \fifo_din_i_reg_reg_n_0_[4] ;
  wire \fifo_din_i_reg_reg_n_0_[50] ;
  wire \fifo_din_i_reg_reg_n_0_[51] ;
  wire \fifo_din_i_reg_reg_n_0_[52] ;
  wire \fifo_din_i_reg_reg_n_0_[53] ;
  wire \fifo_din_i_reg_reg_n_0_[54] ;
  wire \fifo_din_i_reg_reg_n_0_[55] ;
  wire \fifo_din_i_reg_reg_n_0_[56] ;
  wire \fifo_din_i_reg_reg_n_0_[57] ;
  wire \fifo_din_i_reg_reg_n_0_[58] ;
  wire \fifo_din_i_reg_reg_n_0_[59] ;
  wire \fifo_din_i_reg_reg_n_0_[5] ;
  wire \fifo_din_i_reg_reg_n_0_[60] ;
  wire \fifo_din_i_reg_reg_n_0_[61] ;
  wire \fifo_din_i_reg_reg_n_0_[62] ;
  wire \fifo_din_i_reg_reg_n_0_[63] ;
  wire \fifo_din_i_reg_reg_n_0_[64] ;
  wire \fifo_din_i_reg_reg_n_0_[65] ;
  wire \fifo_din_i_reg_reg_n_0_[66] ;
  wire \fifo_din_i_reg_reg_n_0_[67] ;
  wire \fifo_din_i_reg_reg_n_0_[69] ;
  wire \fifo_din_i_reg_reg_n_0_[6] ;
  wire \fifo_din_i_reg_reg_n_0_[70] ;
  wire \fifo_din_i_reg_reg_n_0_[71] ;
  wire \fifo_din_i_reg_reg_n_0_[7] ;
  wire \fifo_din_i_reg_reg_n_0_[8] ;
  wire \fifo_din_i_reg_reg_n_0_[9] ;
  wire [68:0]fifo_dout_i;
  wire final_gater_for_fifo_din_i;
  wire gtwiz_userclk_rx_usrclk_out;
  wire hard_err_rst_int;
  wire hard_err_usr0;
  wire hard_err_usr_reg;
  wire hard_err_usr_reg_0;
  wire hold_reg;
  wire hold_reg_r;
  wire hold_reg_r_reg_0;
  wire hold_reg_r_reg_1;
  wire in0;
  wire init_clk;
  wire link_reset_0;
  wire link_reset_0_c;
  wire master_do_rd_en;
  wire master_do_rd_en_q;
  wire new_do_wr_en;
  wire new_do_wr_en_i_1_n_0;
  wire new_do_wr_en_reg_0;
  wire new_underflow_flag_c;
  wire new_underflow_flag_c0;
  wire out;
  wire overflow_flag_c;
  wire [1:0]p_0_in;
  wire p_0_in1_in;
  wire p_0_in3_in;
  wire [5:0]p_0_in__8;
  wire [4:0]p_0_in__9;
  wire p_6_in;
  wire p_8_in;
  wire [66:0]raw_data_r;
  wire \raw_data_r_r_reg_n_0_[0] ;
  wire \raw_data_r_r_reg_n_0_[10] ;
  wire \raw_data_r_r_reg_n_0_[11] ;
  wire \raw_data_r_r_reg_n_0_[12] ;
  wire \raw_data_r_r_reg_n_0_[13] ;
  wire \raw_data_r_r_reg_n_0_[14] ;
  wire \raw_data_r_r_reg_n_0_[15] ;
  wire \raw_data_r_r_reg_n_0_[16] ;
  wire \raw_data_r_r_reg_n_0_[17] ;
  wire \raw_data_r_r_reg_n_0_[18] ;
  wire \raw_data_r_r_reg_n_0_[19] ;
  wire \raw_data_r_r_reg_n_0_[1] ;
  wire \raw_data_r_r_reg_n_0_[20] ;
  wire \raw_data_r_r_reg_n_0_[21] ;
  wire \raw_data_r_r_reg_n_0_[22] ;
  wire \raw_data_r_r_reg_n_0_[23] ;
  wire \raw_data_r_r_reg_n_0_[24] ;
  wire \raw_data_r_r_reg_n_0_[25] ;
  wire \raw_data_r_r_reg_n_0_[26] ;
  wire \raw_data_r_r_reg_n_0_[27] ;
  wire \raw_data_r_r_reg_n_0_[28] ;
  wire \raw_data_r_r_reg_n_0_[29] ;
  wire \raw_data_r_r_reg_n_0_[2] ;
  wire \raw_data_r_r_reg_n_0_[30] ;
  wire \raw_data_r_r_reg_n_0_[31] ;
  wire \raw_data_r_r_reg_n_0_[32] ;
  wire \raw_data_r_r_reg_n_0_[33] ;
  wire \raw_data_r_r_reg_n_0_[34] ;
  wire \raw_data_r_r_reg_n_0_[35] ;
  wire \raw_data_r_r_reg_n_0_[36] ;
  wire \raw_data_r_r_reg_n_0_[37] ;
  wire \raw_data_r_r_reg_n_0_[38] ;
  wire \raw_data_r_r_reg_n_0_[39] ;
  wire \raw_data_r_r_reg_n_0_[3] ;
  wire \raw_data_r_r_reg_n_0_[40] ;
  wire \raw_data_r_r_reg_n_0_[41] ;
  wire \raw_data_r_r_reg_n_0_[42] ;
  wire \raw_data_r_r_reg_n_0_[43] ;
  wire \raw_data_r_r_reg_n_0_[44] ;
  wire \raw_data_r_r_reg_n_0_[45] ;
  wire \raw_data_r_r_reg_n_0_[46] ;
  wire \raw_data_r_r_reg_n_0_[47] ;
  wire \raw_data_r_r_reg_n_0_[48] ;
  wire \raw_data_r_r_reg_n_0_[49] ;
  wire \raw_data_r_r_reg_n_0_[4] ;
  wire \raw_data_r_r_reg_n_0_[50] ;
  wire \raw_data_r_r_reg_n_0_[51] ;
  wire \raw_data_r_r_reg_n_0_[52] ;
  wire \raw_data_r_r_reg_n_0_[53] ;
  wire \raw_data_r_r_reg_n_0_[54] ;
  wire \raw_data_r_r_reg_n_0_[55] ;
  wire \raw_data_r_r_reg_n_0_[56] ;
  wire \raw_data_r_r_reg_n_0_[57] ;
  wire \raw_data_r_r_reg_n_0_[58] ;
  wire \raw_data_r_r_reg_n_0_[59] ;
  wire \raw_data_r_r_reg_n_0_[5] ;
  wire \raw_data_r_r_reg_n_0_[60] ;
  wire \raw_data_r_r_reg_n_0_[61] ;
  wire \raw_data_r_r_reg_n_0_[62] ;
  wire \raw_data_r_r_reg_n_0_[63] ;
  wire \raw_data_r_r_reg_n_0_[64] ;
  wire \raw_data_r_r_reg_n_0_[65] ;
  wire \raw_data_r_r_reg_n_0_[6] ;
  wire \raw_data_r_r_reg_n_0_[7] ;
  wire \raw_data_r_r_reg_n_0_[8] ;
  wire \raw_data_r_r_reg_n_0_[9] ;
  wire rd_err_c;
  wire rd_err_pre;
  wire rx_header_1_i;
  wire rx_header_err_i;
  wire rx_lossofsync_i;
  wire [1:0]rxbuferr_out_i;
  wire rxdatavalid_i;
  wire rxdatavalid_lookahead_i;
  wire rxfsm_reset_i;
  wire s_level_out_d5_reg;
  wire srst;
  wire stg5;
  wire [0:0]txbufstatus_out;
  wire u_cdc_rxlossofsync_in_n_0;
  wire u_rst_sync_btf_sync_n_0;
  wire underflow_flag_c;
  wire underflow_flag_r1;
  wire underflow_flag_r10;
  wire underflow_flag_r2;
  wire underflow_flag_r3;
  wire valid_btf_detect;
  wire valid_btf_detect_dlyd1;
  wire [4:0]valid_btf_detect_extend_r;
  wire valid_btf_detect_extend_r2;
  wire valid_btf_detect_extend_r20_n_0;
  wire [0:0]\valid_btf_detect_extend_r_reg[4]_0 ;
  wire [2:0]wait_for_rd_en;
  wire \wait_for_rd_en[0]_i_1_n_0 ;
  wire \wait_for_rd_en[1]_i_1_n_0 ;
  wire \wait_for_rd_en[2]_i_1_n_0 ;
  wire \wait_for_rd_en[2]_i_2_n_0 ;
  wire \wait_for_wr_en[5]_i_1_n_0 ;
  wire [5:0]wait_for_wr_en_reg;
  wire \wait_for_wr_en_wr3_reg[0]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[1]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[2]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[3]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[4]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[5]_srl3_n_0 ;
  wire [5:0]wait_for_wr_en_wr4;
  wire wr_err_c;
  wire wr_err_rd_clk_pre;
  wire wr_monitor_flag;
  wire [4:0]wr_monitor_flag_reg;
  wire [0:0]\wr_monitor_flag_reg[0]_0 ;
  wire NLW_SRLC32E_inst_4_Q31_UNCONNECTED;
  wire [7:7]\NLW_count_for_reset_r_reg[16]_i_1_CO_UNCONNECTED ;
  wire \NLW_master_fifo.data_fifo_prog_full_UNCONNECTED ;
  wire \NLW_master_fifo.data_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_master_fifo.data_fifo_wr_rst_busy_UNCONNECTED ;
  wire [71:66]\NLW_master_fifo.data_fifo_dout_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    ANY_VLD_BTF_FLAG_i_1
       (.I0(ANY_VLD_BTF_FLAG),
        .I1(p_6_in),
        .I2(new_do_wr_en_reg_0),
        .O(ANY_VLD_BTF_FLAG_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ANY_VLD_BTF_FLAG_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(ANY_VLD_BTF_FLAG_i_1_n_0),
        .Q(ANY_VLD_BTF_FLAG),
        .R(1'b0));
  FDRE CB_detect_dlyd0p5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect0),
        .Q(CB_detect_dlyd0p5),
        .R(SR));
  LUT2 #(
    .INIT(4'hE)) 
    CB_detect_dlyd1_i_1
       (.I0(CB_detect_dlyd1p0),
        .I1(CB_detect_dlyd0p5),
        .O(CB_detect_dlyd10));
  FDRE CB_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd10),
        .Q(CB_detect_dlyd1),
        .R(SR));
  FDRE CB_detect_dlyd1p0_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd0p5),
        .Q(CB_detect_dlyd1p0),
        .R(SR));
  FDRE CC_RXLOSSOFSYNC_OUT_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_0),
        .Q(rx_lossofsync_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT5 #(
    .INIT(32'h88080888)) 
    CC_RX_HEADER_OUT_ERR_i_1
       (.I0(Q[64]),
        .I1(master_do_rd_en),
        .I2(hold_reg_r),
        .I3(p_0_in[0]),
        .I4(p_0_in[1]),
        .O(CC_RX_HEADER_OUT_ERR0));
  FDRE CC_RX_HEADER_OUT_ERR_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(CC_RX_HEADER_OUT_ERR0),
        .Q(rx_header_err_i),
        .R(1'b0));
  FDRE CC_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_8_in),
        .Q(CC_detect_dlyd1),
        .R(SR));
  FDRE CC_detect_pulse_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(CC_detect_pulse_r),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    FINAL_GATER_FOR_FIFO_DIN_i_1
       (.I0(FINAL_GATER_FOR_FIFO_DIN_reg_0),
        .I1(p_6_in),
        .I2(final_gater_for_fifo_din_i),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_2
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_3_n_0),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_4_n_0),
        .I2(\raw_data_r_r_reg_n_0_[48] ),
        .I3(\raw_data_r_r_reg_n_0_[49] ),
        .I4(\raw_data_r_r_reg_n_0_[50] ),
        .I5(p_0_in3_in),
        .O(p_6_in));
  LUT5 #(
    .INIT(32'h10000000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_3
       (.I0(\raw_data_r_r_reg_n_0_[63] ),
        .I1(\raw_data_r_r_reg_n_0_[64] ),
        .I2(\raw_data_r_r_reg_n_0_[65] ),
        .I3(p_0_in3_in),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_5_n_0),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_3_n_0));
  LUT5 #(
    .INIT(32'h00100000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_4
       (.I0(\raw_data_r_r_reg_n_0_[51] ),
        .I1(\raw_data_r_r_reg_n_0_[52] ),
        .I2(\raw_data_r_r_reg_n_0_[54] ),
        .I3(\raw_data_r_r_reg_n_0_[53] ),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_6_n_0),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_4_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_5
       (.I0(\raw_data_r_r_reg_n_0_[62] ),
        .I1(\raw_data_r_r_reg_n_0_[61] ),
        .I2(\raw_data_r_r_reg_n_0_[60] ),
        .I3(\raw_data_r_r_reg_n_0_[59] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_5_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FINAL_GATER_FOR_FIFO_DIN_i_6
       (.I0(\raw_data_r_r_reg_n_0_[58] ),
        .I1(\raw_data_r_r_reg_n_0_[57] ),
        .I2(\raw_data_r_r_reg_n_0_[56] ),
        .I3(\raw_data_r_r_reg_n_0_[55] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FINAL_GATER_FOR_FIFO_DIN_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FINAL_GATER_FOR_FIFO_DIN_i_1_n_0),
        .Q(final_gater_for_fifo_din_i),
        .R(SR));
  LUT4 #(
    .INIT(16'h00E2)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_1
       (.I0(bit_err_chan_bond_i),
        .I1(new_do_wr_en),
        .I2(FIRST_CB_BITERR_CB_RESET_OUT),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_3_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000040)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_2
       (.I0(wr_monitor_flag_reg[4]),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[0]),
        .I4(wr_monitor_flag_reg[2]),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT1__15),
        .O(FIRST_CB_BITERR_CB_RESET_OUT));
  LUT6 #(
    .INIT(64'hFEFEFEFAFEFAFEFB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_3
       (.I0(\wr_monitor_flag_reg[0]_0 ),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[4]),
        .I3(wr_monitor_flag_reg[2]),
        .I4(wr_monitor_flag_reg[1]),
        .I5(wr_monitor_flag_reg[0]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_3_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_4
       (.I0(\fifo_din_i_reg_reg_n_0_[50] ),
        .I1(\fifo_din_i_reg_reg_n_0_[49] ),
        .I2(\fifo_din_i_reg_reg_n_0_[48] ),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_5_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_6_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_7_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT1__15));
  LUT4 #(
    .INIT(16'h0004)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_5
       (.I0(\fifo_din_i_reg_reg_n_0_[53] ),
        .I1(\fifo_din_i_reg_reg_n_0_[54] ),
        .I2(\fifo_din_i_reg_reg_n_0_[52] ),
        .I3(\fifo_din_i_reg_reg_n_0_[51] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_5_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_6
       (.I0(\fifo_din_i_reg_reg_n_0_[58] ),
        .I1(\fifo_din_i_reg_reg_n_0_[57] ),
        .I2(\fifo_din_i_reg_reg_n_0_[56] ),
        .I3(\fifo_din_i_reg_reg_n_0_[55] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_6_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_7
       (.I0(\fifo_din_i_reg_reg_n_0_[59] ),
        .I1(\fifo_din_i_reg_reg_n_0_[60] ),
        .I2(\fifo_din_i_reg_reg_n_0_[61] ),
        .I3(\fifo_din_i_reg_reg_n_0_[62] ),
        .I4(\fifo_din_i_reg_reg_n_0_[63] ),
        .I5(p_0_in1_in),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FIRST_CB_BITERR_CB_RESET_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FIRST_CB_BITERR_CB_RESET_OUT_i_1_n_0),
        .Q(bit_err_chan_bond_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \FSM_onehot_cdr_reset_fsm_r[2]_i_1 
       (.I0(link_reset_0_c),
        .I1(allow_block_sync_propagation_reg),
        .I2(hard_err_rst_int),
        .O(\LINK_RESET_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hAAAAAAA8)) 
    HARD_ERR_i_1
       (.I0(enable_err_detect_i),
        .I1(txbufstatus_out),
        .I2(rxbuferr_out_i[1]),
        .I3(rxbuferr_out_i[0]),
        .I4(hard_err_usr_reg),
        .O(ENABLE_ERR_DETECT_reg));
  LUT6 #(
    .INIT(64'hABA8000000000000)) 
    \LINK_RESET[0]_i_1 
       (.I0(\LINK_RESET[0]_i_2_n_0 ),
        .I1(count_for_reset_r_reg[1]),
        .I2(count_for_reset_r_reg[2]),
        .I3(\LINK_RESET[0]_i_3_n_0 ),
        .I4(\LINK_RESET[0]_i_4_n_0 ),
        .I5(\LINK_RESET[0]_i_5_n_0 ),
        .O(link_reset_0));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \LINK_RESET[0]_i_2 
       (.I0(count_for_reset_r_reg[3]),
        .I1(count_for_reset_r_reg[6]),
        .I2(count_for_reset_r_reg[7]),
        .I3(count_for_reset_r_reg[5]),
        .I4(count_for_reset_r_reg[4]),
        .O(\LINK_RESET[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \LINK_RESET[0]_i_3 
       (.I0(count_for_reset_r_reg[6]),
        .I1(count_for_reset_r_reg[7]),
        .I2(count_for_reset_r_reg[4]),
        .I3(count_for_reset_r_reg[5]),
        .I4(count_for_reset_r_reg[3]),
        .I5(count_for_reset_r_reg[0]),
        .O(\LINK_RESET[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \LINK_RESET[0]_i_4 
       (.I0(count_for_reset_r_reg[10]),
        .I1(count_for_reset_r_reg[11]),
        .I2(count_for_reset_r_reg[8]),
        .I3(count_for_reset_r_reg[9]),
        .I4(\LINK_RESET[0]_i_6_n_0 ),
        .O(\LINK_RESET[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_5 
       (.I0(count_for_reset_r_reg[20]),
        .I1(count_for_reset_r_reg[21]),
        .I2(count_for_reset_r_reg[18]),
        .I3(count_for_reset_r_reg[19]),
        .I4(count_for_reset_r_reg[23]),
        .I5(count_for_reset_r_reg[22]),
        .O(\LINK_RESET[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_6 
       (.I0(count_for_reset_r_reg[14]),
        .I1(count_for_reset_r_reg[15]),
        .I2(count_for_reset_r_reg[12]),
        .I3(count_for_reset_r_reg[13]),
        .I4(count_for_reset_r_reg[17]),
        .I5(count_for_reset_r_reg[16]),
        .O(\LINK_RESET[0]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    LINK_RESET_OUT_i_1
       (.I0(LINK_RESET_OUT_reg),
        .I1(link_reset_0_c),
        .O(LINK_RESET_OUT0));
  FDRE \LINK_RESET_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(link_reset_0),
        .Q(link_reset_0_c),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h8)) 
    RXDATAVALID_IN_REG_i_1
       (.I0(master_do_rd_en),
        .I1(Q[64]),
        .O(rxdatavalid_i));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    RX_HEADER_0_REG_i_1
       (.I0(hold_reg_r),
        .I1(p_0_in[0]),
        .O(hold_reg_r_reg_0));
  LUT2 #(
    .INIT(4'h8)) 
    RX_HEADER_1_REG_i_1
       (.I0(p_0_in[1]),
        .I1(hold_reg_r),
        .O(rx_header_1_i));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/SRLC32E_inst_4 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_4
       (.A({1'b0,1'b0,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(D[66]),
        .Q(rxdatavalid_lookahead_i),
        .Q31(NLW_SRLC32E_inst_4_Q31_UNCONNECTED));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    START_CB_WRITES_OUT_i_1
       (.I0(START_CB_WRITES_OUT_reg_0),
        .I1(p_6_in),
        .I2(START_CB_WRITES_OUT),
        .O(START_CB_WRITES_OUT_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    START_CB_WRITES_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(START_CB_WRITES_OUT_i_1_n_0),
        .Q(START_CB_WRITES_OUT),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \count_for_reset_r[0]_i_3 
       (.I0(count_for_reset_r_reg[0]),
        .O(\count_for_reset_r[0]_i_3_n_0 ));
  FDRE \count_for_reset_r_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_15 ),
        .Q(count_for_reset_r_reg[0]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[0]_i_2_n_0 ,\count_for_reset_r_reg[0]_i_2_n_1 ,\count_for_reset_r_reg[0]_i_2_n_2 ,\count_for_reset_r_reg[0]_i_2_n_3 ,\count_for_reset_r_reg[0]_i_2_n_4 ,\count_for_reset_r_reg[0]_i_2_n_5 ,\count_for_reset_r_reg[0]_i_2_n_6 ,\count_for_reset_r_reg[0]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\count_for_reset_r_reg[0]_i_2_n_8 ,\count_for_reset_r_reg[0]_i_2_n_9 ,\count_for_reset_r_reg[0]_i_2_n_10 ,\count_for_reset_r_reg[0]_i_2_n_11 ,\count_for_reset_r_reg[0]_i_2_n_12 ,\count_for_reset_r_reg[0]_i_2_n_13 ,\count_for_reset_r_reg[0]_i_2_n_14 ,\count_for_reset_r_reg[0]_i_2_n_15 }),
        .S({count_for_reset_r_reg[7:1],\count_for_reset_r[0]_i_3_n_0 }));
  FDRE \count_for_reset_r_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_13 ),
        .Q(count_for_reset_r_reg[10]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_12 ),
        .Q(count_for_reset_r_reg[11]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_11 ),
        .Q(count_for_reset_r_reg[12]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_10 ),
        .Q(count_for_reset_r_reg[13]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_9 ),
        .Q(count_for_reset_r_reg[14]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_8 ),
        .Q(count_for_reset_r_reg[15]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[16] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_15 ),
        .Q(count_for_reset_r_reg[16]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[16]_i_1 
       (.CI(\count_for_reset_r_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_count_for_reset_r_reg[16]_i_1_CO_UNCONNECTED [7],\count_for_reset_r_reg[16]_i_1_n_1 ,\count_for_reset_r_reg[16]_i_1_n_2 ,\count_for_reset_r_reg[16]_i_1_n_3 ,\count_for_reset_r_reg[16]_i_1_n_4 ,\count_for_reset_r_reg[16]_i_1_n_5 ,\count_for_reset_r_reg[16]_i_1_n_6 ,\count_for_reset_r_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[16]_i_1_n_8 ,\count_for_reset_r_reg[16]_i_1_n_9 ,\count_for_reset_r_reg[16]_i_1_n_10 ,\count_for_reset_r_reg[16]_i_1_n_11 ,\count_for_reset_r_reg[16]_i_1_n_12 ,\count_for_reset_r_reg[16]_i_1_n_13 ,\count_for_reset_r_reg[16]_i_1_n_14 ,\count_for_reset_r_reg[16]_i_1_n_15 }),
        .S(count_for_reset_r_reg[23:16]));
  FDRE \count_for_reset_r_reg[17] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_14 ),
        .Q(count_for_reset_r_reg[17]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[18] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_13 ),
        .Q(count_for_reset_r_reg[18]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[19] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_12 ),
        .Q(count_for_reset_r_reg[19]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_14 ),
        .Q(count_for_reset_r_reg[1]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[20] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_11 ),
        .Q(count_for_reset_r_reg[20]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[21] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_10 ),
        .Q(count_for_reset_r_reg[21]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[22] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_9 ),
        .Q(count_for_reset_r_reg[22]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[23] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_8 ),
        .Q(count_for_reset_r_reg[23]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_13 ),
        .Q(count_for_reset_r_reg[2]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_12 ),
        .Q(count_for_reset_r_reg[3]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_11 ),
        .Q(count_for_reset_r_reg[4]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_10 ),
        .Q(count_for_reset_r_reg[5]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_9 ),
        .Q(count_for_reset_r_reg[6]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_8 ),
        .Q(count_for_reset_r_reg[7]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_15 ),
        .Q(count_for_reset_r_reg[8]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[8]_i_1 
       (.CI(\count_for_reset_r_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[8]_i_1_n_0 ,\count_for_reset_r_reg[8]_i_1_n_1 ,\count_for_reset_r_reg[8]_i_1_n_2 ,\count_for_reset_r_reg[8]_i_1_n_3 ,\count_for_reset_r_reg[8]_i_1_n_4 ,\count_for_reset_r_reg[8]_i_1_n_5 ,\count_for_reset_r_reg[8]_i_1_n_6 ,\count_for_reset_r_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[8]_i_1_n_8 ,\count_for_reset_r_reg[8]_i_1_n_9 ,\count_for_reset_r_reg[8]_i_1_n_10 ,\count_for_reset_r_reg[8]_i_1_n_11 ,\count_for_reset_r_reg[8]_i_1_n_12 ,\count_for_reset_r_reg[8]_i_1_n_13 ,\count_for_reset_r_reg[8]_i_1_n_14 ,\count_for_reset_r_reg[8]_i_1_n_15 }),
        .S(count_for_reset_r_reg[15:8]));
  FDRE \count_for_reset_r_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_14 ),
        .Q(count_for_reset_r_reg[9]),
        .R(\count_for_reset_r_reg[23]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    do_rd_en_i_1
       (.I0(cbcc_fifo_reset_rd_clk),
        .I1(wait_for_rd_en[2]),
        .I2(wait_for_rd_en[1]),
        .O(do_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    do_rd_en_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(new_underflow_flag_c),
        .Q(do_rd_en_i),
        .R(do_rd_en));
  LUT6 #(
    .INIT(64'h000C000800080008)) 
    do_wr_en_i_1
       (.I0(final_gater_for_fifo_din_i),
        .I1(raw_data_r[66]),
        .I2(overflow_flag_c),
        .I3(new_do_wr_en_reg_0),
        .I4(p_6_in),
        .I5(FINAL_GATER_FOR_FIFO_DIN_reg_0),
        .O(do_wr_en_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    do_wr_en_i_3
       (.I0(wait_for_wr_en_wr4[0]),
        .I1(wait_for_wr_en_wr4[5]),
        .I2(wait_for_wr_en_wr4[3]),
        .I3(wait_for_wr_en_wr4[1]),
        .I4(wait_for_wr_en_wr4[2]),
        .I5(wait_for_wr_en_wr4[4]),
        .O(ANY_VLD_BTF_FLAG0__4));
  FDRE #(
    .INIT(1'b0)) 
    do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(do_wr_en_i_1_n_0),
        .Q(do_wr_en),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \fifo_din_i_reg[70]_i_1 
       (.I0(CB_detect_dlyd0p5),
        .I1(CB_detect0),
        .O(CB_detect));
  LUT3 #(
    .INIT(8'h15)) 
    \fifo_din_i_reg[71]_i_1 
       (.I0(do_wr_en),
        .I1(p_6_in),
        .I2(FINAL_GATER_FOR_FIFO_DIN_reg_0),
        .O(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[0] ),
        .Q(\fifo_din_i_reg_reg_n_0_[0] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[10] ),
        .Q(\fifo_din_i_reg_reg_n_0_[10] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[11] ),
        .Q(\fifo_din_i_reg_reg_n_0_[11] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[12] ),
        .Q(\fifo_din_i_reg_reg_n_0_[12] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[13] ),
        .Q(\fifo_din_i_reg_reg_n_0_[13] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[14] ),
        .Q(\fifo_din_i_reg_reg_n_0_[14] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[15] ),
        .Q(\fifo_din_i_reg_reg_n_0_[15] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[16] ),
        .Q(\fifo_din_i_reg_reg_n_0_[16] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[17] ),
        .Q(\fifo_din_i_reg_reg_n_0_[17] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[18] ),
        .Q(\fifo_din_i_reg_reg_n_0_[18] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[19] ),
        .Q(\fifo_din_i_reg_reg_n_0_[19] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[1] ),
        .Q(\fifo_din_i_reg_reg_n_0_[1] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[20] ),
        .Q(\fifo_din_i_reg_reg_n_0_[20] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[21] ),
        .Q(\fifo_din_i_reg_reg_n_0_[21] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[22] ),
        .Q(\fifo_din_i_reg_reg_n_0_[22] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[23] ),
        .Q(\fifo_din_i_reg_reg_n_0_[23] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[24] ),
        .Q(\fifo_din_i_reg_reg_n_0_[24] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[25] ),
        .Q(\fifo_din_i_reg_reg_n_0_[25] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[26] ),
        .Q(\fifo_din_i_reg_reg_n_0_[26] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[27] ),
        .Q(\fifo_din_i_reg_reg_n_0_[27] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[28] ),
        .Q(\fifo_din_i_reg_reg_n_0_[28] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[29] ),
        .Q(\fifo_din_i_reg_reg_n_0_[29] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[2] ),
        .Q(\fifo_din_i_reg_reg_n_0_[2] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[30] ),
        .Q(\fifo_din_i_reg_reg_n_0_[30] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[31] ),
        .Q(\fifo_din_i_reg_reg_n_0_[31] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[32] ),
        .Q(\fifo_din_i_reg_reg_n_0_[32] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[33] ),
        .Q(\fifo_din_i_reg_reg_n_0_[33] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[34] ),
        .Q(\fifo_din_i_reg_reg_n_0_[34] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[35] ),
        .Q(\fifo_din_i_reg_reg_n_0_[35] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[36] ),
        .Q(\fifo_din_i_reg_reg_n_0_[36] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[37] ),
        .Q(\fifo_din_i_reg_reg_n_0_[37] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[38] ),
        .Q(\fifo_din_i_reg_reg_n_0_[38] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[39] ),
        .Q(\fifo_din_i_reg_reg_n_0_[39] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[3] ),
        .Q(\fifo_din_i_reg_reg_n_0_[3] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[40] ),
        .Q(\fifo_din_i_reg_reg_n_0_[40] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[41] ),
        .Q(\fifo_din_i_reg_reg_n_0_[41] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[42] ),
        .Q(\fifo_din_i_reg_reg_n_0_[42] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[43] ),
        .Q(\fifo_din_i_reg_reg_n_0_[43] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[44] ),
        .Q(\fifo_din_i_reg_reg_n_0_[44] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[45] ),
        .Q(\fifo_din_i_reg_reg_n_0_[45] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[46] ),
        .Q(\fifo_din_i_reg_reg_n_0_[46] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[47] ),
        .Q(\fifo_din_i_reg_reg_n_0_[47] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[48] ),
        .Q(\fifo_din_i_reg_reg_n_0_[48] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[49] ),
        .Q(\fifo_din_i_reg_reg_n_0_[49] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[4] ),
        .Q(\fifo_din_i_reg_reg_n_0_[4] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[50] ),
        .Q(\fifo_din_i_reg_reg_n_0_[50] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[51] ),
        .Q(\fifo_din_i_reg_reg_n_0_[51] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[52] ),
        .Q(\fifo_din_i_reg_reg_n_0_[52] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[53] ),
        .Q(\fifo_din_i_reg_reg_n_0_[53] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[54] ),
        .Q(\fifo_din_i_reg_reg_n_0_[54] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[55] ),
        .Q(\fifo_din_i_reg_reg_n_0_[55] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[56] ),
        .Q(\fifo_din_i_reg_reg_n_0_[56] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[57] ),
        .Q(\fifo_din_i_reg_reg_n_0_[57] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[58] ),
        .Q(\fifo_din_i_reg_reg_n_0_[58] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[59] ),
        .Q(\fifo_din_i_reg_reg_n_0_[59] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[5] ),
        .Q(\fifo_din_i_reg_reg_n_0_[5] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[60] ),
        .Q(\fifo_din_i_reg_reg_n_0_[60] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[61] ),
        .Q(\fifo_din_i_reg_reg_n_0_[61] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[62] ),
        .Q(\fifo_din_i_reg_reg_n_0_[62] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[63] ),
        .Q(\fifo_din_i_reg_reg_n_0_[63] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[64] ),
        .Q(\fifo_din_i_reg_reg_n_0_[64] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[65] ),
        .Q(\fifo_din_i_reg_reg_n_0_[65] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lookahead_i),
        .Q(\fifo_din_i_reg_reg_n_0_[66] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[67] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_r),
        .Q(\fifo_din_i_reg_reg_n_0_[67] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[68] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_0_in3_in),
        .Q(p_0_in1_in),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[69] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd1),
        .Q(\fifo_din_i_reg_reg_n_0_[69] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[6] ),
        .Q(\fifo_din_i_reg_reg_n_0_[6] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[70] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect),
        .Q(\fifo_din_i_reg_reg_n_0_[70] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[71] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(\fifo_din_i_reg_reg_n_0_[71] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[7] ),
        .Q(\fifo_din_i_reg_reg_n_0_[7] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[8] ),
        .Q(\fifo_din_i_reg_reg_n_0_[8] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[9] ),
        .Q(\fifo_din_i_reg_reg_n_0_[9] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_dout_reg[0] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[10] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \fifo_dout_reg[11] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \fifo_dout_reg[12] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \fifo_dout_reg[13] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \fifo_dout_reg[14] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \fifo_dout_reg[15] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \fifo_dout_reg[16] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \fifo_dout_reg[17] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \fifo_dout_reg[18] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \fifo_dout_reg[19] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \fifo_dout_reg[1] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[20] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \fifo_dout_reg[21] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \fifo_dout_reg[22] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \fifo_dout_reg[23] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \fifo_dout_reg[24] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \fifo_dout_reg[25] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \fifo_dout_reg[26] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \fifo_dout_reg[27] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \fifo_dout_reg[28] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE \fifo_dout_reg[29] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE \fifo_dout_reg[2] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \fifo_dout_reg[30] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[30]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE \fifo_dout_reg[31] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE \fifo_dout_reg[32] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[32]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE \fifo_dout_reg[33] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[33]),
        .Q(Q[33]),
        .R(1'b0));
  FDRE \fifo_dout_reg[34] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[34]),
        .Q(Q[34]),
        .R(1'b0));
  FDRE \fifo_dout_reg[35] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[35]),
        .Q(Q[35]),
        .R(1'b0));
  FDRE \fifo_dout_reg[36] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[36]),
        .Q(Q[36]),
        .R(1'b0));
  FDRE \fifo_dout_reg[37] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[37]),
        .Q(Q[37]),
        .R(1'b0));
  FDRE \fifo_dout_reg[38] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[38]),
        .Q(Q[38]),
        .R(1'b0));
  FDRE \fifo_dout_reg[39] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[39]),
        .Q(Q[39]),
        .R(1'b0));
  FDRE \fifo_dout_reg[3] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \fifo_dout_reg[40] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[40]),
        .Q(Q[40]),
        .R(1'b0));
  FDRE \fifo_dout_reg[41] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[41]),
        .Q(Q[41]),
        .R(1'b0));
  FDRE \fifo_dout_reg[42] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[42]),
        .Q(Q[42]),
        .R(1'b0));
  FDRE \fifo_dout_reg[43] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[43]),
        .Q(Q[43]),
        .R(1'b0));
  FDRE \fifo_dout_reg[44] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[44]),
        .Q(Q[44]),
        .R(1'b0));
  FDRE \fifo_dout_reg[45] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[45]),
        .Q(Q[45]),
        .R(1'b0));
  FDRE \fifo_dout_reg[46] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[46]),
        .Q(Q[46]),
        .R(1'b0));
  FDRE \fifo_dout_reg[47] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[47]),
        .Q(Q[47]),
        .R(1'b0));
  FDRE \fifo_dout_reg[48] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[48]),
        .Q(Q[48]),
        .R(1'b0));
  FDRE \fifo_dout_reg[49] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[49]),
        .Q(Q[49]),
        .R(1'b0));
  FDRE \fifo_dout_reg[4] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \fifo_dout_reg[50] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[50]),
        .Q(Q[50]),
        .R(1'b0));
  FDRE \fifo_dout_reg[51] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[51]),
        .Q(Q[51]),
        .R(1'b0));
  FDRE \fifo_dout_reg[52] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[52]),
        .Q(Q[52]),
        .R(1'b0));
  FDRE \fifo_dout_reg[53] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[53]),
        .Q(Q[53]),
        .R(1'b0));
  FDRE \fifo_dout_reg[54] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[54]),
        .Q(Q[54]),
        .R(1'b0));
  FDRE \fifo_dout_reg[55] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[55]),
        .Q(Q[55]),
        .R(1'b0));
  FDRE \fifo_dout_reg[56] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[56]),
        .Q(Q[56]),
        .R(1'b0));
  FDRE \fifo_dout_reg[57] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[57]),
        .Q(Q[57]),
        .R(1'b0));
  FDRE \fifo_dout_reg[58] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[58]),
        .Q(Q[58]),
        .R(1'b0));
  FDRE \fifo_dout_reg[59] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[59]),
        .Q(Q[59]),
        .R(1'b0));
  FDRE \fifo_dout_reg[5] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \fifo_dout_reg[60] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[60]),
        .Q(Q[60]),
        .R(1'b0));
  FDRE \fifo_dout_reg[61] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[61]),
        .Q(Q[61]),
        .R(1'b0));
  FDRE \fifo_dout_reg[62] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[62]),
        .Q(Q[62]),
        .R(1'b0));
  FDRE \fifo_dout_reg[63] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[63]),
        .Q(Q[63]),
        .R(1'b0));
  FDRE \fifo_dout_reg[64] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[64]),
        .Q(p_0_in[0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[65] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[65]),
        .Q(p_0_in[1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[68] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[68]),
        .Q(Q[64]),
        .R(1'b0));
  FDRE \fifo_dout_reg[6] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \fifo_dout_reg[7] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \fifo_dout_reg[8] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \fifo_dout_reg[9] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[9]),
        .Q(Q[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFF888888888)) 
    hard_err_usr_i_1
       (.I0(txbufstatus_out),
        .I1(channel_up_tx_if),
        .I2(rxbuferr_out_i[1]),
        .I3(rxbuferr_out_i[0]),
        .I4(hard_err_usr_reg),
        .I5(hard_err_usr_reg_0),
        .O(hard_err_usr0));
  FDRE hold_reg_r_reg
       (.C(s_level_out_d5_reg),
        .CE(do_rd_en_i),
        .D(hold_reg),
        .Q(hold_reg_r),
        .R(stg5));
  FDRE hold_reg_reg
       (.C(s_level_out_d5_reg),
        .CE(do_rd_en_i),
        .D(do_rd_en_i),
        .Q(hold_reg),
        .R(stg5));
  (* shift_extract = "{no}" *) 
  FDRE master_do_rd_en_q_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(out),
        .Q(master_do_rd_en_q),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE master_do_rd_en_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(master_do_rd_en_q),
        .Q(master_do_rd_en),
        .R(cbcc_fifo_reset_rd_clk));
  (* CHECK_LICENSE_TYPE = "aurora_64b66b_SL_fifo_gen_master,fifo_generator_v13_2_7,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "fifo_generator_v13_2_7,Vivado 2022.1" *) 
  aurora_64b66b_SL_aurora_64b66b_SL_fifo_gen_master \master_fifo.data_fifo 
       (.din({\fifo_din_i_reg_reg_n_0_[71] ,\fifo_din_i_reg_reg_n_0_[70] ,\fifo_din_i_reg_reg_n_0_[69] ,p_0_in1_in,\fifo_din_i_reg_reg_n_0_[67] ,\fifo_din_i_reg_reg_n_0_[66] ,\fifo_din_i_reg_reg_n_0_[65] ,\fifo_din_i_reg_reg_n_0_[64] ,\fifo_din_i_reg_reg_n_0_[63] ,\fifo_din_i_reg_reg_n_0_[62] ,\fifo_din_i_reg_reg_n_0_[61] ,\fifo_din_i_reg_reg_n_0_[60] ,\fifo_din_i_reg_reg_n_0_[59] ,\fifo_din_i_reg_reg_n_0_[58] ,\fifo_din_i_reg_reg_n_0_[57] ,\fifo_din_i_reg_reg_n_0_[56] ,\fifo_din_i_reg_reg_n_0_[55] ,\fifo_din_i_reg_reg_n_0_[54] ,\fifo_din_i_reg_reg_n_0_[53] ,\fifo_din_i_reg_reg_n_0_[52] ,\fifo_din_i_reg_reg_n_0_[51] ,\fifo_din_i_reg_reg_n_0_[50] ,\fifo_din_i_reg_reg_n_0_[49] ,\fifo_din_i_reg_reg_n_0_[48] ,\fifo_din_i_reg_reg_n_0_[47] ,\fifo_din_i_reg_reg_n_0_[46] ,\fifo_din_i_reg_reg_n_0_[45] ,\fifo_din_i_reg_reg_n_0_[44] ,\fifo_din_i_reg_reg_n_0_[43] ,\fifo_din_i_reg_reg_n_0_[42] ,\fifo_din_i_reg_reg_n_0_[41] ,\fifo_din_i_reg_reg_n_0_[40] ,\fifo_din_i_reg_reg_n_0_[39] ,\fifo_din_i_reg_reg_n_0_[38] ,\fifo_din_i_reg_reg_n_0_[37] ,\fifo_din_i_reg_reg_n_0_[36] ,\fifo_din_i_reg_reg_n_0_[35] ,\fifo_din_i_reg_reg_n_0_[34] ,\fifo_din_i_reg_reg_n_0_[33] ,\fifo_din_i_reg_reg_n_0_[32] ,\fifo_din_i_reg_reg_n_0_[31] ,\fifo_din_i_reg_reg_n_0_[30] ,\fifo_din_i_reg_reg_n_0_[29] ,\fifo_din_i_reg_reg_n_0_[28] ,\fifo_din_i_reg_reg_n_0_[27] ,\fifo_din_i_reg_reg_n_0_[26] ,\fifo_din_i_reg_reg_n_0_[25] ,\fifo_din_i_reg_reg_n_0_[24] ,\fifo_din_i_reg_reg_n_0_[23] ,\fifo_din_i_reg_reg_n_0_[22] ,\fifo_din_i_reg_reg_n_0_[21] ,\fifo_din_i_reg_reg_n_0_[20] ,\fifo_din_i_reg_reg_n_0_[19] ,\fifo_din_i_reg_reg_n_0_[18] ,\fifo_din_i_reg_reg_n_0_[17] ,\fifo_din_i_reg_reg_n_0_[16] ,\fifo_din_i_reg_reg_n_0_[15] ,\fifo_din_i_reg_reg_n_0_[14] ,\fifo_din_i_reg_reg_n_0_[13] ,\fifo_din_i_reg_reg_n_0_[12] ,\fifo_din_i_reg_reg_n_0_[11] ,\fifo_din_i_reg_reg_n_0_[10] ,\fifo_din_i_reg_reg_n_0_[9] ,\fifo_din_i_reg_reg_n_0_[8] ,\fifo_din_i_reg_reg_n_0_[7] ,\fifo_din_i_reg_reg_n_0_[6] ,\fifo_din_i_reg_reg_n_0_[5] ,\fifo_din_i_reg_reg_n_0_[4] ,\fifo_din_i_reg_reg_n_0_[3] ,\fifo_din_i_reg_reg_n_0_[2] ,\fifo_din_i_reg_reg_n_0_[1] ,\fifo_din_i_reg_reg_n_0_[0] }),
        .dout({\NLW_master_fifo.data_fifo_dout_UNCONNECTED [71:69],fifo_dout_i}),
        .empty(underflow_flag_c),
        .full(overflow_flag_c),
        .overflow(wr_err_c),
        .prog_empty(buffer_too_empty_c),
        .prog_full(\NLW_master_fifo.data_fifo_prog_full_UNCONNECTED ),
        .rd_clk(s_level_out_d5_reg),
        .rd_en(out),
        .rd_rst_busy(\NLW_master_fifo.data_fifo_rd_rst_busy_UNCONNECTED ),
        .srst(srst),
        .underflow(rd_err_c),
        .wr_clk(gtwiz_userclk_rx_usrclk_out),
        .wr_en(new_do_wr_en),
        .wr_rst_busy(\NLW_master_fifo.data_fifo_wr_rst_busy_UNCONNECTED ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT4 #(
    .INIT(16'h00EA)) 
    new_do_wr_en_i_1
       (.I0(do_wr_en),
        .I1(p_6_in),
        .I2(FINAL_GATER_FOR_FIFO_DIN_reg_0),
        .I3(new_do_wr_en_reg_0),
        .O(new_do_wr_en_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    new_do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(new_do_wr_en_i_1_n_0),
        .Q(new_do_wr_en),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h57)) 
    new_underflow_flag_c_inv_i_1
       (.I0(underflow_flag_r3),
        .I1(buffer_too_empty_c),
        .I2(underflow_flag_c),
        .O(new_underflow_flag_c0));
  (* inverted = "yes" *) 
  FDRE new_underflow_flag_c_reg_inv
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(new_underflow_flag_c0),
        .Q(new_underflow_flag_c),
        .R(cbcc_fifo_reset_rd_clk));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[0]),
        .Q(\raw_data_r_r_reg_n_0_[0] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[10]),
        .Q(\raw_data_r_r_reg_n_0_[10] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[11]),
        .Q(\raw_data_r_r_reg_n_0_[11] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[12]),
        .Q(\raw_data_r_r_reg_n_0_[12] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[13]),
        .Q(\raw_data_r_r_reg_n_0_[13] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[14]),
        .Q(\raw_data_r_r_reg_n_0_[14] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[15]),
        .Q(\raw_data_r_r_reg_n_0_[15] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[16]),
        .Q(\raw_data_r_r_reg_n_0_[16] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[17]),
        .Q(\raw_data_r_r_reg_n_0_[17] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[18]),
        .Q(\raw_data_r_r_reg_n_0_[18] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[19]),
        .Q(\raw_data_r_r_reg_n_0_[19] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[1]),
        .Q(\raw_data_r_r_reg_n_0_[1] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[20]),
        .Q(\raw_data_r_r_reg_n_0_[20] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[21]),
        .Q(\raw_data_r_r_reg_n_0_[21] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[22]),
        .Q(\raw_data_r_r_reg_n_0_[22] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[23]),
        .Q(\raw_data_r_r_reg_n_0_[23] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[24]),
        .Q(\raw_data_r_r_reg_n_0_[24] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[25]),
        .Q(\raw_data_r_r_reg_n_0_[25] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[26]),
        .Q(\raw_data_r_r_reg_n_0_[26] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[27]),
        .Q(\raw_data_r_r_reg_n_0_[27] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[28]),
        .Q(\raw_data_r_r_reg_n_0_[28] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[29]),
        .Q(\raw_data_r_r_reg_n_0_[29] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[2]),
        .Q(\raw_data_r_r_reg_n_0_[2] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[30]),
        .Q(\raw_data_r_r_reg_n_0_[30] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[31]),
        .Q(\raw_data_r_r_reg_n_0_[31] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[32]),
        .Q(\raw_data_r_r_reg_n_0_[32] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[33]),
        .Q(\raw_data_r_r_reg_n_0_[33] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[34]),
        .Q(\raw_data_r_r_reg_n_0_[34] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[35]),
        .Q(\raw_data_r_r_reg_n_0_[35] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[36]),
        .Q(\raw_data_r_r_reg_n_0_[36] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[37]),
        .Q(\raw_data_r_r_reg_n_0_[37] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[38]),
        .Q(\raw_data_r_r_reg_n_0_[38] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[39]),
        .Q(\raw_data_r_r_reg_n_0_[39] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[3]),
        .Q(\raw_data_r_r_reg_n_0_[3] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[40]),
        .Q(\raw_data_r_r_reg_n_0_[40] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[41]),
        .Q(\raw_data_r_r_reg_n_0_[41] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[42]),
        .Q(\raw_data_r_r_reg_n_0_[42] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[43]),
        .Q(\raw_data_r_r_reg_n_0_[43] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[44]),
        .Q(\raw_data_r_r_reg_n_0_[44] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[45]),
        .Q(\raw_data_r_r_reg_n_0_[45] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[46]),
        .Q(\raw_data_r_r_reg_n_0_[46] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[47]),
        .Q(\raw_data_r_r_reg_n_0_[47] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[48]),
        .Q(\raw_data_r_r_reg_n_0_[48] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[49]),
        .Q(\raw_data_r_r_reg_n_0_[49] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[4]),
        .Q(\raw_data_r_r_reg_n_0_[4] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[50]),
        .Q(\raw_data_r_r_reg_n_0_[50] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[51]),
        .Q(\raw_data_r_r_reg_n_0_[51] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[52]),
        .Q(\raw_data_r_r_reg_n_0_[52] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[53]),
        .Q(\raw_data_r_r_reg_n_0_[53] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[54]),
        .Q(\raw_data_r_r_reg_n_0_[54] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[55]),
        .Q(\raw_data_r_r_reg_n_0_[55] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[56]),
        .Q(\raw_data_r_r_reg_n_0_[56] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[57]),
        .Q(\raw_data_r_r_reg_n_0_[57] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[58]),
        .Q(\raw_data_r_r_reg_n_0_[58] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[59]),
        .Q(\raw_data_r_r_reg_n_0_[59] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[5]),
        .Q(\raw_data_r_r_reg_n_0_[5] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[60]),
        .Q(\raw_data_r_r_reg_n_0_[60] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[61]),
        .Q(\raw_data_r_r_reg_n_0_[61] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[62]),
        .Q(\raw_data_r_r_reg_n_0_[62] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[63]),
        .Q(\raw_data_r_r_reg_n_0_[63] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[64]),
        .Q(\raw_data_r_r_reg_n_0_[64] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[65]),
        .Q(\raw_data_r_r_reg_n_0_[65] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[66]),
        .Q(p_0_in3_in),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[6]),
        .Q(\raw_data_r_r_reg_n_0_[6] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[7]),
        .Q(\raw_data_r_r_reg_n_0_[7] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[8]),
        .Q(\raw_data_r_r_reg_n_0_[8] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[9]),
        .Q(\raw_data_r_r_reg_n_0_[9] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[0]),
        .Q(raw_data_r[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[10]),
        .Q(raw_data_r[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[11]),
        .Q(raw_data_r[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[12]),
        .Q(raw_data_r[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[13]),
        .Q(raw_data_r[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[14]),
        .Q(raw_data_r[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[15]),
        .Q(raw_data_r[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[16]),
        .Q(raw_data_r[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[17]),
        .Q(raw_data_r[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[18]),
        .Q(raw_data_r[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[19]),
        .Q(raw_data_r[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[1]),
        .Q(raw_data_r[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[20]),
        .Q(raw_data_r[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[21]),
        .Q(raw_data_r[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[22]),
        .Q(raw_data_r[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[23]),
        .Q(raw_data_r[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[24]),
        .Q(raw_data_r[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[25]),
        .Q(raw_data_r[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[26]),
        .Q(raw_data_r[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[27]),
        .Q(raw_data_r[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[28]),
        .Q(raw_data_r[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[29]),
        .Q(raw_data_r[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[2]),
        .Q(raw_data_r[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[30]),
        .Q(raw_data_r[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[31]),
        .Q(raw_data_r[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[32]),
        .Q(raw_data_r[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[33]),
        .Q(raw_data_r[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[34]),
        .Q(raw_data_r[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[35]),
        .Q(raw_data_r[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[36]),
        .Q(raw_data_r[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[37]),
        .Q(raw_data_r[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[38]),
        .Q(raw_data_r[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[39]),
        .Q(raw_data_r[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[3]),
        .Q(raw_data_r[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[40]),
        .Q(raw_data_r[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[41]),
        .Q(raw_data_r[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[42]),
        .Q(raw_data_r[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[43]),
        .Q(raw_data_r[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[44]),
        .Q(raw_data_r[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[45]),
        .Q(raw_data_r[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[46]),
        .Q(raw_data_r[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[47]),
        .Q(raw_data_r[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[48]),
        .Q(raw_data_r[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[49]),
        .Q(raw_data_r[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[4]),
        .Q(raw_data_r[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[50]),
        .Q(raw_data_r[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[51]),
        .Q(raw_data_r[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[52]),
        .Q(raw_data_r[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[53]),
        .Q(raw_data_r[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[54]),
        .Q(raw_data_r[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[55]),
        .Q(raw_data_r[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[56]),
        .Q(raw_data_r[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[57]),
        .Q(raw_data_r[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[58]),
        .Q(raw_data_r[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[59]),
        .Q(raw_data_r[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[5]),
        .Q(raw_data_r[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[60]),
        .Q(raw_data_r[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[61]),
        .Q(raw_data_r[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[62]),
        .Q(raw_data_r[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[63]),
        .Q(raw_data_r[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[64]),
        .Q(raw_data_r[64]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[65]),
        .Q(raw_data_r[65]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[66]),
        .Q(raw_data_r[66]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[6]),
        .Q(raw_data_r[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[7]),
        .Q(raw_data_r[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[8]),
        .Q(raw_data_r[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[9]),
        .Q(raw_data_r[9]),
        .R(1'b0));
  FDRE rd_err_pre_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(rd_err_c),
        .Q(rd_err_pre),
        .R(do_rd_en));
  FDRE rd_err_q_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(rd_err_pre),
        .Q(rxbuferr_out_i[0]),
        .R(do_rd_en));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    rxfsm_reset_i_inferred_i_1
       (.I0(allow_block_sync_propagation_reg),
        .I1(LINK_RESET_OUT_reg),
        .I2(link_reset_0_c),
        .I3(hard_err_rst_int),
        .O(rxfsm_reset_i));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sym_dec_i/RX_DATA_REG[63]_i_1 
       (.I0(hold_reg_r),
        .O(hold_reg_r_reg_1));
  aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized3 u_cdc_overflow_flag_c
       (.cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .full(overflow_flag_c),
        .s_level_out_d5_reg_0(s_level_out_d5_reg));
  aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized0_27 u_cdc_rxlossofsync_in
       (.in0(in0),
        .s_level_out_d5_reg_0(u_cdc_rxlossofsync_in_n_0),
        .s_level_out_d5_reg_1(s_level_out_d5_reg),
        .stg5(stg5));
  aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized3_28 u_cdc_wr_err_rd_clk
       (.cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .out(wr_err_rd_clk_pre),
        .overflow(wr_err_c),
        .s_level_out_d5_reg_0(s_level_out_d5_reg));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_29 u_rst_sync_btf_sync
       (.in0(valid_btf_detect_extend_r2),
        .init_clk(init_clk),
        .stg3_reg_0(u_rst_sync_btf_sync_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    underflow_flag_r1_i_1
       (.I0(underflow_flag_c),
        .I1(buffer_too_empty_c),
        .O(underflow_flag_r10));
  FDSE underflow_flag_r1_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(underflow_flag_r10),
        .Q(underflow_flag_r1),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r2_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(underflow_flag_r1),
        .Q(underflow_flag_r2),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r3_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(underflow_flag_r2),
        .Q(underflow_flag_r3),
        .S(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    valid_btf_detect_dlyd1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_rst_sync_btf_sync_n_0),
        .Q(valid_btf_detect_dlyd1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    valid_btf_detect_extend_r20
       (.I0(valid_btf_detect_extend_r[0]),
        .I1(valid_btf_detect_extend_r[3]),
        .I2(valid_btf_detect_extend_r[4]),
        .I3(valid_btf_detect_extend_r[1]),
        .I4(valid_btf_detect_extend_r[2]),
        .O(valid_btf_detect_extend_r20_n_0));
  FDRE valid_btf_detect_extend_r2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r20_n_0),
        .Q(valid_btf_detect_extend_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[1]),
        .Q(valid_btf_detect_extend_r[0]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[2]),
        .Q(valid_btf_detect_extend_r[1]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[3]),
        .Q(valid_btf_detect_extend_r[2]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[4]),
        .Q(valid_btf_detect_extend_r[3]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect),
        .Q(valid_btf_detect_extend_r[4]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  (* shift_extract = "{no}" *) 
  FDRE valid_btf_detect_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_8_in),
        .Q(valid_btf_detect),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_rd_en[0]_i_1 
       (.I0(wait_for_rd_en[0]),
        .O(\wait_for_rd_en[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_rd_en[1]_i_1 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .O(\wait_for_rd_en[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \wait_for_rd_en[2]_i_1 
       (.I0(wait_for_rd_en[1]),
        .I1(wait_for_rd_en[2]),
        .O(\wait_for_rd_en[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_rd_en[2]_i_2 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .I2(wait_for_rd_en[2]),
        .O(\wait_for_rd_en[2]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[0] 
       (.C(s_level_out_d5_reg),
        .CE(\wait_for_rd_en[2]_i_1_n_0 ),
        .D(\wait_for_rd_en[0]_i_1_n_0 ),
        .Q(wait_for_rd_en[0]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[1] 
       (.C(s_level_out_d5_reg),
        .CE(\wait_for_rd_en[2]_i_1_n_0 ),
        .D(\wait_for_rd_en[1]_i_1_n_0 ),
        .Q(wait_for_rd_en[1]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[2] 
       (.C(s_level_out_d5_reg),
        .CE(\wait_for_rd_en[2]_i_1_n_0 ),
        .D(\wait_for_rd_en[2]_i_2_n_0 ),
        .Q(wait_for_rd_en[2]),
        .R(cbcc_fifo_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[0]_i_1 
       (.I0(wait_for_wr_en_reg[0]),
        .O(p_0_in__8[0]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_wr_en[1]_i_1 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .O(p_0_in__8[1]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_wr_en[2]_i_1 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[2]),
        .O(p_0_in__8[2]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wait_for_wr_en[3]_i_1 
       (.I0(wait_for_wr_en_reg[1]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[2]),
        .I3(wait_for_wr_en_reg[3]),
        .O(p_0_in__8[3]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wait_for_wr_en[4]_i_1 
       (.I0(wait_for_wr_en_reg[2]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[1]),
        .I3(wait_for_wr_en_reg[3]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__8[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[5]_i_1 
       (.I0(wait_for_wr_en_reg[5]),
        .O(\wait_for_wr_en[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \wait_for_wr_en[5]_i_2 
       (.I0(wait_for_wr_en_reg[3]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[0]),
        .I3(wait_for_wr_en_reg[2]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__8[5]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\wait_for_wr_en[5]_i_1_n_0 ),
        .D(p_0_in__8[0]),
        .Q(wait_for_wr_en_reg[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\wait_for_wr_en[5]_i_1_n_0 ),
        .D(p_0_in__8[1]),
        .Q(wait_for_wr_en_reg[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\wait_for_wr_en[5]_i_1_n_0 ),
        .D(p_0_in__8[2]),
        .Q(wait_for_wr_en_reg[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\wait_for_wr_en[5]_i_1_n_0 ),
        .D(p_0_in__8[3]),
        .Q(wait_for_wr_en_reg[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\wait_for_wr_en[5]_i_1_n_0 ),
        .D(p_0_in__8[4]),
        .Q(wait_for_wr_en_reg[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\wait_for_wr_en[5]_i_1_n_0 ),
        .D(p_0_in__8[5]),
        .Q(wait_for_wr_en_reg[5]),
        .R(SR));
  (* srl_bus_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[0]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[0]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[0]),
        .Q(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[1]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[1]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[1]),
        .Q(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[2]),
        .Q(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[3]),
        .Q(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[4]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[4]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[4]),
        .Q(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[5]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[5]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[5]),
        .Q(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE wr_err_rd_clk_sync_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(wr_err_rd_clk_pre),
        .Q(rxbuferr_out_i[1]),
        .R(do_rd_en));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_monitor_flag[0]_i_1 
       (.I0(wr_monitor_flag_reg[0]),
        .O(p_0_in__9[0]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_monitor_flag[1]_i_1 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .O(p_0_in__9[1]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_monitor_flag[2]_i_1 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .I2(wr_monitor_flag_reg[2]),
        .O(p_0_in__9[2]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_monitor_flag[3]_i_1 
       (.I0(wr_monitor_flag_reg[1]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[2]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__9[3]));
  LUT6 #(
    .INIT(64'h0000000022222AAA)) 
    \wr_monitor_flag[4]_i_1 
       (.I0(new_do_wr_en),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[0]),
        .I3(wr_monitor_flag_reg[1]),
        .I4(wr_monitor_flag_reg[2]),
        .I5(wr_monitor_flag_reg[4]),
        .O(wr_monitor_flag));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \wr_monitor_flag[4]_i_2 
       (.I0(wr_monitor_flag_reg[2]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__9[4]));
  FDRE \wr_monitor_flag_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__9[0]),
        .Q(wr_monitor_flag_reg[0]),
        .R(\wr_monitor_flag_reg[0]_0 ));
  FDRE \wr_monitor_flag_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__9[1]),
        .Q(wr_monitor_flag_reg[1]),
        .R(\wr_monitor_flag_reg[0]_0 ));
  FDRE \wr_monitor_flag_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__9[2]),
        .Q(wr_monitor_flag_reg[2]),
        .R(\wr_monitor_flag_reg[0]_0 ));
  FDRE \wr_monitor_flag_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__9[3]),
        .Q(wr_monitor_flag_reg[3]),
        .R(\wr_monitor_flag_reg[0]_0 ));
  FDRE \wr_monitor_flag_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__9[4]),
        .Q(wr_monitor_flag_reg[4]),
        .R(\wr_monitor_flag_reg[0]_0 ));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_CLOCK_MODULE
   (CLK,
    mmcm_not_locked_out,
    mmcm_not_locked_out2,
    tx_out_clk,
    bufg_gt_clr_out,
    lopt,
    lopt_1,
    lopt_2);
  output CLK;
  output mmcm_not_locked_out;
  output mmcm_not_locked_out2;
  input tx_out_clk;
  input bufg_gt_clr_out;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire CLK;
  wire bufg_gt_clr_out;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire mmcm_not_locked_out;
  wire mmcm_not_locked_out2;
  wire tx_out_clk;

  aurora_64b66b_SL_aurora_64b66b_SL_ultrascale_tx_userclk ultrascale_tx_userclk_1
       (.bufg_gt_clr_out(bufg_gt_clr_out),
        .\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 (CLK),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mmcm_not_locked_out(mmcm_not_locked_out),
        .mmcm_not_locked_out2(mmcm_not_locked_out2),
        .tx_out_clk(tx_out_clk));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_DESCRAMBLER_64B66B
   (CC_detect_pulse_i,
    p_8_in,
    UNSCRAMBLED_DATA_OUT,
    CB_detect0,
    in0,
    CC_detect_dlyd1,
    D,
    E,
    Q,
    gtwiz_userclk_rx_usrclk_out);
  output CC_detect_pulse_i;
  output p_8_in;
  output [63:0]UNSCRAMBLED_DATA_OUT;
  output CB_detect0;
  input in0;
  input CC_detect_dlyd1;
  input [2:0]D;
  input [0:0]E;
  input [63:0]Q;
  input gtwiz_userclk_rx_usrclk_out;

  wire CB_detect0;
  wire CC_detect_dlyd1;
  wire CC_detect_dlyd1_i_2_n_0;
  wire CC_detect_dlyd1_i_3_n_0;
  wire CC_detect_dlyd1_i_4_n_0;
  wire CC_detect_dlyd1_i_5_n_0;
  wire CC_detect_pulse_i;
  wire [2:0]D;
  wire [0:0]E;
  wire [63:0]Q;
  wire [63:0]UNSCRAMBLED_DATA_OUT;
  wire \descrambler[57]_i_1_n_0 ;
  wire \descrambler_reg_n_0_[39] ;
  wire \descrambler_reg_n_0_[40] ;
  wire \descrambler_reg_n_0_[41] ;
  wire \descrambler_reg_n_0_[42] ;
  wire \descrambler_reg_n_0_[43] ;
  wire \descrambler_reg_n_0_[44] ;
  wire \descrambler_reg_n_0_[45] ;
  wire \descrambler_reg_n_0_[46] ;
  wire \descrambler_reg_n_0_[47] ;
  wire \descrambler_reg_n_0_[48] ;
  wire \descrambler_reg_n_0_[49] ;
  wire \descrambler_reg_n_0_[50] ;
  wire \descrambler_reg_n_0_[51] ;
  wire \descrambler_reg_n_0_[52] ;
  wire \descrambler_reg_n_0_[53] ;
  wire \descrambler_reg_n_0_[54] ;
  wire \descrambler_reg_n_0_[55] ;
  wire \descrambler_reg_n_0_[56] ;
  wire \descrambler_reg_n_0_[57] ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_8_in;
  wire p_97_in;
  wire unscrambled_data_i0;
  wire unscrambled_data_i0100_out;
  wire unscrambled_data_i0104_out;
  wire unscrambled_data_i0108_out;
  wire unscrambled_data_i0112_out;
  wire unscrambled_data_i0116_out;
  wire unscrambled_data_i0120_out;
  wire unscrambled_data_i0124_out;
  wire unscrambled_data_i0128_out;
  wire unscrambled_data_i012_out;
  wire unscrambled_data_i0132_out;
  wire unscrambled_data_i0136_out;
  wire unscrambled_data_i0140_out;
  wire unscrambled_data_i0144_out;
  wire unscrambled_data_i0148_out;
  wire unscrambled_data_i0152_out;
  wire unscrambled_data_i0156_out;
  wire unscrambled_data_i0160_out;
  wire unscrambled_data_i0164_out;
  wire unscrambled_data_i0168_out;
  wire unscrambled_data_i016_out;
  wire unscrambled_data_i0172_out;
  wire unscrambled_data_i0176_out;
  wire unscrambled_data_i0180_out;
  wire unscrambled_data_i0184_out;
  wire unscrambled_data_i0188_out;
  wire unscrambled_data_i0192_out;
  wire unscrambled_data_i0196_out;
  wire unscrambled_data_i0200_out;
  wire unscrambled_data_i0204_out;
  wire unscrambled_data_i0208_out;
  wire unscrambled_data_i020_out;
  wire unscrambled_data_i0212_out;
  wire unscrambled_data_i0216_out;
  wire unscrambled_data_i0220_out;
  wire unscrambled_data_i0224_out;
  wire unscrambled_data_i0228_out;
  wire unscrambled_data_i0232_out;
  wire unscrambled_data_i0236_out;
  wire unscrambled_data_i0240_out;
  wire unscrambled_data_i0244_out;
  wire unscrambled_data_i0248_out;
  wire unscrambled_data_i024_out;
  wire unscrambled_data_i0252_out;
  wire unscrambled_data_i028_out;
  wire unscrambled_data_i032_out;
  wire unscrambled_data_i036_out;
  wire unscrambled_data_i040_out;
  wire unscrambled_data_i044_out;
  wire unscrambled_data_i048_out;
  wire unscrambled_data_i04_out;
  wire unscrambled_data_i052_out;
  wire unscrambled_data_i056_out;
  wire unscrambled_data_i060_out;
  wire unscrambled_data_i064_out;
  wire unscrambled_data_i068_out;
  wire unscrambled_data_i072_out;
  wire unscrambled_data_i076_out;
  wire unscrambled_data_i080_out;
  wire unscrambled_data_i084_out;
  wire unscrambled_data_i088_out;
  wire unscrambled_data_i08_out;
  wire unscrambled_data_i092_out;
  wire unscrambled_data_i096_out;

  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CB_detect_dlyd0p5_i_1
       (.I0(CC_detect_dlyd1_i_2_n_0),
        .I1(CC_detect_dlyd1_i_4_n_0),
        .I2(UNSCRAMBLED_DATA_OUT[54]),
        .I3(UNSCRAMBLED_DATA_OUT[55]),
        .I4(D[2]),
        .I5(CC_detect_dlyd1_i_3_n_0),
        .O(CB_detect0));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CC_detect_dlyd1_i_1
       (.I0(CC_detect_dlyd1_i_2_n_0),
        .I1(CC_detect_dlyd1_i_3_n_0),
        .I2(D[2]),
        .I3(UNSCRAMBLED_DATA_OUT[54]),
        .I4(UNSCRAMBLED_DATA_OUT[55]),
        .I5(CC_detect_dlyd1_i_4_n_0),
        .O(p_8_in));
  LUT5 #(
    .INIT(32'h00000001)) 
    CC_detect_dlyd1_i_2
       (.I0(UNSCRAMBLED_DATA_OUT[56]),
        .I1(UNSCRAMBLED_DATA_OUT[58]),
        .I2(UNSCRAMBLED_DATA_OUT[48]),
        .I3(UNSCRAMBLED_DATA_OUT[52]),
        .I4(CC_detect_dlyd1_i_5_n_0),
        .O(CC_detect_dlyd1_i_2_n_0));
  LUT4 #(
    .INIT(16'hFF7F)) 
    CC_detect_dlyd1_i_3
       (.I0(UNSCRAMBLED_DATA_OUT[60]),
        .I1(D[1]),
        .I2(UNSCRAMBLED_DATA_OUT[61]),
        .I3(D[0]),
        .O(CC_detect_dlyd1_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFF7)) 
    CC_detect_dlyd1_i_4
       (.I0(UNSCRAMBLED_DATA_OUT[59]),
        .I1(UNSCRAMBLED_DATA_OUT[62]),
        .I2(UNSCRAMBLED_DATA_OUT[51]),
        .I3(UNSCRAMBLED_DATA_OUT[53]),
        .O(CC_detect_dlyd1_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CC_detect_dlyd1_i_5
       (.I0(UNSCRAMBLED_DATA_OUT[50]),
        .I1(UNSCRAMBLED_DATA_OUT[57]),
        .I2(UNSCRAMBLED_DATA_OUT[63]),
        .I3(UNSCRAMBLED_DATA_OUT[49]),
        .O(CC_detect_dlyd1_i_5_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    CC_detect_pulse_r_i_1
       (.I0(p_8_in),
        .I1(CC_detect_dlyd1),
        .O(CC_detect_pulse_i));
  LUT1 #(
    .INIT(2'h1)) 
    \descrambler[57]_i_1 
       (.I0(in0),
        .O(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[0]),
        .Q(p_97_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[10]),
        .Q(p_137_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[11]),
        .Q(p_141_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[12]),
        .Q(p_145_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[13]),
        .Q(p_149_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[14]),
        .Q(p_153_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[15]),
        .Q(p_157_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[16]),
        .Q(p_161_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[17]),
        .Q(p_165_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[18]),
        .Q(p_169_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[19]),
        .Q(p_173_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[1]),
        .Q(p_101_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[20]),
        .Q(p_177_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[21]),
        .Q(p_181_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[22]),
        .Q(p_185_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[23]),
        .Q(p_189_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[24]),
        .Q(p_193_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[25]),
        .Q(p_197_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[26]),
        .Q(p_201_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[27]),
        .Q(p_205_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[28]),
        .Q(p_209_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[29]),
        .Q(p_213_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[2]),
        .Q(p_105_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[30]),
        .Q(p_217_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[31]),
        .Q(p_221_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[32]),
        .Q(p_225_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[33]),
        .Q(p_229_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[34]),
        .Q(p_233_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[35]),
        .Q(p_237_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[36]),
        .Q(p_241_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[37]),
        .Q(p_245_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[38]),
        .Q(p_249_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[39]),
        .Q(\descrambler_reg_n_0_[39] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[3]),
        .Q(p_109_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[40]),
        .Q(\descrambler_reg_n_0_[40] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[41]),
        .Q(\descrambler_reg_n_0_[41] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[42]),
        .Q(\descrambler_reg_n_0_[42] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[43]),
        .Q(\descrambler_reg_n_0_[43] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[44]),
        .Q(\descrambler_reg_n_0_[44] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[45]),
        .Q(\descrambler_reg_n_0_[45] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[46]),
        .Q(\descrambler_reg_n_0_[46] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[47]),
        .Q(\descrambler_reg_n_0_[47] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[48]),
        .Q(\descrambler_reg_n_0_[48] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[49]),
        .Q(\descrambler_reg_n_0_[49] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[4]),
        .Q(p_113_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[50]),
        .Q(\descrambler_reg_n_0_[50] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[51]),
        .Q(\descrambler_reg_n_0_[51] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[52]),
        .Q(\descrambler_reg_n_0_[52] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[53]),
        .Q(\descrambler_reg_n_0_[53] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[54]),
        .Q(\descrambler_reg_n_0_[54] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[55]),
        .Q(\descrambler_reg_n_0_[55] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[56]),
        .Q(\descrambler_reg_n_0_[56] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[57]),
        .Q(\descrambler_reg_n_0_[57] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[5]),
        .Q(p_117_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[6]),
        .Q(p_121_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[7]),
        .Q(p_125_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[8]),
        .Q(p_129_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[9]),
        .Q(p_133_in),
        .R(\descrambler[57]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[0]_i_1 
       (.I0(Q[39]),
        .I1(Q[0]),
        .I2(Q[58]),
        .O(unscrambled_data_i0));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[10]_i_1 
       (.I0(Q[49]),
        .I1(Q[10]),
        .I2(p_113_in),
        .O(unscrambled_data_i040_out));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[11]_i_1 
       (.I0(Q[50]),
        .I1(Q[11]),
        .I2(p_117_in),
        .O(unscrambled_data_i044_out));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[12]_i_1 
       (.I0(Q[51]),
        .I1(Q[12]),
        .I2(p_121_in),
        .O(unscrambled_data_i048_out));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[13]_i_1 
       (.I0(Q[52]),
        .I1(Q[13]),
        .I2(p_125_in),
        .O(unscrambled_data_i052_out));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[14]_i_1 
       (.I0(Q[53]),
        .I1(Q[14]),
        .I2(p_129_in),
        .O(unscrambled_data_i056_out));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[15]_i_1 
       (.I0(Q[54]),
        .I1(Q[15]),
        .I2(p_133_in),
        .O(unscrambled_data_i060_out));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[16]_i_1 
       (.I0(Q[55]),
        .I1(Q[16]),
        .I2(p_137_in),
        .O(unscrambled_data_i064_out));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[17]_i_1 
       (.I0(Q[56]),
        .I1(Q[17]),
        .I2(p_141_in),
        .O(unscrambled_data_i068_out));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[18]_i_1 
       (.I0(Q[57]),
        .I1(Q[18]),
        .I2(p_145_in),
        .O(unscrambled_data_i072_out));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[19]_i_1 
       (.I0(Q[58]),
        .I1(Q[19]),
        .I2(p_149_in),
        .O(unscrambled_data_i076_out));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[1]_i_1 
       (.I0(Q[40]),
        .I1(Q[1]),
        .I2(Q[59]),
        .O(unscrambled_data_i04_out));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[20]_i_1 
       (.I0(Q[59]),
        .I1(Q[20]),
        .I2(p_153_in),
        .O(unscrambled_data_i080_out));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[21]_i_1 
       (.I0(Q[60]),
        .I1(Q[21]),
        .I2(p_157_in),
        .O(unscrambled_data_i084_out));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[22]_i_1 
       (.I0(Q[61]),
        .I1(Q[22]),
        .I2(p_161_in),
        .O(unscrambled_data_i088_out));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[23]_i_1 
       (.I0(Q[62]),
        .I1(Q[23]),
        .I2(p_165_in),
        .O(unscrambled_data_i092_out));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[24]_i_1 
       (.I0(Q[63]),
        .I1(Q[24]),
        .I2(p_169_in),
        .O(unscrambled_data_i096_out));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[25]_i_1 
       (.I0(p_97_in),
        .I1(Q[25]),
        .I2(p_173_in),
        .O(unscrambled_data_i0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[26]_i_1 
       (.I0(p_101_in),
        .I1(Q[26]),
        .I2(p_177_in),
        .O(unscrambled_data_i0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[27]_i_1 
       (.I0(p_105_in),
        .I1(Q[27]),
        .I2(p_181_in),
        .O(unscrambled_data_i0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[28]_i_1 
       (.I0(p_109_in),
        .I1(Q[28]),
        .I2(p_185_in),
        .O(unscrambled_data_i0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[29]_i_1 
       (.I0(p_113_in),
        .I1(Q[29]),
        .I2(p_189_in),
        .O(unscrambled_data_i0116_out));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[2]_i_1 
       (.I0(Q[41]),
        .I1(Q[2]),
        .I2(Q[60]),
        .O(unscrambled_data_i08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[30]_i_1 
       (.I0(p_117_in),
        .I1(Q[30]),
        .I2(p_193_in),
        .O(unscrambled_data_i0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[31]_i_1 
       (.I0(p_121_in),
        .I1(Q[31]),
        .I2(p_197_in),
        .O(unscrambled_data_i0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[32]_i_1 
       (.I0(p_125_in),
        .I1(Q[32]),
        .I2(p_201_in),
        .O(unscrambled_data_i0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[33]_i_1 
       (.I0(p_129_in),
        .I1(Q[33]),
        .I2(p_205_in),
        .O(unscrambled_data_i0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[34]_i_1 
       (.I0(p_133_in),
        .I1(Q[34]),
        .I2(p_209_in),
        .O(unscrambled_data_i0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[35]_i_1 
       (.I0(p_137_in),
        .I1(Q[35]),
        .I2(p_213_in),
        .O(unscrambled_data_i0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[36]_i_1 
       (.I0(p_141_in),
        .I1(Q[36]),
        .I2(p_217_in),
        .O(unscrambled_data_i0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[37]_i_1 
       (.I0(p_145_in),
        .I1(Q[37]),
        .I2(p_221_in),
        .O(unscrambled_data_i0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[38]_i_1 
       (.I0(p_149_in),
        .I1(Q[38]),
        .I2(p_225_in),
        .O(unscrambled_data_i0152_out));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[39]_i_1 
       (.I0(p_153_in),
        .I1(Q[39]),
        .I2(p_229_in),
        .O(unscrambled_data_i0156_out));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[3]_i_1 
       (.I0(Q[42]),
        .I1(Q[3]),
        .I2(Q[61]),
        .O(unscrambled_data_i012_out));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[40]_i_1 
       (.I0(p_157_in),
        .I1(Q[40]),
        .I2(p_233_in),
        .O(unscrambled_data_i0160_out));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[41]_i_1 
       (.I0(p_161_in),
        .I1(Q[41]),
        .I2(p_237_in),
        .O(unscrambled_data_i0164_out));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[42]_i_1 
       (.I0(p_165_in),
        .I1(Q[42]),
        .I2(p_241_in),
        .O(unscrambled_data_i0168_out));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[43]_i_1 
       (.I0(p_169_in),
        .I1(Q[43]),
        .I2(p_245_in),
        .O(unscrambled_data_i0172_out));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[44]_i_1 
       (.I0(p_173_in),
        .I1(Q[44]),
        .I2(p_249_in),
        .O(unscrambled_data_i0176_out));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[45]_i_1 
       (.I0(p_177_in),
        .I1(Q[45]),
        .I2(\descrambler_reg_n_0_[39] ),
        .O(unscrambled_data_i0180_out));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[46]_i_1 
       (.I0(p_181_in),
        .I1(Q[46]),
        .I2(\descrambler_reg_n_0_[40] ),
        .O(unscrambled_data_i0184_out));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[47]_i_1 
       (.I0(p_185_in),
        .I1(Q[47]),
        .I2(\descrambler_reg_n_0_[41] ),
        .O(unscrambled_data_i0188_out));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[48]_i_1 
       (.I0(p_189_in),
        .I1(Q[48]),
        .I2(\descrambler_reg_n_0_[42] ),
        .O(unscrambled_data_i0192_out));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[49]_i_1 
       (.I0(p_193_in),
        .I1(Q[49]),
        .I2(\descrambler_reg_n_0_[43] ),
        .O(unscrambled_data_i0196_out));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[4]_i_1 
       (.I0(Q[43]),
        .I1(Q[4]),
        .I2(Q[62]),
        .O(unscrambled_data_i016_out));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[50]_i_1 
       (.I0(p_197_in),
        .I1(Q[50]),
        .I2(\descrambler_reg_n_0_[44] ),
        .O(unscrambled_data_i0200_out));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[51]_i_1 
       (.I0(p_201_in),
        .I1(Q[51]),
        .I2(\descrambler_reg_n_0_[45] ),
        .O(unscrambled_data_i0204_out));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[52]_i_1 
       (.I0(p_205_in),
        .I1(Q[52]),
        .I2(\descrambler_reg_n_0_[46] ),
        .O(unscrambled_data_i0208_out));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[53]_i_1 
       (.I0(p_209_in),
        .I1(Q[53]),
        .I2(\descrambler_reg_n_0_[47] ),
        .O(unscrambled_data_i0212_out));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[54]_i_1 
       (.I0(p_213_in),
        .I1(Q[54]),
        .I2(\descrambler_reg_n_0_[48] ),
        .O(unscrambled_data_i0216_out));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[55]_i_1 
       (.I0(p_217_in),
        .I1(Q[55]),
        .I2(\descrambler_reg_n_0_[49] ),
        .O(unscrambled_data_i0220_out));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[56]_i_1 
       (.I0(p_221_in),
        .I1(Q[56]),
        .I2(\descrambler_reg_n_0_[50] ),
        .O(unscrambled_data_i0224_out));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[57]_i_1 
       (.I0(p_225_in),
        .I1(Q[57]),
        .I2(\descrambler_reg_n_0_[51] ),
        .O(unscrambled_data_i0228_out));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[58]_i_1 
       (.I0(p_229_in),
        .I1(Q[58]),
        .I2(\descrambler_reg_n_0_[52] ),
        .O(unscrambled_data_i0232_out));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[59]_i_1 
       (.I0(p_233_in),
        .I1(Q[59]),
        .I2(\descrambler_reg_n_0_[53] ),
        .O(unscrambled_data_i0236_out));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[5]_i_1 
       (.I0(Q[44]),
        .I1(Q[5]),
        .I2(Q[63]),
        .O(unscrambled_data_i020_out));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[60]_i_1 
       (.I0(p_237_in),
        .I1(Q[60]),
        .I2(\descrambler_reg_n_0_[54] ),
        .O(unscrambled_data_i0240_out));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[61]_i_1 
       (.I0(p_241_in),
        .I1(Q[61]),
        .I2(\descrambler_reg_n_0_[55] ),
        .O(unscrambled_data_i0244_out));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[62]_i_1 
       (.I0(p_245_in),
        .I1(Q[62]),
        .I2(\descrambler_reg_n_0_[56] ),
        .O(unscrambled_data_i0248_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[63]_i_1 
       (.I0(p_249_in),
        .I1(Q[63]),
        .I2(\descrambler_reg_n_0_[57] ),
        .O(unscrambled_data_i0252_out));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[6]_i_1 
       (.I0(Q[45]),
        .I1(Q[6]),
        .I2(p_97_in),
        .O(unscrambled_data_i024_out));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[7]_i_1 
       (.I0(Q[46]),
        .I1(Q[7]),
        .I2(p_101_in),
        .O(unscrambled_data_i028_out));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[8]_i_1 
       (.I0(Q[47]),
        .I1(Q[8]),
        .I2(p_105_in),
        .O(unscrambled_data_i032_out));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[9]_i_1 
       (.I0(Q[48]),
        .I1(Q[9]),
        .I2(p_109_in),
        .O(unscrambled_data_i036_out));
  FDRE \unscrambled_data_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0),
        .Q(UNSCRAMBLED_DATA_OUT[0]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i040_out),
        .Q(UNSCRAMBLED_DATA_OUT[10]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i044_out),
        .Q(UNSCRAMBLED_DATA_OUT[11]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i048_out),
        .Q(UNSCRAMBLED_DATA_OUT[12]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i052_out),
        .Q(UNSCRAMBLED_DATA_OUT[13]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i056_out),
        .Q(UNSCRAMBLED_DATA_OUT[14]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i060_out),
        .Q(UNSCRAMBLED_DATA_OUT[15]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i064_out),
        .Q(UNSCRAMBLED_DATA_OUT[16]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i068_out),
        .Q(UNSCRAMBLED_DATA_OUT[17]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i072_out),
        .Q(UNSCRAMBLED_DATA_OUT[18]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i076_out),
        .Q(UNSCRAMBLED_DATA_OUT[19]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i04_out),
        .Q(UNSCRAMBLED_DATA_OUT[1]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i080_out),
        .Q(UNSCRAMBLED_DATA_OUT[20]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i084_out),
        .Q(UNSCRAMBLED_DATA_OUT[21]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i088_out),
        .Q(UNSCRAMBLED_DATA_OUT[22]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i092_out),
        .Q(UNSCRAMBLED_DATA_OUT[23]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i096_out),
        .Q(UNSCRAMBLED_DATA_OUT[24]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0100_out),
        .Q(UNSCRAMBLED_DATA_OUT[25]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0104_out),
        .Q(UNSCRAMBLED_DATA_OUT[26]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0108_out),
        .Q(UNSCRAMBLED_DATA_OUT[27]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0112_out),
        .Q(UNSCRAMBLED_DATA_OUT[28]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0116_out),
        .Q(UNSCRAMBLED_DATA_OUT[29]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i08_out),
        .Q(UNSCRAMBLED_DATA_OUT[2]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0120_out),
        .Q(UNSCRAMBLED_DATA_OUT[30]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0124_out),
        .Q(UNSCRAMBLED_DATA_OUT[31]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0128_out),
        .Q(UNSCRAMBLED_DATA_OUT[32]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0132_out),
        .Q(UNSCRAMBLED_DATA_OUT[33]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0136_out),
        .Q(UNSCRAMBLED_DATA_OUT[34]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0140_out),
        .Q(UNSCRAMBLED_DATA_OUT[35]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0144_out),
        .Q(UNSCRAMBLED_DATA_OUT[36]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0148_out),
        .Q(UNSCRAMBLED_DATA_OUT[37]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0152_out),
        .Q(UNSCRAMBLED_DATA_OUT[38]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0156_out),
        .Q(UNSCRAMBLED_DATA_OUT[39]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i012_out),
        .Q(UNSCRAMBLED_DATA_OUT[3]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0160_out),
        .Q(UNSCRAMBLED_DATA_OUT[40]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0164_out),
        .Q(UNSCRAMBLED_DATA_OUT[41]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0168_out),
        .Q(UNSCRAMBLED_DATA_OUT[42]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0172_out),
        .Q(UNSCRAMBLED_DATA_OUT[43]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0176_out),
        .Q(UNSCRAMBLED_DATA_OUT[44]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0180_out),
        .Q(UNSCRAMBLED_DATA_OUT[45]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0184_out),
        .Q(UNSCRAMBLED_DATA_OUT[46]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0188_out),
        .Q(UNSCRAMBLED_DATA_OUT[47]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0192_out),
        .Q(UNSCRAMBLED_DATA_OUT[48]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0196_out),
        .Q(UNSCRAMBLED_DATA_OUT[49]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i016_out),
        .Q(UNSCRAMBLED_DATA_OUT[4]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0200_out),
        .Q(UNSCRAMBLED_DATA_OUT[50]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0204_out),
        .Q(UNSCRAMBLED_DATA_OUT[51]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0208_out),
        .Q(UNSCRAMBLED_DATA_OUT[52]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0212_out),
        .Q(UNSCRAMBLED_DATA_OUT[53]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0216_out),
        .Q(UNSCRAMBLED_DATA_OUT[54]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0220_out),
        .Q(UNSCRAMBLED_DATA_OUT[55]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0224_out),
        .Q(UNSCRAMBLED_DATA_OUT[56]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0228_out),
        .Q(UNSCRAMBLED_DATA_OUT[57]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0232_out),
        .Q(UNSCRAMBLED_DATA_OUT[58]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0236_out),
        .Q(UNSCRAMBLED_DATA_OUT[59]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i020_out),
        .Q(UNSCRAMBLED_DATA_OUT[5]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0240_out),
        .Q(UNSCRAMBLED_DATA_OUT[60]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0244_out),
        .Q(UNSCRAMBLED_DATA_OUT[61]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0248_out),
        .Q(UNSCRAMBLED_DATA_OUT[62]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0252_out),
        .Q(UNSCRAMBLED_DATA_OUT[63]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i024_out),
        .Q(UNSCRAMBLED_DATA_OUT[6]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i028_out),
        .Q(UNSCRAMBLED_DATA_OUT[7]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i032_out),
        .Q(UNSCRAMBLED_DATA_OUT[8]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i036_out),
        .Q(UNSCRAMBLED_DATA_OUT[9]),
        .R(\descrambler[57]_i_1_n_0 ));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_ERR_DETECT
   (rx_header_err_r,
    soft_err_i,
    hard_err_i,
    rx_header_err_i,
    SOFT_ERR_reg_0,
    SOFT_ERR0,
    HARD_ERR_reg_0);
  output rx_header_err_r;
  output soft_err_i;
  output hard_err_i;
  input rx_header_err_i;
  input SOFT_ERR_reg_0;
  input SOFT_ERR0;
  input HARD_ERR_reg_0;

  wire HARD_ERR_reg_0;
  wire SOFT_ERR0;
  wire SOFT_ERR_reg_0;
  wire hard_err_i;
  wire rx_header_err_i;
  wire rx_header_err_r;
  wire soft_err_i;

  FDRE HARD_ERR_reg
       (.C(SOFT_ERR_reg_0),
        .CE(1'b1),
        .D(HARD_ERR_reg_0),
        .Q(hard_err_i),
        .R(1'b0));
  FDRE SOFT_ERR_reg
       (.C(SOFT_ERR_reg_0),
        .CE(1'b1),
        .D(SOFT_ERR0),
        .Q(soft_err_i),
        .R(1'b0));
  FDRE rx_header_err_r_reg
       (.C(SOFT_ERR_reg_0),
        .CE(1'b1),
        .D(rx_header_err_i),
        .Q(rx_header_err_r),
        .R(1'b0));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_GLOBAL_LOGIC
   (reset_lanes_i,
    gen_na_idles_i,
    CHANNEL_UP_RX_IF_reg,
    channel_up_tx_if,
    gen_ch_bond_i,
    hard_err,
    wait_for_lane_up_r_reg,
    R0,
    CHANNEL_UP_TX_IF_reg,
    SR,
    CHANNEL_UP_TX_IF_reg_0,
    reset_lanes_c,
    CHANNEL_UP_TX_IF_reg_1,
    wait_for_lane_up_r0,
    remote_ready_i,
    got_idles_i,
    sys_reset_out,
    txdatavalid_i,
    hard_err_i,
    gen_cc_i,
    GEN_SEP7_i_3,
    GEN_SEP7_i_3_0,
    GEN_SEP7_i_3_1,
    GEN_SEP7_i_3_2,
    GEN_SEP7_i_3_3,
    soft_err_i);
  output reset_lanes_i;
  output gen_na_idles_i;
  output CHANNEL_UP_RX_IF_reg;
  output channel_up_tx_if;
  output gen_ch_bond_i;
  output hard_err;
  output wait_for_lane_up_r_reg;
  output R0;
  output CHANNEL_UP_TX_IF_reg;
  output SR;
  output CHANNEL_UP_TX_IF_reg_0;
  input reset_lanes_c;
  input CHANNEL_UP_TX_IF_reg_1;
  input wait_for_lane_up_r0;
  input remote_ready_i;
  input got_idles_i;
  input sys_reset_out;
  input txdatavalid_i;
  input hard_err_i;
  input gen_cc_i;
  input GEN_SEP7_i_3;
  input GEN_SEP7_i_3_0;
  input GEN_SEP7_i_3_1;
  input GEN_SEP7_i_3_2;
  input GEN_SEP7_i_3_3;
  input soft_err_i;

  wire CHANNEL_UP_RX_IF_reg;
  wire CHANNEL_UP_TX_IF_reg;
  wire CHANNEL_UP_TX_IF_reg_0;
  wire CHANNEL_UP_TX_IF_reg_1;
  wire GEN_SEP7_i_3;
  wire GEN_SEP7_i_3_0;
  wire GEN_SEP7_i_3_1;
  wire GEN_SEP7_i_3_2;
  wire GEN_SEP7_i_3_3;
  wire R0;
  wire SR;
  wire channel_up_tx_if;
  wire gen_cc_i;
  wire gen_ch_bond_i;
  wire gen_na_idles_i;
  wire got_idles_i;
  wire hard_err;
  wire hard_err_i;
  wire remote_ready_i;
  wire reset_lanes_c;
  wire reset_lanes_i;
  wire soft_err_i;
  wire sys_reset_out;
  wire txdatavalid_i;
  wire wait_for_lane_up_r0;
  wire wait_for_lane_up_r_reg;

  aurora_64b66b_SL_aurora_64b66b_SL_CHANNEL_BOND_GEN channel_bond_gen_i
       (.gen_ch_bond_i(gen_ch_bond_i),
        .gen_ch_bond_int_reg_0(CHANNEL_UP_TX_IF_reg_1),
        .gen_ch_bond_int_reg_1(channel_up_tx_if),
        .sys_reset_out(sys_reset_out),
        .txdatavalid_i(txdatavalid_i));
  aurora_64b66b_SL_aurora_64b66b_SL_CHANNEL_ERR_DETECT channel_err_detect_i
       (.CHANNEL_HARD_ERR_reg_0(CHANNEL_UP_TX_IF_reg_1),
        .hard_err(hard_err),
        .hard_err_i(hard_err_i));
  aurora_64b66b_SL_aurora_64b66b_SL_CHANNEL_INIT_SM channel_init_sm_i
       (.CHANNEL_UP_RX_IF_reg_0(CHANNEL_UP_RX_IF_reg),
        .CHANNEL_UP_RX_IF_reg_1(SR),
        .CHANNEL_UP_TX_IF_reg_0(channel_up_tx_if),
        .CHANNEL_UP_TX_IF_reg_1(CHANNEL_UP_TX_IF_reg),
        .CHANNEL_UP_TX_IF_reg_2(CHANNEL_UP_TX_IF_reg_0),
        .CHANNEL_UP_TX_IF_reg_3(CHANNEL_UP_TX_IF_reg_1),
        .GEN_SEP7_i_3(GEN_SEP7_i_3),
        .GEN_SEP7_i_3_0(GEN_SEP7_i_3_0),
        .GEN_SEP7_i_3_1(GEN_SEP7_i_3_1),
        .GEN_SEP7_i_3_2(GEN_SEP7_i_3_2),
        .GEN_SEP7_i_3_3(GEN_SEP7_i_3_3),
        .R0(R0),
        .SR(gen_na_idles_i),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .got_idles_i(got_idles_i),
        .remote_ready_i(remote_ready_i),
        .reset_lanes_c(reset_lanes_c),
        .reset_lanes_i(reset_lanes_i),
        .soft_err_i(soft_err_i),
        .sys_reset_out(sys_reset_out),
        .wait_for_lane_up_r0(wait_for_lane_up_r0),
        .wait_for_lane_up_r_reg_0(wait_for_lane_up_r_reg));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_LANE_INIT_SM
   (lane_up_flop_i_0,
    rst_r_reg_0,
    enable_err_detect_i,
    rx_polarity_r_reg_0,
    in0,
    SOFT_ERR0,
    s_level_out_d1_aurora_64b66b_SL_cdc_to_reg,
    s_level_out_d5_reg,
    sys_reset_out,
    reset_count_r0,
    ready_r_reg0,
    reset_lanes_i,
    rx_lossofsync_i,
    rx_header_err_r,
    illegal_btf_i,
    Q,
    master_do_rd_en);
  output lane_up_flop_i_0;
  output rst_r_reg_0;
  output enable_err_detect_i;
  output rx_polarity_r_reg_0;
  output in0;
  output SOFT_ERR0;
  input s_level_out_d1_aurora_64b66b_SL_cdc_to_reg;
  input s_level_out_d5_reg;
  input sys_reset_out;
  input reset_count_r0;
  input ready_r_reg0;
  input reset_lanes_i;
  input rx_lossofsync_i;
  input rx_header_err_r;
  input illegal_btf_i;
  input [0:0]Q;
  input master_do_rd_en;

  wire [0:0]Q;
  wire SOFT_ERR0;
  wire align_r;
  wire align_r_i_2_n_0;
  wire begin_r;
  wire begin_r_i_2_n_0;
  wire check_polarity_r_i_1_n_0;
  wire count_8d_done_r;
  wire \counter1_r_reg_n_0_[1] ;
  wire \counter1_r_reg_n_0_[2] ;
  wire \counter1_r_reg_n_0_[3] ;
  wire enable_err_detect_i;
  wire illegal_btf_i;
  wire in0;
  wire lane_up_flop_i_0;
  wire master_do_rd_en;
  wire next_align_c;
  wire next_begin_c;
  wire \next_begin_c_inferred__1/i__n_0 ;
  wire next_polarity_c;
  wire next_ready_c;
  wire next_rst_c;
  wire [3:0]p_0_in;
  wire polarity_r;
  wire polarity_r_i_2_n_0;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_i_1_n_0;
  wire ready_r;
  wire ready_r_reg0;
  wire reset_count_r;
  wire reset_count_r0;
  wire reset_lanes_i;
  wire rst_r_i_2_n_0;
  wire rst_r_reg_0;
  wire rx_header_err_r;
  wire rx_lossofsync_i;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg_0;
  wire s_level_out_d1_aurora_64b66b_SL_cdc_to_reg;
  wire s_level_out_d5_reg;
  wire sys_reset_out;
  wire u_cdc_rxlossofsync_in_n_2;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;

  FDRE ENABLE_ERR_DETECT_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(ready_r),
        .Q(enable_err_detect_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hA8888888)) 
    SOFT_ERR_i_1
       (.I0(enable_err_detect_i),
        .I1(rx_header_err_r),
        .I2(illegal_btf_i),
        .I3(Q),
        .I4(master_do_rd_en),
        .O(SOFT_ERR0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_lane_0_i/lane_init_sm_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b0,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(s_level_out_d5_reg),
        .D(polarity_r),
        .Q(rx_polarity_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  LUT3 #(
    .INIT(8'h01)) 
    align_r_i_1
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r_i_2_n_0),
        .O(next_align_c));
  LUT6 #(
    .INIT(64'hFFFFFFC7FFFFFFF7)) 
    align_r_i_2
       (.I0(rx_lossofsync_i),
        .I1(align_r),
        .I2(rst_r_reg_0),
        .I3(begin_r),
        .I4(reset_lanes_i),
        .I5(count_8d_done_r),
        .O(align_r_i_2_n_0));
  FDRE align_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_align_c),
        .Q(align_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFDFDDD55)) 
    begin_r_i_2
       (.I0(\next_begin_c_inferred__1/i__n_0 ),
        .I1(reset_lanes_i),
        .I2(rx_lossofsync_i),
        .I3(align_r),
        .I4(ready_r),
        .O(begin_r_i_2_n_0));
  FDSE begin_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(ready_r_reg0));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    check_polarity_r_i_1
       (.I0(polarity_r),
        .I1(rx_polarity_dlyd_i),
        .I2(in0),
        .O(check_polarity_r_i_1_n_0));
  FDRE check_polarity_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(check_polarity_r_i_1_n_0),
        .Q(in0),
        .R(sys_reset_out));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \counter1_r[0]_i_1 
       (.I0(count_8d_done_r),
        .I1(\counter1_r_reg_n_0_[2] ),
        .I2(\counter1_r_reg_n_0_[3] ),
        .I3(\counter1_r_reg_n_0_[1] ),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \counter1_r[1]_i_1 
       (.I0(\counter1_r_reg_n_0_[1] ),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[2] ),
        .O(p_0_in[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \counter1_r[2]_i_1 
       (.I0(\counter1_r_reg_n_0_[2] ),
        .I1(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \counter1_r[3]_i_1 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in[0]));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[0] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(count_8d_done_r),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[1] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(\counter1_r_reg_n_0_[1] ),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[2] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(\counter1_r_reg_n_0_[2] ),
        .R(reset_count_r));
  FDSE #(
    .INIT(1'b1)) 
    \counter1_r_reg[3] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(\counter1_r_reg_n_0_[3] ),
        .S(reset_count_r));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDRE #(
    .INIT(1'b0)) 
    lane_up_flop_i
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(ready_r),
        .Q(lane_up_flop_i_0),
        .R(sys_reset_out));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \next_begin_c_inferred__1/i_ 
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r),
        .I3(rst_r_reg_0),
        .I4(begin_r),
        .O(\next_begin_c_inferred__1/i__n_0 ));
  LUT6 #(
    .INIT(64'h0000000001010155)) 
    polarity_r_i_1
       (.I0(reset_lanes_i),
        .I1(rx_polarity_dlyd_i),
        .I2(align_r),
        .I3(polarity_r),
        .I4(rx_lossofsync_i),
        .I5(polarity_r_i_2_n_0),
        .O(next_polarity_c));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'hFFFFEEEF)) 
    polarity_r_i_2
       (.I0(begin_r),
        .I1(rst_r_reg_0),
        .I2(polarity_r),
        .I3(align_r),
        .I4(ready_r),
        .O(polarity_r_i_2_n_0));
  FDRE polarity_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_polarity_c),
        .Q(polarity_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    prev_rx_polarity_r_i_1
       (.I0(rx_polarity_r_reg_0),
        .I1(rst_r_reg_0),
        .I2(rx_polarity_dlyd_i),
        .I3(polarity_r),
        .I4(prev_rx_polarity_r),
        .O(prev_rx_polarity_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    prev_rx_polarity_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(prev_rx_polarity_r_i_1_n_0),
        .Q(prev_rx_polarity_r),
        .R(sys_reset_out));
  FDRE ready_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(ready_r_reg0));
  FDRE reset_count_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(reset_count_r0),
        .Q(reset_count_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000F000B000000)) 
    rst_r_i_1
       (.I0(reset_lanes_i),
        .I1(count_8d_done_r),
        .I2(align_r),
        .I3(rst_r_i_2_n_0),
        .I4(rst_r_reg_0),
        .I5(begin_r),
        .O(next_rst_c));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h1)) 
    rst_r_i_2
       (.I0(polarity_r),
        .I1(ready_r),
        .O(rst_r_i_2_n_0));
  FDRE rst_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_rst_c),
        .Q(rst_r_reg_0),
        .R(ready_r_reg0));
  FDRE #(
    .INIT(1'b0)) 
    rx_polarity_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_2),
        .Q(rx_polarity_r_reg_0),
        .R(1'b0));
  aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync u_cdc_rxlossofsync_in
       (.align_r(align_r),
        .begin_r(begin_r),
        .begin_r_reg(begin_r_i_2_n_0),
        .next_begin_c(next_begin_c),
        .next_ready_c(next_ready_c),
        .polarity_r(polarity_r),
        .prev_rx_polarity_r(prev_rx_polarity_r),
        .prev_rx_polarity_r_reg(u_cdc_rxlossofsync_in_n_2),
        .ready_r(ready_r),
        .ready_r_reg(rst_r_reg_0),
        .reset_lanes_i(reset_lanes_i),
        .rx_lossofsync_i(rx_lossofsync_i),
        .rx_polarity_dlyd_i(rx_polarity_dlyd_i),
        .rx_polarity_r_reg(rx_polarity_r_reg_0),
        .s_level_out_d1_aurora_64b66b_SL_cdc_to_reg_0(s_level_out_d1_aurora_64b66b_SL_cdc_to_reg),
        .s_level_out_d5_reg_0(s_level_out_d5_reg),
        .sys_reset_out(sys_reset_out));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_MULTI_GT
   (gtwiz_userclk_rx_usrclk_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    D,
    cplllock_out,
    gt0_drpdo,
    gt0_drprdy,
    gt_powergood,
    txn,
    txp,
    rxbufstatus_out,
    rxdatavalid_out,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ,
    rxheadervalid_out,
    txbufstatus_out,
    tx_out_clk,
    bufg_gt_clr_out,
    out,
    E,
    rst_in_out_reg,
    rst_in_out_reg_0,
    SCRAMBLED_DATA_OUT,
    gt0_drpaddr,
    init_clk,
    gt0_drpdi,
    gt0_drpen,
    gt0_drpwe,
    gt_refclk1_out,
    rxn,
    rxp,
    loopback,
    gt_rxcdrovrden_in,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 ,
    Q,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 ,
    rst_in_sync3_reg,
    mmcm_not_locked_out2,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output gtwiz_userclk_rx_usrclk_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [63:0]D;
  output [0:0]cplllock_out;
  output [15:0]gt0_drpdo;
  output gt0_drprdy;
  output [0:0]gt_powergood;
  output txn;
  output txp;
  output [0:0]rxbufstatus_out;
  output [0:0]rxdatavalid_out;
  output [1:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ;
  output [0:0]rxheadervalid_out;
  output [0:0]txbufstatus_out;
  output tx_out_clk;
  output bufg_gt_clr_out;
  output [0:0]out;
  output [0:0]E;
  input rst_in_out_reg;
  input rst_in_out_reg_0;
  input [63:0]SCRAMBLED_DATA_OUT;
  input [9:0]gt0_drpaddr;
  input init_clk;
  input [15:0]gt0_drpdi;
  input gt0_drpen;
  input gt0_drpwe;
  input gt_refclk1_out;
  input rxn;
  input rxp;
  input [2:0]loopback;
  input gt_rxcdrovrden_in;
  input [0:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ;
  input \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 ;
  input [1:0]Q;
  input [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 ;
  input rst_in_sync3_reg;
  input mmcm_not_locked_out2;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [63:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [63:0]SCRAMBLED_DATA_OUT;
  wire aurora_64b66b_SL_gt_i_n_118;
  wire aurora_64b66b_SL_gt_i_n_119;
  wire bufg_gt_clr_out;
  wire [0:0]cplllock_out;
  wire \fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[0] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[1] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[2] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[3] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[4] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[5] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[6] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[7] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[8] ;
  wire [9:0]gt0_drpaddr;
  wire [15:0]gt0_drpdi;
  wire [15:0]gt0_drpdo;
  wire gt0_drpen;
  wire gt0_drprdy;
  wire gt0_drpwe;
  wire [0:0]gt_powergood;
  wire gt_refclk1_out;
  wire gt_rxcdrovrden_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire gtwiz_userclk_rx_active_out;
  wire gtwiz_userclk_rx_reset_in;
  wire gtwiz_userclk_rx_reset_in_r;
  wire gtwiz_userclk_rx_usrclk_out;
  wire gtwiz_userclk_tx_active_in;
  wire gtx_rx_pcsreset_comb;
  wire [1:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ;
  wire [0:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 ;
  wire [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 ;
  wire init_clk;
  wire [2:0]loopback;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire mmcm_not_locked_out2;
  wire [0:0]out;
  wire [9:0]p_0_in__1;
  wire [7:0]p_0_in__10;
  wire [7:0]p_0_in__2;
  wire rst_in_out_reg;
  wire rst_in_out_reg_0;
  wire rst_in_sync3_reg;
  wire [0:0]rxbufstatus_out;
  wire [0:0]rxdatavalid_out;
  wire [0:0]rxheadervalid_out;
  wire rxn;
  wire rxp;
  wire tx_out_clk;
  wire [0:0]txbufstatus_out;
  wire txn;
  wire txp;
  wire txpmaresetdone_out;
  wire ultrascale_rx_userclk_n_1;
  wire \usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ;
  wire \usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ;
  wire \usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ;
  wire \usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ;
  wire [15:0]NLW_aurora_64b66b_SL_gt_i_dmonitorout_out_UNCONNECTED;
  wire [0:0]NLW_aurora_64b66b_SL_gt_i_eyescandataerror_out_UNCONNECTED;
  wire [0:0]NLW_aurora_64b66b_SL_gt_i_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED;
  wire [1:0]NLW_aurora_64b66b_SL_gt_i_rxbufstatus_out_UNCONNECTED;
  wire [1:1]NLW_aurora_64b66b_SL_gt_i_rxdatavalid_out_UNCONNECTED;
  wire [5:2]NLW_aurora_64b66b_SL_gt_i_rxheader_out_UNCONNECTED;
  wire [1:1]NLW_aurora_64b66b_SL_gt_i_rxheadervalid_out_UNCONNECTED;
  wire [0:0]NLW_aurora_64b66b_SL_gt_i_rxprbserr_out_UNCONNECTED;
  wire [0:0]NLW_aurora_64b66b_SL_gt_i_rxresetdone_out_UNCONNECTED;
  wire [1:0]NLW_aurora_64b66b_SL_gt_i_rxstartofseq_out_UNCONNECTED;
  wire [0:0]NLW_aurora_64b66b_SL_gt_i_txbufstatus_out_UNCONNECTED;
  wire [0:0]NLW_aurora_64b66b_SL_gt_i_txoutclkfabric_out_UNCONNECTED;
  wire [0:0]NLW_aurora_64b66b_SL_gt_i_txoutclkpcs_out_UNCONNECTED;
  wire [0:0]NLW_aurora_64b66b_SL_gt_i_txresetdone_out_UNCONNECTED;

  (* CHECK_LICENSE_TYPE = "aurora_64b66b_SL_gt,aurora_64b66b_SL_gt_gtwizard_top,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "aurora_64b66b_SL_gt_gtwizard_top,Vivado 2022.1" *) 
  aurora_64b66b_SL_aurora_64b66b_SL_gt aurora_64b66b_SL_gt_i
       (.cplllock_out(cplllock_out),
        .dmonitorout_out(NLW_aurora_64b66b_SL_gt_i_dmonitorout_out_UNCONNECTED[15:0]),
        .drpaddr_in(gt0_drpaddr),
        .drpclk_in(init_clk),
        .drpdi_in(gt0_drpdi),
        .drpdo_out(gt0_drpdo),
        .drpen_in(gt0_drpen),
        .drprdy_out(gt0_drprdy),
        .drpwe_in(gt0_drpwe),
        .eyescandataerror_out(NLW_aurora_64b66b_SL_gt_i_eyescandataerror_out_UNCONNECTED[0]),
        .eyescanreset_in(1'b0),
        .eyescantrigger_in(1'b0),
        .gtpowergood_out(gt_powergood),
        .gtrefclk0_in(gt_refclk1_out),
        .gtwiz_reset_all_in(1'b0),
        .gtwiz_reset_clk_freerun_in(1'b0),
        .gtwiz_reset_rx_cdr_stable_out(NLW_aurora_64b66b_SL_gt_i_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_datapath_in(rst_in_out_reg_0),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(rst_in_out_reg),
        .gtwiz_reset_tx_datapath_in(1'b0),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(1'b0),
        .gtwiz_userclk_rx_active_in(out),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .gtwiz_userclk_tx_reset_in(bufg_gt_clr_out),
        .gtwiz_userdata_rx_out(D),
        .gtwiz_userdata_tx_in(SCRAMBLED_DATA_OUT),
        .gtyrxn_in(rxn),
        .gtyrxp_in(rxp),
        .gtytxn_out(txn),
        .gtytxp_out(txp),
        .loopback_in(loopback),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(gtwiz_userclk_rx_reset_in_r),
        .lopt_6(lopt_5),
        .lopt_7(lopt_6),
        .pcsrsvdin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxbufreset_in(1'b0),
        .rxbufstatus_out({rxbufstatus_out,NLW_aurora_64b66b_SL_gt_i_rxbufstatus_out_UNCONNECTED[1:0]}),
        .rxcdrhold_in(1'b0),
        .rxcdrovrden_in(gt_rxcdrovrden_in),
        .rxdatavalid_out({NLW_aurora_64b66b_SL_gt_i_rxdatavalid_out_UNCONNECTED[1],rxdatavalid_out}),
        .rxdfelpmreset_in(1'b0),
        .rxgearboxslip_in(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ),
        .rxheader_out({NLW_aurora_64b66b_SL_gt_i_rxheader_out_UNCONNECTED[5:2],\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST }),
        .rxheadervalid_out({NLW_aurora_64b66b_SL_gt_i_rxheadervalid_out_UNCONNECTED[1],rxheadervalid_out}),
        .rxlpmen_in(1'b0),
        .rxoutclk_out(aurora_64b66b_SL_gt_i_n_118),
        .rxpcsreset_in(1'b0),
        .rxpmareset_in(1'b0),
        .rxpmaresetdone_out(aurora_64b66b_SL_gt_i_n_119),
        .rxpolarity_in(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 ),
        .rxprbscntreset_in(1'b0),
        .rxprbserr_out(NLW_aurora_64b66b_SL_gt_i_rxprbserr_out_UNCONNECTED[0]),
        .rxprbssel_in({1'b0,1'b0,1'b0,1'b0}),
        .rxresetdone_out(NLW_aurora_64b66b_SL_gt_i_rxresetdone_out_UNCONNECTED[0]),
        .rxstartofseq_out(NLW_aurora_64b66b_SL_gt_i_rxstartofseq_out_UNCONNECTED[1:0]),
        .rxusrclk2_in(ultrascale_rx_userclk_n_1),
        .rxusrclk_in(gtwiz_userclk_rx_usrclk_out),
        .txbufstatus_out({txbufstatus_out,NLW_aurora_64b66b_SL_gt_i_txbufstatus_out_UNCONNECTED[0]}),
        .txdiffctrl_in({1'b0,1'b1,1'b0,1'b0,1'b0}),
        .txheader_in({1'b0,1'b0,1'b0,1'b0,Q}),
        .txinhibit_in(1'b0),
        .txoutclk_out(tx_out_clk),
        .txoutclkfabric_out(NLW_aurora_64b66b_SL_gt_i_txoutclkfabric_out_UNCONNECTED[0]),
        .txoutclkpcs_out(NLW_aurora_64b66b_SL_gt_i_txoutclkpcs_out_UNCONNECTED[0]),
        .txpcsreset_in(1'b0),
        .txpmareset_in(1'b0),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(1'b0),
        .txpostcursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprbsforceerr_in(1'b0),
        .txprbssel_in({1'b0,1'b0,1'b0,1'b0}),
        .txprecursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txresetdone_out(NLW_aurora_64b66b_SL_gt_i_txresetdone_out_UNCONNECTED[0]),
        .txsequence_in(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 ),
        .txusrclk2_in(1'b0),
        .txusrclk_in(rst_in_sync3_reg));
  LUT1 #(
    .INIT(2'h1)) 
    aurora_64b66b_SL_gt_i_i_1
       (.I0(txpmaresetdone_out),
        .O(bufg_gt_clr_out));
  LUT1 #(
    .INIT(2'h1)) 
    \fabric_pcs_rst_extend_cntr[0]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \fabric_pcs_rst_extend_cntr[1]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \fabric_pcs_rst_extend_cntr[2]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \fabric_pcs_rst_extend_cntr[3]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \fabric_pcs_rst_extend_cntr[4]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \fabric_pcs_rst_extend_cntr[5]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ),
        .I5(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ),
        .O(p_0_in__1[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \fabric_pcs_rst_extend_cntr[6]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .I1(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ),
        .O(p_0_in__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \fabric_pcs_rst_extend_cntr[7]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ),
        .I1(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__1[7]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \fabric_pcs_rst_extend_cntr[8]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[8] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .I2(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ),
        .O(p_0_in__1[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \fabric_pcs_rst_extend_cntr[8]_i_2 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I5(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .O(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \fabric_pcs_rst_extend_cntr[9]_inv_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ),
        .I1(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[8] ),
        .O(p_0_in__1[9]));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[0] 
       (.C(rst_in_sync3_reg),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__1[0]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[1] 
       (.C(rst_in_sync3_reg),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__1[1]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[2] 
       (.C(rst_in_sync3_reg),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__1[2]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[3] 
       (.C(rst_in_sync3_reg),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__1[3]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[4] 
       (.C(rst_in_sync3_reg),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__1[4]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[5] 
       (.C(rst_in_sync3_reg),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__1[5]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[6] 
       (.C(rst_in_sync3_reg),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__1[6]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[7] 
       (.C(rst_in_sync3_reg),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__1[7]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[8] 
       (.C(rst_in_sync3_reg),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__1[8]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[8] ));
  (* inverted = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \fabric_pcs_rst_extend_cntr_reg[9]_inv 
       (.C(rst_in_sync3_reg),
        .CE(E),
        .D(p_0_in__1[9]),
        .PRE(mmcm_not_locked_out2),
        .Q(E));
  LUT1 #(
    .INIT(2'h1)) 
    gtwiz_userclk_rx_reset_in_r_i_1
       (.I0(aurora_64b66b_SL_gt_i_n_119),
        .O(gtwiz_userclk_rx_reset_in));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_userclk_rx_reset_in_r_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(gtwiz_userclk_rx_reset_in),
        .Q(gtwiz_userclk_rx_reset_in_r),
        .R(1'b0));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* P_CONTENTS = "0" *) 
  (* P_FREQ_RATIO_SOURCE_TO_USRCLK = "1" *) 
  (* P_FREQ_RATIO_USRCLK_TO_USRCLK2 = "1" *) 
  (* P_USRCLK2_DIV = "3'b000" *) 
  (* P_USRCLK2_INT_DIV = "0" *) 
  (* P_USRCLK_DIV = "3'b000" *) 
  (* P_USRCLK_INT_DIV = "0" *) 
  aurora_64b66b_SL_aurora_64b66b_SL_ultrascale_rx_userclk ultrascale_rx_userclk
       (.gtwiz_reset_clk_freerun_in(1'b0),
        .gtwiz_userclk_rx_active_out(gtwiz_userclk_rx_active_out),
        .gtwiz_userclk_rx_reset_in(gtwiz_userclk_rx_reset_in_r),
        .gtwiz_userclk_rx_srcclk_in(aurora_64b66b_SL_gt_i_n_118),
        .gtwiz_userclk_rx_usrclk2_out(ultrascale_rx_userclk_n_1),
        .gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .lopt(lopt_4),
        .lopt_1(lopt_5),
        .lopt_2(lopt_6));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_rx_active_in_extend_cntr[0]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__10[0]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_rx_active_in_extend_cntr[1]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in__10[1]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \usrclk_rx_active_in_extend_cntr[2]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .O(p_0_in__10[2]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \usrclk_rx_active_in_extend_cntr[3]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .O(p_0_in__10[3]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \usrclk_rx_active_in_extend_cntr[4]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .I4(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ),
        .O(p_0_in__10[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \usrclk_rx_active_in_extend_cntr[5]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I4(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ),
        .I5(\usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ),
        .O(p_0_in__10[5]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_rx_active_in_extend_cntr[6]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__10[6]));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_1 
       (.I0(out),
        .O(gtx_rx_pcsreset_comb));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_2 
       (.I0(\usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__10[7]));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_3 
       (.I0(gtwiz_userclk_rx_active_out),
        .O(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_4 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I4(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I5(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ),
        .O(\usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[0] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__10[0]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[1] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__10[1]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[2] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__10[2]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[3] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__10[3]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[4] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__10[4]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[5] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__10[5]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[6] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__10[6]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[7] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__10[7]),
        .Q(out));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_tx_active_in_extend_cntr[0]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__2[0]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_tx_active_in_extend_cntr[1]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \usrclk_tx_active_in_extend_cntr[2]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \usrclk_tx_active_in_extend_cntr[3]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .O(p_0_in__2[3]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \usrclk_tx_active_in_extend_cntr[4]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I4(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .O(p_0_in__2[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \usrclk_tx_active_in_extend_cntr[5]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I4(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ),
        .I5(\usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ),
        .O(p_0_in__2[5]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_tx_active_in_extend_cntr[6]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ),
        .I1(\usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ),
        .O(p_0_in__2[6]));
  LUT2 #(
    .INIT(4'h1)) 
    \usrclk_tx_active_in_extend_cntr[7]_i_1 
       (.I0(E),
        .I1(gtwiz_userclk_tx_active_in),
        .O(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \usrclk_tx_active_in_extend_cntr[7]_i_2 
       (.I0(\usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__2[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \usrclk_tx_active_in_extend_cntr[7]_i_3 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I4(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I5(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .O(\usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[0] 
       (.C(rst_in_sync3_reg),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__2[0]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[1] 
       (.C(rst_in_sync3_reg),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__2[1]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[2] 
       (.C(rst_in_sync3_reg),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__2[2]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[3] 
       (.C(rst_in_sync3_reg),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__2[3]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[4] 
       (.C(rst_in_sync3_reg),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__2[4]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[5] 
       (.C(rst_in_sync3_reg),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__2[5]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[6] 
       (.C(rst_in_sync3_reg),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__2[6]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[7] 
       (.C(rst_in_sync3_reg),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__2[7]),
        .Q(gtwiz_userclk_tx_active_in));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_RESET_LOGIC
   (sys_reset_out,
    ready_r_reg0,
    reset_count_r0,
    wait_for_lane_up_r0,
    reset_lanes_c,
    stg1_aurora_64b66b_SL_cdc_to_reg,
    link_reset_out,
    power_down,
    sysreset_from_support,
    stg4_reg,
    hard_err_i,
    tx_reset_i,
    reset_lanes_flop_0_i,
    gen_na_idles_i);
  output sys_reset_out;
  output ready_r_reg0;
  output reset_count_r0;
  output wait_for_lane_up_r0;
  output reset_lanes_c;
  input stg1_aurora_64b66b_SL_cdc_to_reg;
  input link_reset_out;
  input power_down;
  input sysreset_from_support;
  input stg4_reg;
  input hard_err_i;
  input tx_reset_i;
  input reset_lanes_flop_0_i;
  input gen_na_idles_i;

  wire SYSTEM_RESET0_n_0;
  wire fsm_resetdone_sync;
  wire gen_na_idles_i;
  wire hard_err_i;
  wire link_reset_out;
  wire link_reset_sync;
  wire power_down;
  wire power_down_sync;
  wire ready_r_reg0;
  wire reset_count_r0;
  wire reset_lanes_c;
  wire reset_lanes_flop_0_i;
  wire stg1_aurora_64b66b_SL_cdc_to_reg;
  wire stg4_reg;
  wire sys_reset_out;
  wire sysreset_from_support;
  wire tx_reset_i;
  wire wait_for_lane_up_r0;

  LUT4 #(
    .INIT(16'hFFEF)) 
    SYSTEM_RESET0
       (.I0(link_reset_sync),
        .I1(sysreset_from_support),
        .I2(fsm_resetdone_sync),
        .I3(power_down_sync),
        .O(SYSTEM_RESET0_n_0));
  FDRE #(
    .INIT(1'b1)) 
    SYSTEM_RESET_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(SYSTEM_RESET0_n_0),
        .Q(sys_reset_out),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'hE)) 
    ready_r_i_1
       (.I0(sys_reset_out),
        .I1(hard_err_i),
        .O(ready_r_reg0));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'hB)) 
    reset_count_r_i_1
       (.I0(sys_reset_out),
        .I1(tx_reset_i),
        .O(reset_count_r0));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    reset_lanes_flop_0_i_i_1
       (.I0(sys_reset_out),
        .I1(reset_lanes_flop_0_i),
        .I2(gen_na_idles_i),
        .O(reset_lanes_c));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync_2 u_link_rst_sync
       (.link_reset_out(link_reset_out),
        .link_reset_sync(link_reset_sync),
        .stg5_reg_0(stg4_reg));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync_3 u_pd_sync
       (.power_down(power_down),
        .power_down_sync(power_down_sync),
        .stg4_reg_0(stg4_reg));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync_4 u_rst_done_sync
       (.fsm_resetdone_sync(fsm_resetdone_sync),
        .stg1_aurora_64b66b_SL_cdc_to_reg_0(stg1_aurora_64b66b_SL_cdc_to_reg),
        .stg4_reg_0(stg4_reg));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'hB)) 
    wait_for_lane_up_r_i_1
       (.I0(sys_reset_out),
        .I1(reset_lanes_flop_0_i),
        .O(wait_for_lane_up_r0));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_RX_LL
   (m_axi_rx_tvalid,
    m_axi_rx_tlast,
    m_axi_rx_tdata,
    m_axi_rx_tkeep,
    got_cc_i,
    \raw_data_r_reg[5] ,
    rx_pe_data_v_c,
    rxdatavalid_to_ll_i,
    rx_sep_c,
    SR,
    m_axi_rx_tvalid_reg,
    pipe1_rx_pdu_in_progress_c,
    D,
    \raw_data_r_reg[8] ,
    \raw_data_r_reg[8]_0 ,
    \raw_data_r_reg[7] ,
    \raw_data_r_reg[6] ,
    \raw_data_r_reg[5]_0 );
  output m_axi_rx_tvalid;
  output m_axi_rx_tlast;
  output [0:63]m_axi_rx_tdata;
  output [0:7]m_axi_rx_tkeep;
  input got_cc_i;
  input \raw_data_r_reg[5] ;
  input rx_pe_data_v_c;
  input rxdatavalid_to_ll_i;
  input rx_sep_c;
  input SR;
  input m_axi_rx_tvalid_reg;
  input pipe1_rx_pdu_in_progress_c;
  input [69:0]D;
  input \raw_data_r_reg[8] ;
  input \raw_data_r_reg[8]_0 ;
  input \raw_data_r_reg[7] ;
  input \raw_data_r_reg[6] ;
  input \raw_data_r_reg[5]_0 ;

  wire [69:0]D;
  wire SR;
  wire got_cc_i;
  wire [0:63]m_axi_rx_tdata;
  wire [0:7]m_axi_rx_tkeep;
  wire m_axi_rx_tlast;
  wire m_axi_rx_tvalid;
  wire m_axi_rx_tvalid_reg;
  wire pipe1_rx_pdu_in_progress_c;
  wire \raw_data_r_reg[5] ;
  wire \raw_data_r_reg[5]_0 ;
  wire \raw_data_r_reg[6] ;
  wire \raw_data_r_reg[7] ;
  wire \raw_data_r_reg[8] ;
  wire \raw_data_r_reg[8]_0 ;
  wire rx_pe_data_v_c;
  wire rx_sep_c;
  wire rxdatavalid_to_ll_i;

  aurora_64b66b_SL_aurora_64b66b_SL_RX_LL_DATAPATH rx_ll_datapath_i
       (.D(D),
        .SR(SR),
        .got_cc_i(got_cc_i),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .m_axi_rx_tkeep(m_axi_rx_tkeep),
        .m_axi_rx_tlast(m_axi_rx_tlast),
        .m_axi_rx_tvalid(m_axi_rx_tvalid),
        .m_axi_rx_tvalid_reg_0(m_axi_rx_tvalid_reg),
        .pipe1_rx_pdu_in_progress_c(pipe1_rx_pdu_in_progress_c),
        .\raw_data_r_reg[5]_0 (\raw_data_r_reg[5] ),
        .\raw_data_r_reg[5]_1 (\raw_data_r_reg[5]_0 ),
        .\raw_data_r_reg[6]_0 (\raw_data_r_reg[6] ),
        .\raw_data_r_reg[7]_0 (\raw_data_r_reg[7] ),
        .\raw_data_r_reg[8]_0 (\raw_data_r_reg[8] ),
        .\raw_data_r_reg[8]_1 (\raw_data_r_reg[8]_0 ),
        .rx_pe_data_v_c(rx_pe_data_v_c),
        .rx_sep_c(rx_sep_c),
        .rxdatavalid_to_ll_i(rxdatavalid_to_ll_i));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_RX_LL_DATAPATH
   (m_axi_rx_tvalid,
    m_axi_rx_tlast,
    m_axi_rx_tdata,
    m_axi_rx_tkeep,
    got_cc_i,
    \raw_data_r_reg[5]_0 ,
    rx_pe_data_v_c,
    rxdatavalid_to_ll_i,
    rx_sep_c,
    SR,
    m_axi_rx_tvalid_reg_0,
    pipe1_rx_pdu_in_progress_c,
    D,
    \raw_data_r_reg[8]_0 ,
    \raw_data_r_reg[8]_1 ,
    \raw_data_r_reg[7]_0 ,
    \raw_data_r_reg[6]_0 ,
    \raw_data_r_reg[5]_1 );
  output m_axi_rx_tvalid;
  output m_axi_rx_tlast;
  output [0:63]m_axi_rx_tdata;
  output [0:7]m_axi_rx_tkeep;
  input got_cc_i;
  input \raw_data_r_reg[5]_0 ;
  input rx_pe_data_v_c;
  input rxdatavalid_to_ll_i;
  input rx_sep_c;
  input SR;
  input m_axi_rx_tvalid_reg_0;
  input pipe1_rx_pdu_in_progress_c;
  input [69:0]D;
  input \raw_data_r_reg[8]_0 ;
  input \raw_data_r_reg[8]_1 ;
  input \raw_data_r_reg[7]_0 ;
  input \raw_data_r_reg[6]_0 ;
  input \raw_data_r_reg[5]_1 ;

  wire [69:0]D;
  wire SR;
  wire got_cc_i;
  wire hold_valid;
  wire hold_valid_r;
  wire hold_valid_r_i_3_n_0;
  wire [0:63]m_axi_rx_tdata;
  wire \m_axi_rx_tdata[0]_i_2_n_0 ;
  wire \m_axi_rx_tdata[0]_i_3_n_0 ;
  wire \m_axi_rx_tdata[0]_i_4_n_0 ;
  wire [0:7]m_axi_rx_tkeep;
  wire \m_axi_rx_tkeep[0]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[0]_i_2_n_0 ;
  wire \m_axi_rx_tkeep[1]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[2]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[3]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[4]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[5]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[6]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[7]_i_1_n_0 ;
  wire m_axi_rx_tlast;
  wire m_axi_rx_tlast_i_1_n_0;
  wire m_axi_rx_tlast_i_2_n_0;
  wire m_axi_rx_tvalid;
  wire m_axi_rx_tvalid_i_1_n_0;
  wire m_axi_rx_tvalid_i_2_n_0;
  wire m_axi_rx_tvalid_reg_0;
  wire pipe1_rx_pdu_in_progress_c;
  wire [63:0]pipe2_rx_pe_data_r;
  wire pipe2_rx_sep_r;
  wire \raw_data_r2_reg_n_0_[0] ;
  wire \raw_data_r2_reg_n_0_[2] ;
  wire \raw_data_r2_reg_n_0_[3] ;
  wire \raw_data_r2_reg_n_0_[4] ;
  wire \raw_data_r2_reg_n_0_[5] ;
  wire \raw_data_r2_reg_n_0_[6] ;
  wire \raw_data_r2_reg_n_0_[7] ;
  wire \raw_data_r2_reg_n_0_[8] ;
  wire \raw_data_r2_reg_n_0_[9] ;
  wire \raw_data_r_reg[5]_0 ;
  wire \raw_data_r_reg[5]_1 ;
  wire \raw_data_r_reg[6]_0 ;
  wire \raw_data_r_reg[7]_0 ;
  wire \raw_data_r_reg[8]_0 ;
  wire \raw_data_r_reg[8]_1 ;
  wire \raw_data_r_reg_n_0_[0] ;
  wire \raw_data_r_reg_n_0_[10] ;
  wire \raw_data_r_reg_n_0_[11] ;
  wire \raw_data_r_reg_n_0_[12] ;
  wire \raw_data_r_reg_n_0_[13] ;
  wire \raw_data_r_reg_n_0_[14] ;
  wire \raw_data_r_reg_n_0_[15] ;
  wire \raw_data_r_reg_n_0_[16] ;
  wire \raw_data_r_reg_n_0_[17] ;
  wire \raw_data_r_reg_n_0_[18] ;
  wire \raw_data_r_reg_n_0_[19] ;
  wire \raw_data_r_reg_n_0_[1] ;
  wire \raw_data_r_reg_n_0_[20] ;
  wire \raw_data_r_reg_n_0_[21] ;
  wire \raw_data_r_reg_n_0_[22] ;
  wire \raw_data_r_reg_n_0_[23] ;
  wire \raw_data_r_reg_n_0_[24] ;
  wire \raw_data_r_reg_n_0_[25] ;
  wire \raw_data_r_reg_n_0_[26] ;
  wire \raw_data_r_reg_n_0_[27] ;
  wire \raw_data_r_reg_n_0_[28] ;
  wire \raw_data_r_reg_n_0_[29] ;
  wire \raw_data_r_reg_n_0_[2] ;
  wire \raw_data_r_reg_n_0_[30] ;
  wire \raw_data_r_reg_n_0_[31] ;
  wire \raw_data_r_reg_n_0_[32] ;
  wire \raw_data_r_reg_n_0_[33] ;
  wire \raw_data_r_reg_n_0_[34] ;
  wire \raw_data_r_reg_n_0_[35] ;
  wire \raw_data_r_reg_n_0_[36] ;
  wire \raw_data_r_reg_n_0_[37] ;
  wire \raw_data_r_reg_n_0_[38] ;
  wire \raw_data_r_reg_n_0_[39] ;
  wire \raw_data_r_reg_n_0_[3] ;
  wire \raw_data_r_reg_n_0_[40] ;
  wire \raw_data_r_reg_n_0_[41] ;
  wire \raw_data_r_reg_n_0_[42] ;
  wire \raw_data_r_reg_n_0_[43] ;
  wire \raw_data_r_reg_n_0_[44] ;
  wire \raw_data_r_reg_n_0_[45] ;
  wire \raw_data_r_reg_n_0_[46] ;
  wire \raw_data_r_reg_n_0_[47] ;
  wire \raw_data_r_reg_n_0_[48] ;
  wire \raw_data_r_reg_n_0_[49] ;
  wire \raw_data_r_reg_n_0_[4] ;
  wire \raw_data_r_reg_n_0_[50] ;
  wire \raw_data_r_reg_n_0_[51] ;
  wire \raw_data_r_reg_n_0_[52] ;
  wire \raw_data_r_reg_n_0_[53] ;
  wire \raw_data_r_reg_n_0_[54] ;
  wire \raw_data_r_reg_n_0_[55] ;
  wire \raw_data_r_reg_n_0_[56] ;
  wire \raw_data_r_reg_n_0_[57] ;
  wire \raw_data_r_reg_n_0_[58] ;
  wire \raw_data_r_reg_n_0_[59] ;
  wire \raw_data_r_reg_n_0_[5] ;
  wire \raw_data_r_reg_n_0_[60] ;
  wire \raw_data_r_reg_n_0_[61] ;
  wire \raw_data_r_reg_n_0_[62] ;
  wire \raw_data_r_reg_n_0_[63] ;
  wire \raw_data_r_reg_n_0_[64] ;
  wire \raw_data_r_reg_n_0_[65] ;
  wire \raw_data_r_reg_n_0_[66] ;
  wire \raw_data_r_reg_n_0_[67] ;
  wire \raw_data_r_reg_n_0_[68] ;
  wire \raw_data_r_reg_n_0_[69] ;
  wire \raw_data_r_reg_n_0_[6] ;
  wire \raw_data_r_reg_n_0_[70] ;
  wire \raw_data_r_reg_n_0_[71] ;
  wire \raw_data_r_reg_n_0_[72] ;
  wire \raw_data_r_reg_n_0_[73] ;
  wire \raw_data_r_reg_n_0_[7] ;
  wire \raw_data_r_reg_n_0_[8] ;
  wire \raw_data_r_reg_n_0_[9] ;
  wire rx_cc_r1;
  wire rx_cc_r2;
  wire rx_ll_dv_r1;
  wire rx_ll_dv_r2;
  wire rx_pdu_ok;
  wire rx_pe_data_v_c;
  wire rx_pe_data_v_r;
  wire rx_sep_c;
  wire rx_sep_r;
  wire rx_tvalid_c;
  wire rxdatavalid_to_ll_i;

  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT5 #(
    .INIT(32'hEFFFAAAA)) 
    hold_valid_r_i_2
       (.I0(hold_valid_r_i_3_n_0),
        .I1(rx_cc_r2),
        .I2(rx_ll_dv_r2),
        .I3(rx_pdu_ok),
        .I4(hold_valid_r),
        .O(hold_valid));
  LUT6 #(
    .INIT(64'hF0F0F0F00070F0F0)) 
    hold_valid_r_i_3
       (.I0(\raw_data_r_reg_n_0_[2] ),
        .I1(rx_sep_r),
        .I2(rx_pdu_ok),
        .I3(rx_pe_data_v_r),
        .I4(rx_ll_dv_r1),
        .I5(rx_cc_r1),
        .O(hold_valid_r_i_3_n_0));
  FDRE hold_valid_r_reg
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(hold_valid),
        .Q(hold_valid_r),
        .R(SR));
  LUT6 #(
    .INIT(64'hBBBFBBBBBBBBBBBB)) 
    \m_axi_rx_tdata[0]_i_1 
       (.I0(rx_pdu_ok),
        .I1(\m_axi_rx_tdata[0]_i_2_n_0 ),
        .I2(\m_axi_rx_tdata[0]_i_3_n_0 ),
        .I3(rx_cc_r1),
        .I4(rx_ll_dv_r1),
        .I5(rx_pe_data_v_r),
        .O(rx_tvalid_c));
  LUT2 #(
    .INIT(4'h7)) 
    \m_axi_rx_tdata[0]_i_2 
       (.I0(\raw_data_r_reg_n_0_[2] ),
        .I1(rx_sep_r),
        .O(\m_axi_rx_tdata[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \m_axi_rx_tdata[0]_i_3 
       (.I0(\m_axi_rx_tdata[0]_i_4_n_0 ),
        .I1(\raw_data_r2_reg_n_0_[0] ),
        .I2(pipe2_rx_sep_r),
        .O(\m_axi_rx_tdata[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT5 #(
    .INIT(32'h000055D5)) 
    \m_axi_rx_tdata[0]_i_4 
       (.I0(hold_valid_r),
        .I1(rx_pdu_ok),
        .I2(rx_ll_dv_r2),
        .I3(rx_cc_r2),
        .I4(hold_valid_r_i_3_n_0),
        .O(\m_axi_rx_tdata[0]_i_4_n_0 ));
  FDRE \m_axi_rx_tdata_reg[0] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[63]),
        .Q(m_axi_rx_tdata[0]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[10] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[53]),
        .Q(m_axi_rx_tdata[10]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[11] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[52]),
        .Q(m_axi_rx_tdata[11]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[12] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[51]),
        .Q(m_axi_rx_tdata[12]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[13] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[50]),
        .Q(m_axi_rx_tdata[13]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[14] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[49]),
        .Q(m_axi_rx_tdata[14]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[15] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[48]),
        .Q(m_axi_rx_tdata[15]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[16] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[47]),
        .Q(m_axi_rx_tdata[16]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[17] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[46]),
        .Q(m_axi_rx_tdata[17]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[18] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[45]),
        .Q(m_axi_rx_tdata[18]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[19] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[44]),
        .Q(m_axi_rx_tdata[19]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[1] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[62]),
        .Q(m_axi_rx_tdata[1]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[20] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[43]),
        .Q(m_axi_rx_tdata[20]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[21] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[42]),
        .Q(m_axi_rx_tdata[21]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[22] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[41]),
        .Q(m_axi_rx_tdata[22]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[23] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[40]),
        .Q(m_axi_rx_tdata[23]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[24] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[39]),
        .Q(m_axi_rx_tdata[24]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[25] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[38]),
        .Q(m_axi_rx_tdata[25]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[26] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[37]),
        .Q(m_axi_rx_tdata[26]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[27] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[36]),
        .Q(m_axi_rx_tdata[27]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[28] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[35]),
        .Q(m_axi_rx_tdata[28]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[29] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[34]),
        .Q(m_axi_rx_tdata[29]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[2] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[61]),
        .Q(m_axi_rx_tdata[2]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[30] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[33]),
        .Q(m_axi_rx_tdata[30]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[31] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[32]),
        .Q(m_axi_rx_tdata[31]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[32] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[31]),
        .Q(m_axi_rx_tdata[32]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[33] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[30]),
        .Q(m_axi_rx_tdata[33]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[34] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[29]),
        .Q(m_axi_rx_tdata[34]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[35] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[28]),
        .Q(m_axi_rx_tdata[35]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[36] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[27]),
        .Q(m_axi_rx_tdata[36]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[37] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[26]),
        .Q(m_axi_rx_tdata[37]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[38] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[25]),
        .Q(m_axi_rx_tdata[38]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[39] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[24]),
        .Q(m_axi_rx_tdata[39]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[3] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[60]),
        .Q(m_axi_rx_tdata[3]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[40] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[23]),
        .Q(m_axi_rx_tdata[40]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[41] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[22]),
        .Q(m_axi_rx_tdata[41]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[42] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[21]),
        .Q(m_axi_rx_tdata[42]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[43] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[20]),
        .Q(m_axi_rx_tdata[43]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[44] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[19]),
        .Q(m_axi_rx_tdata[44]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[45] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[18]),
        .Q(m_axi_rx_tdata[45]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[46] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[17]),
        .Q(m_axi_rx_tdata[46]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[47] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[16]),
        .Q(m_axi_rx_tdata[47]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[48] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[15]),
        .Q(m_axi_rx_tdata[48]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[49] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[14]),
        .Q(m_axi_rx_tdata[49]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[4] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[59]),
        .Q(m_axi_rx_tdata[4]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[50] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[13]),
        .Q(m_axi_rx_tdata[50]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[51] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[12]),
        .Q(m_axi_rx_tdata[51]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[52] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[11]),
        .Q(m_axi_rx_tdata[52]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[53] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[10]),
        .Q(m_axi_rx_tdata[53]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[54] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[9]),
        .Q(m_axi_rx_tdata[54]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[55] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[8]),
        .Q(m_axi_rx_tdata[55]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[56] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[7]),
        .Q(m_axi_rx_tdata[56]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[57] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[6]),
        .Q(m_axi_rx_tdata[57]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[58] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[5]),
        .Q(m_axi_rx_tdata[58]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[59] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[4]),
        .Q(m_axi_rx_tdata[59]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[5] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[58]),
        .Q(m_axi_rx_tdata[5]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[60] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[3]),
        .Q(m_axi_rx_tdata[60]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[61] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[2]),
        .Q(m_axi_rx_tdata[61]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[62] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[1]),
        .Q(m_axi_rx_tdata[62]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[63] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[0]),
        .Q(m_axi_rx_tdata[63]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[6] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[57]),
        .Q(m_axi_rx_tdata[6]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[7] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[56]),
        .Q(m_axi_rx_tdata[7]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[8] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[55]),
        .Q(m_axi_rx_tdata[8]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[9] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[54]),
        .Q(m_axi_rx_tdata[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00007707)) 
    \m_axi_rx_tkeep[0]_i_1 
       (.I0(rx_sep_r),
        .I1(\raw_data_r_reg_n_0_[2] ),
        .I2(pipe2_rx_sep_r),
        .I3(\raw_data_r2_reg_n_0_[2] ),
        .I4(\raw_data_r2_reg_n_0_[0] ),
        .O(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBABB8A88)) 
    \m_axi_rx_tkeep[0]_i_2 
       (.I0(\raw_data_r2_reg_n_0_[9] ),
        .I1(\raw_data_r2_reg_n_0_[0] ),
        .I2(\raw_data_r2_reg_n_0_[2] ),
        .I3(pipe2_rx_sep_r),
        .I4(\raw_data_r_reg_n_0_[9] ),
        .O(\m_axi_rx_tkeep[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBABB8A88)) 
    \m_axi_rx_tkeep[1]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[8] ),
        .I1(\raw_data_r2_reg_n_0_[0] ),
        .I2(\raw_data_r2_reg_n_0_[2] ),
        .I3(pipe2_rx_sep_r),
        .I4(\raw_data_r_reg_n_0_[8] ),
        .O(\m_axi_rx_tkeep[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBABB8A88)) 
    \m_axi_rx_tkeep[2]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[7] ),
        .I1(\raw_data_r2_reg_n_0_[0] ),
        .I2(\raw_data_r2_reg_n_0_[2] ),
        .I3(pipe2_rx_sep_r),
        .I4(\raw_data_r_reg_n_0_[7] ),
        .O(\m_axi_rx_tkeep[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBABB8A88)) 
    \m_axi_rx_tkeep[3]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[6] ),
        .I1(\raw_data_r2_reg_n_0_[0] ),
        .I2(\raw_data_r2_reg_n_0_[2] ),
        .I3(pipe2_rx_sep_r),
        .I4(\raw_data_r_reg_n_0_[6] ),
        .O(\m_axi_rx_tkeep[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBABB8A88)) 
    \m_axi_rx_tkeep[4]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[5] ),
        .I1(\raw_data_r2_reg_n_0_[0] ),
        .I2(\raw_data_r2_reg_n_0_[2] ),
        .I3(pipe2_rx_sep_r),
        .I4(\raw_data_r_reg_n_0_[5] ),
        .O(\m_axi_rx_tkeep[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBABB8A88)) 
    \m_axi_rx_tkeep[5]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[4] ),
        .I1(\raw_data_r2_reg_n_0_[0] ),
        .I2(\raw_data_r2_reg_n_0_[2] ),
        .I3(pipe2_rx_sep_r),
        .I4(\raw_data_r_reg_n_0_[4] ),
        .O(\m_axi_rx_tkeep[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBABB8A88)) 
    \m_axi_rx_tkeep[6]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[3] ),
        .I1(\raw_data_r2_reg_n_0_[0] ),
        .I2(\raw_data_r2_reg_n_0_[2] ),
        .I3(pipe2_rx_sep_r),
        .I4(\raw_data_r_reg_n_0_[3] ),
        .O(\m_axi_rx_tkeep[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT4 #(
    .INIT(16'hCD88)) 
    \m_axi_rx_tkeep[7]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[0] ),
        .I1(\raw_data_r2_reg_n_0_[2] ),
        .I2(pipe2_rx_sep_r),
        .I3(\raw_data_r_reg_n_0_[2] ),
        .O(\m_axi_rx_tkeep[7]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[0] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[0]_i_2_n_0 ),
        .Q(m_axi_rx_tkeep[0]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[1] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[1]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[1]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[2] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[2]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[2]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[3] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[3]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[3]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[4] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[4]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[4]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[5] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[5]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[5]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[6] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[6]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[6]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[7] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[7]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[7]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    m_axi_rx_tlast_i_1
       (.I0(m_axi_rx_tlast_i_2_n_0),
        .I1(m_axi_rx_tvalid_reg_0),
        .I2(\m_axi_rx_tkeep[0]_i_1_n_0 ),
        .O(m_axi_rx_tlast_i_1_n_0));
  LUT6 #(
    .INIT(64'h00000000FFFD0000)) 
    m_axi_rx_tlast_i_2
       (.I0(m_axi_rx_tvalid_i_2_n_0),
        .I1(\m_axi_rx_tdata[0]_i_4_n_0 ),
        .I2(\raw_data_r2_reg_n_0_[0] ),
        .I3(pipe2_rx_sep_r),
        .I4(\m_axi_rx_tdata[0]_i_2_n_0 ),
        .I5(rx_pdu_ok),
        .O(m_axi_rx_tlast_i_2_n_0));
  FDRE m_axi_rx_tlast_reg
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(m_axi_rx_tlast_i_1_n_0),
        .Q(m_axi_rx_tlast),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFF000000C000EA00)) 
    m_axi_rx_tvalid_i_1
       (.I0(m_axi_rx_tvalid_i_2_n_0),
        .I1(\raw_data_r_reg_n_0_[2] ),
        .I2(rx_sep_r),
        .I3(m_axi_rx_tvalid_reg_0),
        .I4(\m_axi_rx_tdata[0]_i_3_n_0 ),
        .I5(rx_pdu_ok),
        .O(m_axi_rx_tvalid_i_1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    m_axi_rx_tvalid_i_2
       (.I0(rx_pe_data_v_r),
        .I1(rx_ll_dv_r1),
        .I2(rx_cc_r1),
        .O(m_axi_rx_tvalid_i_2_n_0));
  FDRE m_axi_rx_tvalid_reg
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(m_axi_rx_tvalid_i_1_n_0),
        .Q(m_axi_rx_tvalid),
        .R(1'b0));
  FDRE \raw_data_r2_reg[0] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[0] ),
        .Q(\raw_data_r2_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[10] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[10] ),
        .Q(pipe2_rx_pe_data_r[0]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[11] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[11] ),
        .Q(pipe2_rx_pe_data_r[1]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[12] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[12] ),
        .Q(pipe2_rx_pe_data_r[2]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[13] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[13] ),
        .Q(pipe2_rx_pe_data_r[3]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[14] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[14] ),
        .Q(pipe2_rx_pe_data_r[4]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[15] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[15] ),
        .Q(pipe2_rx_pe_data_r[5]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[16] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[16] ),
        .Q(pipe2_rx_pe_data_r[6]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[17] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[17] ),
        .Q(pipe2_rx_pe_data_r[7]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[18] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[18] ),
        .Q(pipe2_rx_pe_data_r[8]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[19] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[19] ),
        .Q(pipe2_rx_pe_data_r[9]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[1] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[1] ),
        .Q(pipe2_rx_sep_r),
        .R(1'b0));
  FDRE \raw_data_r2_reg[20] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[20] ),
        .Q(pipe2_rx_pe_data_r[10]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[21] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[21] ),
        .Q(pipe2_rx_pe_data_r[11]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[22] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[22] ),
        .Q(pipe2_rx_pe_data_r[12]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[23] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[23] ),
        .Q(pipe2_rx_pe_data_r[13]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[24] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[24] ),
        .Q(pipe2_rx_pe_data_r[14]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[25] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[25] ),
        .Q(pipe2_rx_pe_data_r[15]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[26] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[26] ),
        .Q(pipe2_rx_pe_data_r[16]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[27] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[27] ),
        .Q(pipe2_rx_pe_data_r[17]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[28] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[28] ),
        .Q(pipe2_rx_pe_data_r[18]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[29] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[29] ),
        .Q(pipe2_rx_pe_data_r[19]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[2] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[2] ),
        .Q(\raw_data_r2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[30] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[30] ),
        .Q(pipe2_rx_pe_data_r[20]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[31] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[31] ),
        .Q(pipe2_rx_pe_data_r[21]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[32] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[32] ),
        .Q(pipe2_rx_pe_data_r[22]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[33] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[33] ),
        .Q(pipe2_rx_pe_data_r[23]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[34] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[34] ),
        .Q(pipe2_rx_pe_data_r[24]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[35] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[35] ),
        .Q(pipe2_rx_pe_data_r[25]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[36] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[36] ),
        .Q(pipe2_rx_pe_data_r[26]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[37] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[37] ),
        .Q(pipe2_rx_pe_data_r[27]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[38] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[38] ),
        .Q(pipe2_rx_pe_data_r[28]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[39] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[39] ),
        .Q(pipe2_rx_pe_data_r[29]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[3] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[3] ),
        .Q(\raw_data_r2_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[40] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[40] ),
        .Q(pipe2_rx_pe_data_r[30]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[41] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[41] ),
        .Q(pipe2_rx_pe_data_r[31]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[42] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[42] ),
        .Q(pipe2_rx_pe_data_r[32]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[43] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[43] ),
        .Q(pipe2_rx_pe_data_r[33]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[44] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[44] ),
        .Q(pipe2_rx_pe_data_r[34]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[45] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[45] ),
        .Q(pipe2_rx_pe_data_r[35]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[46] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[46] ),
        .Q(pipe2_rx_pe_data_r[36]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[47] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[47] ),
        .Q(pipe2_rx_pe_data_r[37]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[48] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[48] ),
        .Q(pipe2_rx_pe_data_r[38]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[49] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[49] ),
        .Q(pipe2_rx_pe_data_r[39]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[4] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[4] ),
        .Q(\raw_data_r2_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[50] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[50] ),
        .Q(pipe2_rx_pe_data_r[40]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[51] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[51] ),
        .Q(pipe2_rx_pe_data_r[41]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[52] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[52] ),
        .Q(pipe2_rx_pe_data_r[42]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[53] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[53] ),
        .Q(pipe2_rx_pe_data_r[43]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[54] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[54] ),
        .Q(pipe2_rx_pe_data_r[44]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[55] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[55] ),
        .Q(pipe2_rx_pe_data_r[45]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[56] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[56] ),
        .Q(pipe2_rx_pe_data_r[46]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[57] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[57] ),
        .Q(pipe2_rx_pe_data_r[47]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[58] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[58] ),
        .Q(pipe2_rx_pe_data_r[48]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[59] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[59] ),
        .Q(pipe2_rx_pe_data_r[49]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[5] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[5] ),
        .Q(\raw_data_r2_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[60] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[60] ),
        .Q(pipe2_rx_pe_data_r[50]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[61] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[61] ),
        .Q(pipe2_rx_pe_data_r[51]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[62] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[62] ),
        .Q(pipe2_rx_pe_data_r[52]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[63] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[63] ),
        .Q(pipe2_rx_pe_data_r[53]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[64] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[64] ),
        .Q(pipe2_rx_pe_data_r[54]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[65] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[65] ),
        .Q(pipe2_rx_pe_data_r[55]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[66] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[66] ),
        .Q(pipe2_rx_pe_data_r[56]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[67] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[67] ),
        .Q(pipe2_rx_pe_data_r[57]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[68] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[68] ),
        .Q(pipe2_rx_pe_data_r[58]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[69] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[69] ),
        .Q(pipe2_rx_pe_data_r[59]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[6] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[6] ),
        .Q(\raw_data_r2_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[70] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[70] ),
        .Q(pipe2_rx_pe_data_r[60]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[71] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[71] ),
        .Q(pipe2_rx_pe_data_r[61]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[72] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[72] ),
        .Q(pipe2_rx_pe_data_r[62]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[73] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[73] ),
        .Q(pipe2_rx_pe_data_r[63]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[7] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[7] ),
        .Q(\raw_data_r2_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[8] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[8] ),
        .Q(\raw_data_r2_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[9] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[9] ),
        .Q(\raw_data_r2_reg_n_0_[9] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[0] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[0]),
        .Q(\raw_data_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[10] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[6]),
        .Q(\raw_data_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[11] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[7]),
        .Q(\raw_data_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[12] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[8]),
        .Q(\raw_data_r_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[13] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[9]),
        .Q(\raw_data_r_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[14] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[10]),
        .Q(\raw_data_r_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[15] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[11]),
        .Q(\raw_data_r_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[16] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[12]),
        .Q(\raw_data_r_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[17] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[13]),
        .Q(\raw_data_r_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[18] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[14]),
        .Q(\raw_data_r_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[19] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[15]),
        .Q(\raw_data_r_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[1] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[1]),
        .Q(\raw_data_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[20] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[16]),
        .Q(\raw_data_r_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[21] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[17]),
        .Q(\raw_data_r_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[22] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[18]),
        .Q(\raw_data_r_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[23] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[19]),
        .Q(\raw_data_r_reg_n_0_[23] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[24] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[20]),
        .Q(\raw_data_r_reg_n_0_[24] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[25] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[21]),
        .Q(\raw_data_r_reg_n_0_[25] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[26] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[22]),
        .Q(\raw_data_r_reg_n_0_[26] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[27] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[23]),
        .Q(\raw_data_r_reg_n_0_[27] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[28] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[24]),
        .Q(\raw_data_r_reg_n_0_[28] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[29] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[25]),
        .Q(\raw_data_r_reg_n_0_[29] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[2] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[2]),
        .Q(\raw_data_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[30] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[26]),
        .Q(\raw_data_r_reg_n_0_[30] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[31] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[27]),
        .Q(\raw_data_r_reg_n_0_[31] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[32] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[28]),
        .Q(\raw_data_r_reg_n_0_[32] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[33] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[29]),
        .Q(\raw_data_r_reg_n_0_[33] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[34] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[30]),
        .Q(\raw_data_r_reg_n_0_[34] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[35] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[31]),
        .Q(\raw_data_r_reg_n_0_[35] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[36] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[32]),
        .Q(\raw_data_r_reg_n_0_[36] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[37] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[33]),
        .Q(\raw_data_r_reg_n_0_[37] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[38] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[34]),
        .Q(\raw_data_r_reg_n_0_[38] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[39] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[35]),
        .Q(\raw_data_r_reg_n_0_[39] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[3] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[3]),
        .Q(\raw_data_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[40] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[36]),
        .Q(\raw_data_r_reg_n_0_[40] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[41] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[37]),
        .Q(\raw_data_r_reg_n_0_[41] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[42] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[38]),
        .Q(\raw_data_r_reg_n_0_[42] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[43] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[39]),
        .Q(\raw_data_r_reg_n_0_[43] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[44] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[40]),
        .Q(\raw_data_r_reg_n_0_[44] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[45] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[41]),
        .Q(\raw_data_r_reg_n_0_[45] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[46] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[42]),
        .Q(\raw_data_r_reg_n_0_[46] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[47] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[43]),
        .Q(\raw_data_r_reg_n_0_[47] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[48] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[44]),
        .Q(\raw_data_r_reg_n_0_[48] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[49] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[45]),
        .Q(\raw_data_r_reg_n_0_[49] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[4] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[4]),
        .Q(\raw_data_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[50] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[46]),
        .Q(\raw_data_r_reg_n_0_[50] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[51] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[47]),
        .Q(\raw_data_r_reg_n_0_[51] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[52] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[48]),
        .Q(\raw_data_r_reg_n_0_[52] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[53] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[49]),
        .Q(\raw_data_r_reg_n_0_[53] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[54] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[50]),
        .Q(\raw_data_r_reg_n_0_[54] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[55] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[51]),
        .Q(\raw_data_r_reg_n_0_[55] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[56] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[52]),
        .Q(\raw_data_r_reg_n_0_[56] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[57] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[53]),
        .Q(\raw_data_r_reg_n_0_[57] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[58] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[54]),
        .Q(\raw_data_r_reg_n_0_[58] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[59] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[55]),
        .Q(\raw_data_r_reg_n_0_[59] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[5] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(\raw_data_r_reg[5]_1 ),
        .Q(\raw_data_r_reg_n_0_[5] ),
        .R(\raw_data_r_reg[8]_0 ));
  FDRE \raw_data_r_reg[60] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[56]),
        .Q(\raw_data_r_reg_n_0_[60] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[61] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[57]),
        .Q(\raw_data_r_reg_n_0_[61] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[62] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[58]),
        .Q(\raw_data_r_reg_n_0_[62] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[63] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[59]),
        .Q(\raw_data_r_reg_n_0_[63] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[64] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[60]),
        .Q(\raw_data_r_reg_n_0_[64] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[65] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[61]),
        .Q(\raw_data_r_reg_n_0_[65] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[66] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[62]),
        .Q(\raw_data_r_reg_n_0_[66] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[67] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[63]),
        .Q(\raw_data_r_reg_n_0_[67] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[68] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[64]),
        .Q(\raw_data_r_reg_n_0_[68] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[69] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[65]),
        .Q(\raw_data_r_reg_n_0_[69] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[6] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(\raw_data_r_reg[6]_0 ),
        .Q(\raw_data_r_reg_n_0_[6] ),
        .R(\raw_data_r_reg[8]_0 ));
  FDRE \raw_data_r_reg[70] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[66]),
        .Q(\raw_data_r_reg_n_0_[70] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[71] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[67]),
        .Q(\raw_data_r_reg_n_0_[71] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[72] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[68]),
        .Q(\raw_data_r_reg_n_0_[72] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[73] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[69]),
        .Q(\raw_data_r_reg_n_0_[73] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[7] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(\raw_data_r_reg[7]_0 ),
        .Q(\raw_data_r_reg_n_0_[7] ),
        .R(\raw_data_r_reg[8]_0 ));
  FDRE \raw_data_r_reg[8] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(\raw_data_r_reg[8]_1 ),
        .Q(\raw_data_r_reg_n_0_[8] ),
        .R(\raw_data_r_reg[8]_0 ));
  FDRE \raw_data_r_reg[9] 
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(pipe1_rx_pdu_in_progress_c),
        .D(D[5]),
        .Q(\raw_data_r_reg_n_0_[9] ),
        .R(1'b0));
  FDRE rx_cc_r1_reg
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(got_cc_i),
        .Q(rx_cc_r1),
        .R(1'b0));
  FDRE rx_cc_r2_reg
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(rx_cc_r1),
        .Q(rx_cc_r2),
        .R(1'b0));
  FDRE rx_ll_dv_r1_reg
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(rxdatavalid_to_ll_i),
        .Q(rx_ll_dv_r1),
        .R(1'b0));
  FDRE rx_ll_dv_r2_reg
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(rx_ll_dv_r1),
        .Q(rx_ll_dv_r2),
        .R(1'b0));
  FDRE rx_pdu_ok_reg
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(rx_pe_data_v_r),
        .Q(rx_pdu_ok),
        .R(1'b0));
  FDRE rx_pe_data_v_r_reg
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(rx_pe_data_v_c),
        .Q(rx_pe_data_v_r),
        .R(1'b0));
  FDRE rx_sep_r_reg
       (.C(\raw_data_r_reg[5]_0 ),
        .CE(1'b1),
        .D(rx_sep_c),
        .Q(rx_sep_r),
        .R(1'b0));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_SCRAMBLER_64B66B
   (\txseq_counter_i_reg[0] ,
    SCRAMBLED_DATA_OUT,
    Q,
    \SCRAMBLED_DATA_OUT_reg[63]_0 ,
    \SCRAMBLED_DATA_OUT_reg[63]_1 );
  output \txseq_counter_i_reg[0] ;
  output [63:0]SCRAMBLED_DATA_OUT;
  input [6:0]Q;
  input \SCRAMBLED_DATA_OUT_reg[63]_0 ;
  input [63:0]\SCRAMBLED_DATA_OUT_reg[63]_1 ;

  wire [6:0]Q;
  wire [63:0]SCRAMBLED_DATA_OUT;
  wire \SCRAMBLED_DATA_OUT_reg[63]_0 ;
  wire [63:0]\SCRAMBLED_DATA_OUT_reg[63]_1 ;
  wire data_valid_i;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_97_in;
  wire \scrambler_reg_n_0_[39] ;
  wire \scrambler_reg_n_0_[40] ;
  wire \scrambler_reg_n_0_[41] ;
  wire \scrambler_reg_n_0_[42] ;
  wire \scrambler_reg_n_0_[43] ;
  wire \scrambler_reg_n_0_[44] ;
  wire \scrambler_reg_n_0_[45] ;
  wire \scrambler_reg_n_0_[46] ;
  wire \scrambler_reg_n_0_[47] ;
  wire \scrambler_reg_n_0_[48] ;
  wire \scrambler_reg_n_0_[49] ;
  wire \scrambler_reg_n_0_[50] ;
  wire \scrambler_reg_n_0_[51] ;
  wire \scrambler_reg_n_0_[52] ;
  wire \scrambler_reg_n_0_[53] ;
  wire \scrambler_reg_n_0_[54] ;
  wire \scrambler_reg_n_0_[55] ;
  wire \scrambler_reg_n_0_[56] ;
  wire \scrambler_reg_n_0_[57] ;
  wire tempData0;
  wire tempData0100_out;
  wire tempData0104_out;
  wire tempData0108_out;
  wire tempData0112_out;
  wire tempData0116_out;
  wire tempData0120_out;
  wire tempData0124_out;
  wire tempData0128_out;
  wire tempData012_out;
  wire tempData0132_out;
  wire tempData0136_out;
  wire tempData0140_out;
  wire tempData0144_out;
  wire tempData0148_out;
  wire tempData0152_out;
  wire tempData0156_out;
  wire tempData0160_out;
  wire tempData0164_out;
  wire tempData0168_out;
  wire tempData016_out;
  wire tempData0172_out;
  wire tempData0176_out;
  wire tempData0180_out;
  wire tempData0184_out;
  wire tempData0188_out;
  wire tempData0192_out;
  wire tempData0196_out;
  wire tempData0200_out;
  wire tempData0204_out;
  wire tempData0208_out;
  wire tempData020_out;
  wire tempData0212_out;
  wire tempData0216_out;
  wire tempData0220_out;
  wire tempData0224_out;
  wire tempData0228_out;
  wire tempData0232_out;
  wire tempData0236_out;
  wire tempData0240_out;
  wire tempData0244_out;
  wire tempData0248_out;
  wire tempData024_out;
  wire tempData0252_out;
  wire tempData028_out;
  wire tempData032_out;
  wire tempData036_out;
  wire tempData040_out;
  wire tempData044_out;
  wire tempData048_out;
  wire tempData04_out;
  wire tempData052_out;
  wire tempData056_out;
  wire tempData060_out;
  wire tempData064_out;
  wire tempData068_out;
  wire tempData072_out;
  wire tempData076_out;
  wire tempData080_out;
  wire tempData084_out;
  wire tempData088_out;
  wire tempData08_out;
  wire tempData092_out;
  wire tempData096_out;
  wire \txseq_counter_i_reg[0] ;

  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[58]_i_1 
       (.I0(p_229_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I2(\scrambler_reg_n_0_[52] ),
        .O(tempData0232_out));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[59]_i_1 
       (.I0(p_233_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I2(\scrambler_reg_n_0_[53] ),
        .O(tempData0236_out));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[60]_i_1 
       (.I0(p_237_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I2(\scrambler_reg_n_0_[54] ),
        .O(tempData0240_out));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[61]_i_1 
       (.I0(p_241_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I2(\scrambler_reg_n_0_[55] ),
        .O(tempData0244_out));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[62]_i_1 
       (.I0(p_245_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I2(\scrambler_reg_n_0_[56] ),
        .O(tempData0248_out));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[63]_i_1 
       (.I0(p_249_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I2(\scrambler_reg_n_0_[57] ),
        .O(tempData0252_out));
  FDRE \SCRAMBLED_DATA_OUT_reg[0] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0),
        .Q(SCRAMBLED_DATA_OUT[0]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[10] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData040_out),
        .Q(SCRAMBLED_DATA_OUT[10]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[11] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData044_out),
        .Q(SCRAMBLED_DATA_OUT[11]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[12] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData048_out),
        .Q(SCRAMBLED_DATA_OUT[12]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[13] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData052_out),
        .Q(SCRAMBLED_DATA_OUT[13]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[14] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData056_out),
        .Q(SCRAMBLED_DATA_OUT[14]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[15] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData060_out),
        .Q(SCRAMBLED_DATA_OUT[15]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[16] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData064_out),
        .Q(SCRAMBLED_DATA_OUT[16]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[17] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData068_out),
        .Q(SCRAMBLED_DATA_OUT[17]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[18] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData072_out),
        .Q(SCRAMBLED_DATA_OUT[18]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[19] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData076_out),
        .Q(SCRAMBLED_DATA_OUT[19]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[1] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData04_out),
        .Q(SCRAMBLED_DATA_OUT[1]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[20] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData080_out),
        .Q(SCRAMBLED_DATA_OUT[20]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[21] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData084_out),
        .Q(SCRAMBLED_DATA_OUT[21]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[22] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData088_out),
        .Q(SCRAMBLED_DATA_OUT[22]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[23] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData092_out),
        .Q(SCRAMBLED_DATA_OUT[23]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[24] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData096_out),
        .Q(SCRAMBLED_DATA_OUT[24]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[25] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0100_out),
        .Q(SCRAMBLED_DATA_OUT[25]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[26] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0104_out),
        .Q(SCRAMBLED_DATA_OUT[26]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[27] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0108_out),
        .Q(SCRAMBLED_DATA_OUT[27]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[28] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0112_out),
        .Q(SCRAMBLED_DATA_OUT[28]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[29] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0116_out),
        .Q(SCRAMBLED_DATA_OUT[29]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[2] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData08_out),
        .Q(SCRAMBLED_DATA_OUT[2]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[30] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0120_out),
        .Q(SCRAMBLED_DATA_OUT[30]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[31] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0124_out),
        .Q(SCRAMBLED_DATA_OUT[31]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[32] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0128_out),
        .Q(SCRAMBLED_DATA_OUT[32]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[33] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0132_out),
        .Q(SCRAMBLED_DATA_OUT[33]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[34] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0136_out),
        .Q(SCRAMBLED_DATA_OUT[34]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[35] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0140_out),
        .Q(SCRAMBLED_DATA_OUT[35]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[36] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0144_out),
        .Q(SCRAMBLED_DATA_OUT[36]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[37] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0148_out),
        .Q(SCRAMBLED_DATA_OUT[37]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[38] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0152_out),
        .Q(SCRAMBLED_DATA_OUT[38]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[39] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0156_out),
        .Q(SCRAMBLED_DATA_OUT[39]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[3] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData012_out),
        .Q(SCRAMBLED_DATA_OUT[3]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[40] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0160_out),
        .Q(SCRAMBLED_DATA_OUT[40]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[41] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0164_out),
        .Q(SCRAMBLED_DATA_OUT[41]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[42] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0168_out),
        .Q(SCRAMBLED_DATA_OUT[42]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[43] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0172_out),
        .Q(SCRAMBLED_DATA_OUT[43]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[44] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0176_out),
        .Q(SCRAMBLED_DATA_OUT[44]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[45] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0180_out),
        .Q(SCRAMBLED_DATA_OUT[45]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[46] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0184_out),
        .Q(SCRAMBLED_DATA_OUT[46]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[47] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0188_out),
        .Q(SCRAMBLED_DATA_OUT[47]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[48] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0192_out),
        .Q(SCRAMBLED_DATA_OUT[48]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[49] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0196_out),
        .Q(SCRAMBLED_DATA_OUT[49]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[4] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData016_out),
        .Q(SCRAMBLED_DATA_OUT[4]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[50] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0200_out),
        .Q(SCRAMBLED_DATA_OUT[50]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[51] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0204_out),
        .Q(SCRAMBLED_DATA_OUT[51]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[52] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0208_out),
        .Q(SCRAMBLED_DATA_OUT[52]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[53] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0212_out),
        .Q(SCRAMBLED_DATA_OUT[53]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[54] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0216_out),
        .Q(SCRAMBLED_DATA_OUT[54]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[55] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0220_out),
        .Q(SCRAMBLED_DATA_OUT[55]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[56] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0224_out),
        .Q(SCRAMBLED_DATA_OUT[56]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[57] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0228_out),
        .Q(SCRAMBLED_DATA_OUT[57]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[58] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0232_out),
        .Q(SCRAMBLED_DATA_OUT[58]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[59] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0236_out),
        .Q(SCRAMBLED_DATA_OUT[59]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[5] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData020_out),
        .Q(SCRAMBLED_DATA_OUT[5]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[60] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0240_out),
        .Q(SCRAMBLED_DATA_OUT[60]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[61] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0244_out),
        .Q(SCRAMBLED_DATA_OUT[61]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[62] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0248_out),
        .Q(SCRAMBLED_DATA_OUT[62]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[63] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0252_out),
        .Q(SCRAMBLED_DATA_OUT[63]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[6] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData024_out),
        .Q(SCRAMBLED_DATA_OUT[6]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[7] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData028_out),
        .Q(SCRAMBLED_DATA_OUT[7]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[8] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData032_out),
        .Q(SCRAMBLED_DATA_OUT[8]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[9] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData036_out),
        .Q(SCRAMBLED_DATA_OUT[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[0]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [39]),
        .I1(p_153_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [0]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I4(\scrambler_reg_n_0_[52] ),
        .O(tempData0));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[10]_i_1 
       (.I0(\scrambler_reg_n_0_[43] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [49]),
        .I2(p_193_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [10]),
        .I4(p_113_in),
        .O(tempData040_out));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[11]_i_1 
       (.I0(\scrambler_reg_n_0_[44] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [50]),
        .I2(p_197_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [11]),
        .I4(p_117_in),
        .O(tempData044_out));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[12]_i_1 
       (.I0(\scrambler_reg_n_0_[45] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [51]),
        .I2(p_201_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [12]),
        .I4(p_121_in),
        .O(tempData048_out));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[13]_i_1 
       (.I0(\scrambler_reg_n_0_[46] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [52]),
        .I2(p_205_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [13]),
        .I4(p_125_in),
        .O(tempData052_out));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[14]_i_1 
       (.I0(\scrambler_reg_n_0_[47] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [53]),
        .I2(p_209_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [14]),
        .I4(p_129_in),
        .O(tempData056_out));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[15]_i_1 
       (.I0(\scrambler_reg_n_0_[48] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [54]),
        .I2(p_213_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [15]),
        .I4(p_133_in),
        .O(tempData060_out));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[16]_i_1 
       (.I0(\scrambler_reg_n_0_[49] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [55]),
        .I2(p_217_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [16]),
        .I4(p_137_in),
        .O(tempData064_out));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[17]_i_1 
       (.I0(\scrambler_reg_n_0_[50] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [56]),
        .I2(p_221_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [17]),
        .I4(p_141_in),
        .O(tempData068_out));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[18]_i_1 
       (.I0(\scrambler_reg_n_0_[51] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [57]),
        .I2(p_225_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [18]),
        .I4(p_145_in),
        .O(tempData072_out));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[19]_i_1 
       (.I0(\scrambler_reg_n_0_[52] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I2(p_229_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [19]),
        .I4(p_149_in),
        .O(tempData076_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[1]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [40]),
        .I1(p_157_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [1]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I4(\scrambler_reg_n_0_[53] ),
        .O(tempData04_out));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[20]_i_1 
       (.I0(\scrambler_reg_n_0_[53] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I2(p_233_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [20]),
        .I4(p_153_in),
        .O(tempData080_out));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[21]_i_1 
       (.I0(\scrambler_reg_n_0_[54] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I2(p_237_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [21]),
        .I4(p_157_in),
        .O(tempData084_out));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[22]_i_1 
       (.I0(\scrambler_reg_n_0_[55] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I2(p_241_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [22]),
        .I4(p_161_in),
        .O(tempData088_out));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[23]_i_1 
       (.I0(\scrambler_reg_n_0_[56] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I2(p_245_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [23]),
        .I4(p_165_in),
        .O(tempData092_out));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[24]_i_1 
       (.I0(\scrambler_reg_n_0_[57] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I2(p_249_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [24]),
        .I4(p_169_in),
        .O(tempData096_out));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[25]_i_1 
       (.I0(p_97_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [25]),
        .I2(p_173_in),
        .O(tempData0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[26]_i_1 
       (.I0(p_101_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [26]),
        .I2(p_177_in),
        .O(tempData0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[27]_i_1 
       (.I0(p_105_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [27]),
        .I2(p_181_in),
        .O(tempData0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[28]_i_1 
       (.I0(p_109_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [28]),
        .I2(p_185_in),
        .O(tempData0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[29]_i_1 
       (.I0(p_113_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [29]),
        .I2(p_189_in),
        .O(tempData0116_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[2]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [41]),
        .I1(p_161_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [2]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I4(\scrambler_reg_n_0_[54] ),
        .O(tempData08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[30]_i_1 
       (.I0(p_117_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [30]),
        .I2(p_193_in),
        .O(tempData0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[31]_i_1 
       (.I0(p_121_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [31]),
        .I2(p_197_in),
        .O(tempData0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[32]_i_1 
       (.I0(p_125_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [32]),
        .I2(p_201_in),
        .O(tempData0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[33]_i_1 
       (.I0(p_129_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [33]),
        .I2(p_205_in),
        .O(tempData0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[34]_i_1 
       (.I0(p_133_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [34]),
        .I2(p_209_in),
        .O(tempData0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[35]_i_1 
       (.I0(p_137_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [35]),
        .I2(p_213_in),
        .O(tempData0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[36]_i_1 
       (.I0(p_141_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [36]),
        .I2(p_217_in),
        .O(tempData0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[37]_i_1 
       (.I0(p_145_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [37]),
        .I2(p_221_in),
        .O(tempData0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[38]_i_1 
       (.I0(p_149_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [38]),
        .I2(p_225_in),
        .O(tempData0152_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[39]_i_1 
       (.I0(p_153_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [39]),
        .I2(p_229_in),
        .O(tempData0156_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[3]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [42]),
        .I1(p_165_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [3]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I4(\scrambler_reg_n_0_[55] ),
        .O(tempData012_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[40]_i_1 
       (.I0(p_157_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [40]),
        .I2(p_233_in),
        .O(tempData0160_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[41]_i_1 
       (.I0(p_161_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [41]),
        .I2(p_237_in),
        .O(tempData0164_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[42]_i_1 
       (.I0(p_165_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [42]),
        .I2(p_241_in),
        .O(tempData0168_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[43]_i_1 
       (.I0(p_169_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [43]),
        .I2(p_245_in),
        .O(tempData0172_out));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[44]_i_1 
       (.I0(p_173_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [44]),
        .I2(p_249_in),
        .O(tempData0176_out));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[45]_i_1 
       (.I0(p_177_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [45]),
        .I2(\scrambler_reg_n_0_[39] ),
        .O(tempData0180_out));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[46]_i_1 
       (.I0(p_181_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [46]),
        .I2(\scrambler_reg_n_0_[40] ),
        .O(tempData0184_out));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[47]_i_1 
       (.I0(p_185_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [47]),
        .I2(\scrambler_reg_n_0_[41] ),
        .O(tempData0188_out));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[48]_i_1 
       (.I0(p_189_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [48]),
        .I2(\scrambler_reg_n_0_[42] ),
        .O(tempData0192_out));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[49]_i_1 
       (.I0(p_193_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [49]),
        .I2(\scrambler_reg_n_0_[43] ),
        .O(tempData0196_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[4]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [43]),
        .I1(p_169_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [4]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I4(\scrambler_reg_n_0_[56] ),
        .O(tempData016_out));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[50]_i_1 
       (.I0(p_197_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [50]),
        .I2(\scrambler_reg_n_0_[44] ),
        .O(tempData0200_out));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[51]_i_1 
       (.I0(p_201_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [51]),
        .I2(\scrambler_reg_n_0_[45] ),
        .O(tempData0204_out));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[52]_i_1 
       (.I0(p_205_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [52]),
        .I2(\scrambler_reg_n_0_[46] ),
        .O(tempData0208_out));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[53]_i_1 
       (.I0(p_209_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [53]),
        .I2(\scrambler_reg_n_0_[47] ),
        .O(tempData0212_out));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[54]_i_1 
       (.I0(p_213_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [54]),
        .I2(\scrambler_reg_n_0_[48] ),
        .O(tempData0216_out));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[55]_i_1 
       (.I0(p_217_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [55]),
        .I2(\scrambler_reg_n_0_[49] ),
        .O(tempData0220_out));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[56]_i_1 
       (.I0(p_221_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [56]),
        .I2(\scrambler_reg_n_0_[50] ),
        .O(tempData0224_out));
  LUT4 #(
    .INIT(16'hFFFB)) 
    \scrambler[57]_i_1 
       (.I0(Q[4]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(\txseq_counter_i_reg[0] ),
        .O(data_valid_i));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[57]_i_2 
       (.I0(p_225_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [57]),
        .I2(\scrambler_reg_n_0_[51] ),
        .O(tempData0228_out));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \scrambler[57]_i_3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(Q[6]),
        .O(\txseq_counter_i_reg[0] ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[5]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [44]),
        .I1(p_173_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [5]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I4(\scrambler_reg_n_0_[57] ),
        .O(tempData020_out));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[6]_i_1 
       (.I0(\scrambler_reg_n_0_[39] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [45]),
        .I2(p_177_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [6]),
        .I4(p_97_in),
        .O(tempData024_out));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[7]_i_1 
       (.I0(\scrambler_reg_n_0_[40] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [46]),
        .I2(p_181_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [7]),
        .I4(p_101_in),
        .O(tempData028_out));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[8]_i_1 
       (.I0(\scrambler_reg_n_0_[41] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [47]),
        .I2(p_185_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [8]),
        .I4(p_105_in),
        .O(tempData032_out));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[9]_i_1 
       (.I0(\scrambler_reg_n_0_[42] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [48]),
        .I2(p_189_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [9]),
        .I4(p_109_in),
        .O(tempData036_out));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[0] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0),
        .Q(p_97_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[10] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData040_out),
        .Q(p_137_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[11] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData044_out),
        .Q(p_141_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[12] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData048_out),
        .Q(p_145_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[13] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData052_out),
        .Q(p_149_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[14] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData056_out),
        .Q(p_153_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[15] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData060_out),
        .Q(p_157_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[16] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData064_out),
        .Q(p_161_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[17] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData068_out),
        .Q(p_165_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[18] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData072_out),
        .Q(p_169_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[19] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData076_out),
        .Q(p_173_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[1] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData04_out),
        .Q(p_101_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[20] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData080_out),
        .Q(p_177_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[21] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData084_out),
        .Q(p_181_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[22] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData088_out),
        .Q(p_185_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[23] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData092_out),
        .Q(p_189_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[24] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData096_out),
        .Q(p_193_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[25] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0100_out),
        .Q(p_197_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[26] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0104_out),
        .Q(p_201_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[27] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0108_out),
        .Q(p_205_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[28] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0112_out),
        .Q(p_209_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[29] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0116_out),
        .Q(p_213_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[2] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData08_out),
        .Q(p_105_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[30] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0120_out),
        .Q(p_217_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[31] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0124_out),
        .Q(p_221_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[32] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0128_out),
        .Q(p_225_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[33] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0132_out),
        .Q(p_229_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[34] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0136_out),
        .Q(p_233_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[35] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0140_out),
        .Q(p_237_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[36] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0144_out),
        .Q(p_241_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[37] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0148_out),
        .Q(p_245_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[38] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0152_out),
        .Q(p_249_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[39] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0156_out),
        .Q(\scrambler_reg_n_0_[39] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[3] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData012_out),
        .Q(p_109_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[40] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0160_out),
        .Q(\scrambler_reg_n_0_[40] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[41] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0164_out),
        .Q(\scrambler_reg_n_0_[41] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[42] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0168_out),
        .Q(\scrambler_reg_n_0_[42] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[43] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0172_out),
        .Q(\scrambler_reg_n_0_[43] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[44] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0176_out),
        .Q(\scrambler_reg_n_0_[44] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[45] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0180_out),
        .Q(\scrambler_reg_n_0_[45] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[46] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0184_out),
        .Q(\scrambler_reg_n_0_[46] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[47] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0188_out),
        .Q(\scrambler_reg_n_0_[47] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[48] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0192_out),
        .Q(\scrambler_reg_n_0_[48] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[49] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0196_out),
        .Q(\scrambler_reg_n_0_[49] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[4] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData016_out),
        .Q(p_113_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[50] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0200_out),
        .Q(\scrambler_reg_n_0_[50] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[51] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0204_out),
        .Q(\scrambler_reg_n_0_[51] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[52] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0208_out),
        .Q(\scrambler_reg_n_0_[52] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[53] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0212_out),
        .Q(\scrambler_reg_n_0_[53] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[54] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0216_out),
        .Q(\scrambler_reg_n_0_[54] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[55] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0220_out),
        .Q(\scrambler_reg_n_0_[55] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[56] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0224_out),
        .Q(\scrambler_reg_n_0_[56] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[57] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData0228_out),
        .Q(\scrambler_reg_n_0_[57] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[5] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData020_out),
        .Q(p_117_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[6] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData024_out),
        .Q(p_121_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[7] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData028_out),
        .Q(p_125_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[8] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData032_out),
        .Q(p_129_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[9] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i),
        .D(tempData036_out),
        .Q(p_133_in),
        .R(1'b0));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_STANDARD_CC_MODULE
   (Q,
    SR,
    \cc_count_r_reg[0]_0 ,
    \cc_count_r_reg[0]_1 );
  output Q;
  input SR;
  input \cc_count_r_reg[0]_0 ;
  input \cc_count_r_reg[0]_1 ;

  wire DO_CC_i_1_n_0;
  wire Q;
  wire SR;
  wire \cc_count_r[0]_i_1_n_0 ;
  wire \cc_count_r_reg[0]_0 ;
  wire \cc_count_r_reg[0]_1 ;
  wire \cc_count_r_reg_n_0_[5] ;
  wire count_13d_flop_r;
  wire count_13d_flop_r_i_1_n_0;
  wire count_13d_flop_r_i_2_n_0;
  wire count_13d_flop_r_i_3_n_0;
  wire \count_13d_srl_r_reg_n_0_[0] ;
  wire \count_13d_srl_r_reg_n_0_[10] ;
  wire \count_13d_srl_r_reg_n_0_[11] ;
  wire \count_13d_srl_r_reg_n_0_[1] ;
  wire \count_13d_srl_r_reg_n_0_[2] ;
  wire \count_13d_srl_r_reg_n_0_[3] ;
  wire \count_13d_srl_r_reg_n_0_[4] ;
  wire \count_13d_srl_r_reg_n_0_[5] ;
  wire \count_13d_srl_r_reg_n_0_[6] ;
  wire \count_13d_srl_r_reg_n_0_[7] ;
  wire \count_13d_srl_r_reg_n_0_[8] ;
  wire \count_13d_srl_r_reg_n_0_[9] ;
  wire count_16d_flop_r;
  wire count_16d_flop_r0;
  wire count_16d_flop_r_i_1_n_0;
  wire count_16d_flop_r_i_3_n_0;
  wire count_16d_flop_r_i_4_n_0;
  wire count_16d_flop_r_i_5_n_0;
  wire count_16d_srl_r0;
  wire \count_16d_srl_r_reg_n_0_[0] ;
  wire \count_16d_srl_r_reg_n_0_[10] ;
  wire \count_16d_srl_r_reg_n_0_[11] ;
  wire \count_16d_srl_r_reg_n_0_[12] ;
  wire \count_16d_srl_r_reg_n_0_[13] ;
  wire \count_16d_srl_r_reg_n_0_[14] ;
  wire \count_16d_srl_r_reg_n_0_[1] ;
  wire \count_16d_srl_r_reg_n_0_[2] ;
  wire \count_16d_srl_r_reg_n_0_[3] ;
  wire \count_16d_srl_r_reg_n_0_[4] ;
  wire \count_16d_srl_r_reg_n_0_[5] ;
  wire \count_16d_srl_r_reg_n_0_[6] ;
  wire \count_16d_srl_r_reg_n_0_[7] ;
  wire \count_16d_srl_r_reg_n_0_[8] ;
  wire \count_16d_srl_r_reg_n_0_[9] ;
  wire count_24d_flop_r;
  wire count_24d_flop_r0;
  wire count_24d_flop_r_i_1_n_0;
  wire count_24d_flop_r_i_3_n_0;
  wire count_24d_flop_r_i_4_n_0;
  wire count_24d_flop_r_i_5_n_0;
  wire count_24d_flop_r_i_6_n_0;
  wire count_24d_flop_r_i_7_n_0;
  wire count_24d_flop_r_i_8_n_0;
  wire \count_24d_srl_r[0]_i_1_n_0 ;
  wire \count_24d_srl_r_reg_n_0_[0] ;
  wire \count_24d_srl_r_reg_n_0_[10] ;
  wire \count_24d_srl_r_reg_n_0_[11] ;
  wire \count_24d_srl_r_reg_n_0_[12] ;
  wire \count_24d_srl_r_reg_n_0_[13] ;
  wire \count_24d_srl_r_reg_n_0_[14] ;
  wire \count_24d_srl_r_reg_n_0_[15] ;
  wire \count_24d_srl_r_reg_n_0_[16] ;
  wire \count_24d_srl_r_reg_n_0_[17] ;
  wire \count_24d_srl_r_reg_n_0_[18] ;
  wire \count_24d_srl_r_reg_n_0_[19] ;
  wire \count_24d_srl_r_reg_n_0_[1] ;
  wire \count_24d_srl_r_reg_n_0_[20] ;
  wire \count_24d_srl_r_reg_n_0_[21] ;
  wire \count_24d_srl_r_reg_n_0_[22] ;
  wire \count_24d_srl_r_reg_n_0_[2] ;
  wire \count_24d_srl_r_reg_n_0_[3] ;
  wire \count_24d_srl_r_reg_n_0_[4] ;
  wire \count_24d_srl_r_reg_n_0_[5] ;
  wire \count_24d_srl_r_reg_n_0_[6] ;
  wire \count_24d_srl_r_reg_n_0_[7] ;
  wire \count_24d_srl_r_reg_n_0_[8] ;
  wire \count_24d_srl_r_reg_n_0_[9] ;
  wire [4:0]p_1_in;
  wire p_1_in__0;
  wire reset_r;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    DO_CC0
       (.I0(p_1_in[0]),
        .I1(\cc_count_r_reg_n_0_[5] ),
        .I2(p_1_in[3]),
        .I3(p_1_in[4]),
        .I4(p_1_in[1]),
        .I5(p_1_in[2]),
        .O(p_1_in__0));
  LUT5 #(
    .INIT(32'hFEEEEEEE)) 
    DO_CC_i_1
       (.I0(p_1_in__0),
        .I1(reset_r),
        .I2(\count_24d_srl_r_reg_n_0_[22] ),
        .I3(\count_16d_srl_r_reg_n_0_[14] ),
        .I4(\count_13d_srl_r_reg_n_0_[11] ),
        .O(DO_CC_i_1_n_0));
  FDRE DO_CC_reg
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(DO_CC_i_1_n_0),
        .Q(Q),
        .R(SR));
  LUT4 #(
    .INIT(16'h80FF)) 
    \cc_count_r[0]_i_1 
       (.I0(\count_13d_srl_r_reg_n_0_[11] ),
        .I1(\count_16d_srl_r_reg_n_0_[14] ),
        .I2(\count_24d_srl_r_reg_n_0_[22] ),
        .I3(\cc_count_r_reg[0]_1 ),
        .O(\cc_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[0] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\cc_count_r[0]_i_1_n_0 ),
        .Q(p_1_in[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[1] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(p_1_in[4]),
        .Q(p_1_in[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[2] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(p_1_in[3]),
        .Q(p_1_in[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[3] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(p_1_in[2]),
        .Q(p_1_in[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[4] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(p_1_in[1]),
        .Q(p_1_in[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[5] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(p_1_in[0]),
        .Q(\cc_count_r_reg_n_0_[5] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAABAAAAAAAAA)) 
    count_13d_flop_r_i_1
       (.I0(\count_13d_srl_r_reg_n_0_[11] ),
        .I1(\count_13d_srl_r_reg_n_0_[5] ),
        .I2(reset_r),
        .I3(\count_13d_srl_r_reg_n_0_[8] ),
        .I4(count_13d_flop_r_i_2_n_0),
        .I5(count_13d_flop_r_i_3_n_0),
        .O(count_13d_flop_r_i_1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_13d_flop_r_i_2
       (.I0(\count_13d_srl_r_reg_n_0_[2] ),
        .I1(\count_13d_srl_r_reg_n_0_[9] ),
        .I2(\count_13d_srl_r_reg_n_0_[4] ),
        .I3(\count_13d_srl_r_reg_n_0_[7] ),
        .O(count_13d_flop_r_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    count_13d_flop_r_i_3
       (.I0(\count_13d_srl_r_reg_n_0_[6] ),
        .I1(\count_13d_srl_r_reg_n_0_[11] ),
        .I2(\count_13d_srl_r_reg_n_0_[1] ),
        .I3(\count_13d_srl_r_reg_n_0_[10] ),
        .I4(\count_13d_srl_r_reg_n_0_[0] ),
        .I5(\count_13d_srl_r_reg_n_0_[3] ),
        .O(count_13d_flop_r_i_3_n_0));
  FDRE count_13d_flop_r_reg
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(count_13d_flop_r_i_1_n_0),
        .Q(count_13d_flop_r),
        .R(SR));
  FDRE \count_13d_srl_r_reg[0] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(count_13d_flop_r),
        .Q(\count_13d_srl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[10] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[9] ),
        .Q(\count_13d_srl_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[11] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[10] ),
        .Q(\count_13d_srl_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[1] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[0] ),
        .Q(\count_13d_srl_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[2] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[1] ),
        .Q(\count_13d_srl_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[3] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[2] ),
        .Q(\count_13d_srl_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[4] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[3] ),
        .Q(\count_13d_srl_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[5] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[4] ),
        .Q(\count_13d_srl_r_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[6] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[5] ),
        .Q(\count_13d_srl_r_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[7] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[6] ),
        .Q(\count_13d_srl_r_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[8] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[7] ),
        .Q(\count_13d_srl_r_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[9] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[8] ),
        .Q(\count_13d_srl_r_reg_n_0_[9] ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFBF8)) 
    count_16d_flop_r_i_1
       (.I0(\count_16d_srl_r_reg_n_0_[14] ),
        .I1(\count_13d_srl_r_reg_n_0_[11] ),
        .I2(count_16d_flop_r0),
        .I3(count_16d_flop_r),
        .O(count_16d_flop_r_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    count_16d_flop_r_i_2
       (.I0(count_16d_flop_r_i_3_n_0),
        .I1(\count_16d_srl_r_reg_n_0_[7] ),
        .I2(\count_16d_srl_r_reg_n_0_[0] ),
        .I3(\count_16d_srl_r_reg_n_0_[13] ),
        .I4(\count_16d_srl_r_reg_n_0_[11] ),
        .I5(count_16d_flop_r_i_4_n_0),
        .O(count_16d_flop_r0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_16d_flop_r_i_3
       (.I0(\count_16d_srl_r_reg_n_0_[2] ),
        .I1(\count_16d_srl_r_reg_n_0_[3] ),
        .I2(\count_16d_srl_r_reg_n_0_[1] ),
        .I3(\count_16d_srl_r_reg_n_0_[8] ),
        .O(count_16d_flop_r_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    count_16d_flop_r_i_4
       (.I0(\count_16d_srl_r_reg_n_0_[6] ),
        .I1(reset_r),
        .I2(\count_16d_srl_r_reg_n_0_[4] ),
        .I3(\count_16d_srl_r_reg_n_0_[9] ),
        .I4(count_16d_flop_r_i_5_n_0),
        .O(count_16d_flop_r_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_16d_flop_r_i_5
       (.I0(\count_16d_srl_r_reg_n_0_[12] ),
        .I1(\count_16d_srl_r_reg_n_0_[14] ),
        .I2(\count_16d_srl_r_reg_n_0_[5] ),
        .I3(\count_16d_srl_r_reg_n_0_[10] ),
        .O(count_16d_flop_r_i_5_n_0));
  FDRE count_16d_flop_r_reg
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(count_16d_flop_r_i_1_n_0),
        .Q(count_16d_flop_r),
        .R(SR));
  LUT2 #(
    .INIT(4'hB)) 
    \count_16d_srl_r[0]_i_1 
       (.I0(\count_13d_srl_r_reg_n_0_[11] ),
        .I1(\cc_count_r_reg[0]_1 ),
        .O(count_16d_srl_r0));
  FDRE \count_16d_srl_r_reg[0] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(count_16d_flop_r),
        .Q(\count_16d_srl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[10] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[9] ),
        .Q(\count_16d_srl_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[11] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[10] ),
        .Q(\count_16d_srl_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[12] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[11] ),
        .Q(\count_16d_srl_r_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[13] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[12] ),
        .Q(\count_16d_srl_r_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[14] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[13] ),
        .Q(\count_16d_srl_r_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[1] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[0] ),
        .Q(\count_16d_srl_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[2] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[1] ),
        .Q(\count_16d_srl_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[3] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[2] ),
        .Q(\count_16d_srl_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[4] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[3] ),
        .Q(\count_16d_srl_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[5] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[4] ),
        .Q(\count_16d_srl_r_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[6] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[5] ),
        .Q(\count_16d_srl_r_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[7] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[6] ),
        .Q(\count_16d_srl_r_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[8] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[7] ),
        .Q(\count_16d_srl_r_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[9] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[8] ),
        .Q(\count_16d_srl_r_reg_n_0_[9] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFBFFF80)) 
    count_24d_flop_r_i_1
       (.I0(\count_24d_srl_r_reg_n_0_[22] ),
        .I1(\count_16d_srl_r_reg_n_0_[14] ),
        .I2(\count_13d_srl_r_reg_n_0_[11] ),
        .I3(count_24d_flop_r0),
        .I4(count_24d_flop_r),
        .O(count_24d_flop_r_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    count_24d_flop_r_i_2
       (.I0(count_24d_flop_r_i_3_n_0),
        .I1(count_24d_flop_r_i_4_n_0),
        .I2(count_24d_flop_r_i_5_n_0),
        .I3(count_24d_flop_r_i_6_n_0),
        .I4(count_24d_flop_r_i_7_n_0),
        .I5(count_24d_flop_r_i_8_n_0),
        .O(count_24d_flop_r0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_24d_flop_r_i_3
       (.I0(\count_24d_srl_r_reg_n_0_[16] ),
        .I1(\count_24d_srl_r_reg_n_0_[14] ),
        .I2(\count_24d_srl_r_reg_n_0_[17] ),
        .I3(\count_24d_srl_r_reg_n_0_[18] ),
        .O(count_24d_flop_r_i_3_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    count_24d_flop_r_i_4
       (.I0(\count_24d_srl_r_reg_n_0_[1] ),
        .I1(\count_24d_srl_r_reg_n_0_[6] ),
        .I2(\count_24d_srl_r_reg_n_0_[3] ),
        .I3(\count_24d_srl_r_reg_n_0_[11] ),
        .O(count_24d_flop_r_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_24d_flop_r_i_5
       (.I0(\count_24d_srl_r_reg_n_0_[4] ),
        .I1(\count_24d_srl_r_reg_n_0_[7] ),
        .I2(\count_24d_srl_r_reg_n_0_[19] ),
        .I3(\count_24d_srl_r_reg_n_0_[5] ),
        .O(count_24d_flop_r_i_5_n_0));
  LUT4 #(
    .INIT(16'hFFEF)) 
    count_24d_flop_r_i_6
       (.I0(\count_24d_srl_r_reg_n_0_[9] ),
        .I1(\count_24d_srl_r_reg_n_0_[22] ),
        .I2(reset_r),
        .I3(\count_24d_srl_r_reg_n_0_[10] ),
        .O(count_24d_flop_r_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_24d_flop_r_i_7
       (.I0(\count_24d_srl_r_reg_n_0_[20] ),
        .I1(\count_24d_srl_r_reg_n_0_[0] ),
        .I2(\count_24d_srl_r_reg_n_0_[2] ),
        .I3(\count_24d_srl_r_reg_n_0_[8] ),
        .O(count_24d_flop_r_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_24d_flop_r_i_8
       (.I0(\count_24d_srl_r_reg_n_0_[15] ),
        .I1(\count_24d_srl_r_reg_n_0_[21] ),
        .I2(\count_24d_srl_r_reg_n_0_[12] ),
        .I3(\count_24d_srl_r_reg_n_0_[13] ),
        .O(count_24d_flop_r_i_8_n_0));
  FDRE count_24d_flop_r_reg
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(count_24d_flop_r_i_1_n_0),
        .Q(count_24d_flop_r),
        .R(SR));
  LUT3 #(
    .INIT(8'h8F)) 
    \count_24d_srl_r[0]_i_1 
       (.I0(\count_16d_srl_r_reg_n_0_[14] ),
        .I1(\count_13d_srl_r_reg_n_0_[11] ),
        .I2(\cc_count_r_reg[0]_1 ),
        .O(\count_24d_srl_r[0]_i_1_n_0 ));
  FDRE \count_24d_srl_r_reg[0] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(count_24d_flop_r),
        .Q(\count_24d_srl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[10] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[9] ),
        .Q(\count_24d_srl_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[11] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[10] ),
        .Q(\count_24d_srl_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[12] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[11] ),
        .Q(\count_24d_srl_r_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[13] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[12] ),
        .Q(\count_24d_srl_r_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[14] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[13] ),
        .Q(\count_24d_srl_r_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[15] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[14] ),
        .Q(\count_24d_srl_r_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[16] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[15] ),
        .Q(\count_24d_srl_r_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[17] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[16] ),
        .Q(\count_24d_srl_r_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[18] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[17] ),
        .Q(\count_24d_srl_r_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[19] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[18] ),
        .Q(\count_24d_srl_r_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[1] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[0] ),
        .Q(\count_24d_srl_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[20] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[19] ),
        .Q(\count_24d_srl_r_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[21] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[20] ),
        .Q(\count_24d_srl_r_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[22] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[21] ),
        .Q(\count_24d_srl_r_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[2] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[1] ),
        .Q(\count_24d_srl_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[3] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[2] ),
        .Q(\count_24d_srl_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[4] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[3] ),
        .Q(\count_24d_srl_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[5] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[4] ),
        .Q(\count_24d_srl_r_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[6] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[5] ),
        .Q(\count_24d_srl_r_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[7] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[6] ),
        .Q(\count_24d_srl_r_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[8] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[7] ),
        .Q(\count_24d_srl_r_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[9] 
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[8] ),
        .Q(\count_24d_srl_r_reg_n_0_[9] ),
        .R(1'b0));
  FDRE reset_r_reg
       (.C(\cc_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(SR),
        .Q(reset_r),
        .R(1'b0));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_SUPPORT_RESET_LOGIC
   (sysreset_from_support,
    gt_reset_out,
    CLK,
    init_clk,
    D,
    \debounce_gt_rst_r_reg[0]_0 );
  output sysreset_from_support;
  output gt_reset_out;
  input CLK;
  input init_clk;
  input [0:0]D;
  input [0:0]\debounce_gt_rst_r_reg[0]_0 ;

  wire CLK;
  wire [0:0]D;
  wire SYSTEM_RESET0_n_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [0:3]debounce_gt_rst_r;
  wire [0:0]\debounce_gt_rst_r_reg[0]_0 ;
  wire \dly_gt_rst_r_reg[17]_srl18_n_0 ;
  wire gt_reset_out;
  wire gt_rst_r;
  wire gt_rst_r0_n_0;
  wire init_clk;
  wire [0:3]reset_debounce_r;
  wire sysreset_from_support;
  wire u_rst_sync_gt_n_0;
  wire \NLW_dly_gt_rst_r_reg[17]_srl18_Q31_UNCONNECTED ;

  LUT4 #(
    .INIT(16'h8000)) 
    SYSTEM_RESET0
       (.I0(reset_debounce_r[2]),
        .I1(reset_debounce_r[3]),
        .I2(reset_debounce_r[0]),
        .I3(reset_debounce_r[1]),
        .O(SYSTEM_RESET0_n_0));
  FDRE #(
    .INIT(1'b1)) 
    SYSTEM_RESET_reg
       (.C(CLK),
        .CE(1'b1),
        .D(SYSTEM_RESET0_n_0),
        .Q(sysreset_from_support),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \debounce_gt_rst_r_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\debounce_gt_rst_r_reg[0]_0 ),
        .Q(debounce_gt_rst_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \debounce_gt_rst_r_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(debounce_gt_rst_r[0]),
        .Q(debounce_gt_rst_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \debounce_gt_rst_r_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(debounce_gt_rst_r[1]),
        .Q(debounce_gt_rst_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \debounce_gt_rst_r_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(debounce_gt_rst_r[2]),
        .Q(debounce_gt_rst_r[3]),
        .R(1'b0));
  (* srl_bus_name = "inst/\support_reset_logic_i/dly_gt_rst_r_reg " *) 
  (* srl_name = "inst/\support_reset_logic_i/dly_gt_rst_r_reg[17]_srl18 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \dly_gt_rst_r_reg[17]_srl18 
       (.A({1'b1,1'b0,1'b0,1'b0,1'b1}),
        .CE(1'b1),
        .CLK(init_clk),
        .D(gt_rst_r),
        .Q(\dly_gt_rst_r_reg[17]_srl18_n_0 ),
        .Q31(\NLW_dly_gt_rst_r_reg[17]_srl18_Q31_UNCONNECTED ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gt_rst_r_reg[18] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\dly_gt_rst_r_reg[17]_srl18_n_0 ),
        .Q(gt_reset_out),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h8000)) 
    gt_rst_r0
       (.I0(debounce_gt_rst_r[2]),
        .I1(debounce_gt_rst_r[3]),
        .I2(debounce_gt_rst_r[0]),
        .I3(debounce_gt_rst_r[1]),
        .O(gt_rst_r0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gt_rst_r_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(gt_rst_r0_n_0),
        .Q(gt_rst_r),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \reset_debounce_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(D),
        .Q(reset_debounce_r[0]),
        .S(u_rst_sync_gt_n_0));
  FDSE #(
    .INIT(1'b0)) 
    \reset_debounce_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reset_debounce_r[0]),
        .Q(reset_debounce_r[1]),
        .S(u_rst_sync_gt_n_0));
  FDSE #(
    .INIT(1'b0)) 
    \reset_debounce_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reset_debounce_r[1]),
        .Q(reset_debounce_r[2]),
        .S(u_rst_sync_gt_n_0));
  FDSE #(
    .INIT(1'b0)) 
    \reset_debounce_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reset_debounce_r[2]),
        .Q(reset_debounce_r[3]),
        .S(u_rst_sync_gt_n_0));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync_1 u_rst_sync_gt
       (.CLK(CLK),
        .SS(u_rst_sync_gt_n_0),
        .in0(gt_rst_r));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_SYM_DEC
   (RX_SEP_reg_0,
    RX_SEP7_reg_0,
    rxdatavalid_r_reg_0,
    illegal_btf_i,
    got_cc_i,
    got_idles_i,
    remote_ready_i,
    \RX_SEP_NB_reg[2]_0 ,
    rx_pe_data_v_c,
    pipe1_rx_pdu_in_progress_c,
    D,
    rx_sep_c,
    \RX_SEP_NB_reg[1]_0 ,
    \RX_SEP_NB_reg[2]_1 ,
    RX_SEP_reg_1,
    \RX_SEP_NB_reg[2]_2 ,
    RX_HEADER_0_REG_reg_0,
    \RX_DATA_REG_reg[0]_0 ,
    rx_header_1_i,
    rxdatavalid_i,
    sys_reset_out,
    \RX_DATA_REG_reg[0]_1 ,
    Q,
    remote_ready_det_reg_0,
    rx_pe_data_v_r_reg);
  output RX_SEP_reg_0;
  output RX_SEP7_reg_0;
  output rxdatavalid_r_reg_0;
  output illegal_btf_i;
  output got_cc_i;
  output got_idles_i;
  output remote_ready_i;
  output \RX_SEP_NB_reg[2]_0 ;
  output rx_pe_data_v_c;
  output pipe1_rx_pdu_in_progress_c;
  output [67:0]D;
  output rx_sep_c;
  output \RX_SEP_NB_reg[1]_0 ;
  output \RX_SEP_NB_reg[2]_1 ;
  output RX_SEP_reg_1;
  output \RX_SEP_NB_reg[2]_2 ;
  input RX_HEADER_0_REG_reg_0;
  input \RX_DATA_REG_reg[0]_0 ;
  input rx_header_1_i;
  input rxdatavalid_i;
  input sys_reset_out;
  input \RX_DATA_REG_reg[0]_1 ;
  input [63:0]Q;
  input remote_ready_det_reg_0;
  input rx_pe_data_v_r_reg;

  wire [67:0]D;
  wire ILLEGAL_BTF0;
  wire ILLEGAL_BTF_i_10_n_0;
  wire ILLEGAL_BTF_i_11_n_0;
  wire ILLEGAL_BTF_i_12_n_0;
  wire ILLEGAL_BTF_i_13_n_0;
  wire ILLEGAL_BTF_i_2_n_0;
  wire ILLEGAL_BTF_i_3_n_0;
  wire ILLEGAL_BTF_i_4_n_0;
  wire ILLEGAL_BTF_i_5_n_0;
  wire ILLEGAL_BTF_i_6_n_0;
  wire ILLEGAL_BTF_i_7_n_0;
  wire ILLEGAL_BTF_i_8_n_0;
  wire ILLEGAL_BTF_i_9_n_0;
  wire [63:0]Q;
  wire RXDATAVALID_IN_REG;
  wire \RX_DATA_REG_reg[0]_0 ;
  wire \RX_DATA_REG_reg[0]_1 ;
  wire RX_HEADER_0_REG_reg_0;
  wire \RX_PE_DATA[0]_i_1_n_0 ;
  wire \RX_PE_DATA[48]_i_1_n_0 ;
  wire \RX_PE_DATA[48]_i_2_n_0 ;
  wire \RX_PE_DATA[49]_i_1_n_0 ;
  wire \RX_PE_DATA[50]_i_1_n_0 ;
  wire \RX_PE_DATA[51]_i_1_n_0 ;
  wire \RX_PE_DATA[52]_i_1_n_0 ;
  wire \RX_PE_DATA[53]_i_1_n_0 ;
  wire \RX_PE_DATA[54]_i_1_n_0 ;
  wire \RX_PE_DATA[55]_i_1_n_0 ;
  wire \RX_PE_DATA[56]_i_1_n_0 ;
  wire \RX_PE_DATA[56]_i_2_n_0 ;
  wire \RX_PE_DATA[57]_i_1_n_0 ;
  wire \RX_PE_DATA[58]_i_1_n_0 ;
  wire \RX_PE_DATA[63]_i_1_n_0 ;
  wire RX_SEP7_i_1_n_0;
  wire RX_SEP7_i_2_n_0;
  wire RX_SEP7_reg_0;
  wire \RX_SEP_NB[0]_i_1_n_0 ;
  wire \RX_SEP_NB[1]_i_1_n_0 ;
  wire \RX_SEP_NB[2]_i_1_n_0 ;
  wire \RX_SEP_NB_reg[1]_0 ;
  wire \RX_SEP_NB_reg[2]_0 ;
  wire \RX_SEP_NB_reg[2]_1 ;
  wire \RX_SEP_NB_reg[2]_2 ;
  wire RX_SEP_i_2_n_0;
  wire RX_SEP_i_3_n_0;
  wire RX_SEP_reg_0;
  wire RX_SEP_reg_1;
  wire got_cc_i;
  wire got_idles_i;
  wire got_na_idles_i;
  wire illegal_btf_i;
  wire [15:0]p_0_in;
  wire [4:0]p_0_in__0;
  wire [2:0]p_1_in;
  wire pipe1_rx_pdu_in_progress_c;
  wire [0:2]remote_rdy_cntr;
  wire remote_rdy_cntr01_out;
  wire \remote_rdy_cntr[0]_i_1_n_0 ;
  wire \remote_rdy_cntr[0]_i_4_n_0 ;
  wire remote_ready_det;
  wire remote_ready_det0;
  wire remote_ready_det_reg_0;
  wire remote_ready_i;
  wire rx_cc_c;
  wire rx_header_1_i;
  wire rx_idle_c;
  wire rx_na_idle_c;
  wire \rx_na_idles_cntr[4]_i_1_n_0 ;
  wire [4:0]rx_na_idles_cntr_reg;
  wire rx_pe_data_v_c;
  wire rx_pe_data_v_r_i_2_n_0;
  wire rx_pe_data_v_r_reg;
  wire rx_sep_c;
  wire rx_sep_c_0;
  wire [0:2]rx_sep_nb_i;
  wire [63:16]rxdata_s;
  wire rxdatavalid_i;
  wire rxdatavalid_r_reg_0;
  wire [0:1]sync_header_c;
  wire [0:1]sync_header_r;
  wire sys_reset_out;

  LUT6 #(
    .INIT(64'h4404440400004404)) 
    ILLEGAL_BTF_i_1
       (.I0(ILLEGAL_BTF_i_2_n_0),
        .I1(ILLEGAL_BTF_i_3_n_0),
        .I2(ILLEGAL_BTF_i_4_n_0),
        .I3(ILLEGAL_BTF_i_5_n_0),
        .I4(RXDATAVALID_IN_REG),
        .I5(ILLEGAL_BTF_i_6_n_0),
        .O(ILLEGAL_BTF0));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    ILLEGAL_BTF_i_10
       (.I0(sync_header_c[0]),
        .I1(sync_header_c[1]),
        .I2(p_0_in[4]),
        .O(ILLEGAL_BTF_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT4 #(
    .INIT(16'hBFFF)) 
    ILLEGAL_BTF_i_11
       (.I0(p_0_in[5]),
        .I1(p_0_in[12]),
        .I2(p_0_in[13]),
        .I3(p_0_in[14]),
        .O(ILLEGAL_BTF_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'hE)) 
    ILLEGAL_BTF_i_12
       (.I0(p_0_in[10]),
        .I1(p_0_in[9]),
        .O(ILLEGAL_BTF_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    ILLEGAL_BTF_i_13
       (.I0(p_0_in[14]),
        .I1(p_0_in[13]),
        .I2(p_0_in[12]),
        .O(ILLEGAL_BTF_i_13_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF7FF)) 
    ILLEGAL_BTF_i_2
       (.I0(remote_ready_det_reg_0),
        .I1(sync_header_c[0]),
        .I2(sync_header_c[1]),
        .I3(RXDATAVALID_IN_REG),
        .I4(rx_sep_c_0),
        .I5(RX_SEP7_i_1_n_0),
        .O(ILLEGAL_BTF_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFDF)) 
    ILLEGAL_BTF_i_3
       (.I0(ILLEGAL_BTF_i_7_n_0),
        .I1(p_0_in[7]),
        .I2(p_0_in[11]),
        .I3(p_0_in[3]),
        .I4(p_0_in[6]),
        .I5(ILLEGAL_BTF_i_8_n_0),
        .O(ILLEGAL_BTF_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    ILLEGAL_BTF_i_4
       (.I0(ILLEGAL_BTF_i_7_n_0),
        .I1(p_0_in[5]),
        .I2(p_0_in[12]),
        .I3(p_0_in[13]),
        .I4(p_0_in[14]),
        .I5(RX_SEP_i_2_n_0),
        .O(ILLEGAL_BTF_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFFCBFF)) 
    ILLEGAL_BTF_i_5
       (.I0(p_0_in[4]),
        .I1(p_0_in[6]),
        .I2(p_0_in[7]),
        .I3(p_0_in[11]),
        .I4(p_0_in[3]),
        .O(ILLEGAL_BTF_i_5_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    ILLEGAL_BTF_i_6
       (.I0(ILLEGAL_BTF_i_7_n_0),
        .I1(p_0_in[7]),
        .I2(ILLEGAL_BTF_i_9_n_0),
        .I3(ILLEGAL_BTF_i_10_n_0),
        .I4(ILLEGAL_BTF_i_11_n_0),
        .O(ILLEGAL_BTF_i_6_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    ILLEGAL_BTF_i_7
       (.I0(p_0_in[0]),
        .I1(p_0_in[1]),
        .I2(p_0_in[2]),
        .I3(ILLEGAL_BTF_i_12_n_0),
        .I4(p_0_in[15]),
        .I5(p_0_in[8]),
        .O(ILLEGAL_BTF_i_7_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFDFFFFFFF)) 
    ILLEGAL_BTF_i_8
       (.I0(p_0_in[4]),
        .I1(sync_header_c[1]),
        .I2(sync_header_c[0]),
        .I3(RXDATAVALID_IN_REG),
        .I4(p_0_in[5]),
        .I5(ILLEGAL_BTF_i_13_n_0),
        .O(ILLEGAL_BTF_i_8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    ILLEGAL_BTF_i_9
       (.I0(p_0_in[6]),
        .I1(p_0_in[3]),
        .I2(p_0_in[11]),
        .O(ILLEGAL_BTF_i_9_n_0));
  FDRE ILLEGAL_BTF_reg
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(ILLEGAL_BTF0),
        .Q(illegal_btf_i),
        .R(sys_reset_out));
  FDRE RXDATAVALID_IN_REG_reg
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdatavalid_i),
        .Q(RXDATAVALID_IN_REG),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'h00080000)) 
    RX_CC_i_1
       (.I0(ILLEGAL_BTF_i_4_n_0),
        .I1(p_0_in[7]),
        .I2(p_0_in[6]),
        .I3(p_0_in[3]),
        .I4(p_0_in[11]),
        .O(rx_cc_c));
  FDRE RX_CC_reg
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_cc_c),
        .Q(got_cc_i),
        .R(sys_reset_out));
  FDRE \RX_DATA_REG_reg[0] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[0]),
        .Q(rxdata_s[56]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[10] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[10]),
        .Q(rxdata_s[50]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[11] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[11]),
        .Q(rxdata_s[51]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[12] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[12]),
        .Q(rxdata_s[52]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[13] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[13]),
        .Q(rxdata_s[53]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[14] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[14]),
        .Q(rxdata_s[54]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[15] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[15]),
        .Q(rxdata_s[55]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[16] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[16]),
        .Q(rxdata_s[40]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[17] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[17]),
        .Q(rxdata_s[41]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[18] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[18]),
        .Q(rxdata_s[42]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[19] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[19]),
        .Q(rxdata_s[43]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[1] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rxdata_s[57]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[20] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[20]),
        .Q(rxdata_s[44]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[21] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[21]),
        .Q(rxdata_s[45]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[22] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[22]),
        .Q(rxdata_s[46]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[23] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[23]),
        .Q(rxdata_s[47]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[24] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[24]),
        .Q(rxdata_s[32]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[25] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[25]),
        .Q(rxdata_s[33]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[26] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[26]),
        .Q(rxdata_s[34]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[27] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[27]),
        .Q(rxdata_s[35]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[28] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[28]),
        .Q(rxdata_s[36]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[29] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[29]),
        .Q(rxdata_s[37]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[2] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[2]),
        .Q(rxdata_s[58]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[30] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[30]),
        .Q(rxdata_s[38]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[31] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[31]),
        .Q(rxdata_s[39]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[32] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[32]),
        .Q(rxdata_s[24]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[33] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[33]),
        .Q(rxdata_s[25]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[34] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[34]),
        .Q(rxdata_s[26]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[35] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[35]),
        .Q(rxdata_s[27]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[36] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[36]),
        .Q(rxdata_s[28]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[37] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[37]),
        .Q(rxdata_s[29]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[38] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[38]),
        .Q(rxdata_s[30]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[39] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[39]),
        .Q(rxdata_s[31]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[3] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[3]),
        .Q(rxdata_s[59]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[40] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[40]),
        .Q(rxdata_s[16]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[41] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[41]),
        .Q(rxdata_s[17]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[42] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[42]),
        .Q(rxdata_s[18]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[43] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[43]),
        .Q(rxdata_s[19]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[44] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[44]),
        .Q(rxdata_s[20]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[45] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[45]),
        .Q(rxdata_s[21]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[46] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[46]),
        .Q(rxdata_s[22]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[47] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[47]),
        .Q(rxdata_s[23]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[48] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[48]),
        .Q(p_0_in[0]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[49] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[49]),
        .Q(p_0_in[1]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[4] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[4]),
        .Q(rxdata_s[60]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[50] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[50]),
        .Q(p_0_in[2]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[51] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[51]),
        .Q(p_0_in[3]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[52] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[52]),
        .Q(p_0_in[4]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[53] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[53]),
        .Q(p_0_in[5]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[54] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[54]),
        .Q(p_0_in[6]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[55] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[55]),
        .Q(p_0_in[7]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[56] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[56]),
        .Q(p_0_in[8]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[57] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[57]),
        .Q(p_0_in[9]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[58] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[58]),
        .Q(p_0_in[10]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[59] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[59]),
        .Q(p_0_in[11]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[5] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[5]),
        .Q(rxdata_s[61]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[60] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[60]),
        .Q(p_0_in[12]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[61] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[61]),
        .Q(p_0_in[13]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[62] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[62]),
        .Q(p_0_in[14]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[63] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[63]),
        .Q(p_0_in[15]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[6] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[6]),
        .Q(rxdata_s[62]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[7] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[7]),
        .Q(rxdata_s[63]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[8] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[8]),
        .Q(rxdata_s[48]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE \RX_DATA_REG_reg[9] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[9]),
        .Q(rxdata_s[49]),
        .R(\RX_DATA_REG_reg[0]_1 ));
  FDRE RX_HEADER_0_REG_reg
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(RX_HEADER_0_REG_reg_0),
        .Q(sync_header_c[1]),
        .R(1'b0));
  FDRE RX_HEADER_1_REG_reg
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_header_1_i),
        .Q(sync_header_c[0]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    RX_IDLE_i_1
       (.I0(ILLEGAL_BTF_i_6_n_0),
        .O(rx_idle_c));
  FDRE RX_IDLE_reg
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_idle_c),
        .Q(got_idles_i),
        .R(sys_reset_out));
  LUT1 #(
    .INIT(2'h1)) 
    RX_NA_IDLE_i_1
       (.I0(ILLEGAL_BTF_i_3_n_0),
        .O(rx_na_idle_c));
  FDRE RX_NA_IDLE_reg
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_na_idle_c),
        .Q(got_na_idles_i),
        .R(sys_reset_out));
  LUT6 #(
    .INIT(64'hABAAABABABABABAB)) 
    \RX_PE_DATA[0]_i_1 
       (.I0(sys_reset_out),
        .I1(rx_sep_c_0),
        .I2(RX_SEP7_i_1_n_0),
        .I3(sync_header_c[0]),
        .I4(sync_header_c[1]),
        .I5(RXDATAVALID_IN_REG),
        .O(\RX_PE_DATA[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAFFBF)) 
    \RX_PE_DATA[48]_i_1 
       (.I0(sys_reset_out),
        .I1(RXDATAVALID_IN_REG),
        .I2(sync_header_c[1]),
        .I3(sync_header_c[0]),
        .I4(RX_SEP7_i_1_n_0),
        .O(\RX_PE_DATA[48]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[48]_i_2 
       (.I0(p_0_in[7]),
        .I1(rx_sep_c_0),
        .O(\RX_PE_DATA[48]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[49]_i_1 
       (.I0(p_0_in[6]),
        .I1(rx_sep_c_0),
        .O(\RX_PE_DATA[49]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[50]_i_1 
       (.I0(p_0_in[5]),
        .I1(rx_sep_c_0),
        .O(\RX_PE_DATA[50]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[51]_i_1 
       (.I0(p_0_in[4]),
        .I1(rx_sep_c_0),
        .O(\RX_PE_DATA[51]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[52]_i_1 
       (.I0(p_0_in[3]),
        .I1(rx_sep_c_0),
        .O(\RX_PE_DATA[52]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[53]_i_1 
       (.I0(p_0_in[2]),
        .I1(rx_sep_c_0),
        .O(\RX_PE_DATA[53]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[54]_i_1 
       (.I0(p_0_in[1]),
        .I1(rx_sep_c_0),
        .O(\RX_PE_DATA[54]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[55]_i_1 
       (.I0(p_0_in[0]),
        .I1(rx_sep_c_0),
        .O(\RX_PE_DATA[55]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFBF)) 
    \RX_PE_DATA[56]_i_1 
       (.I0(sync_header_c[0]),
        .I1(sync_header_c[1]),
        .I2(RXDATAVALID_IN_REG),
        .I3(rx_sep_c_0),
        .I4(sys_reset_out),
        .O(\RX_PE_DATA[56]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[56]_i_2 
       (.I0(p_0_in[15]),
        .I1(RX_SEP7_i_1_n_0),
        .O(\RX_PE_DATA[56]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[57]_i_1 
       (.I0(p_0_in[14]),
        .I1(RX_SEP7_i_1_n_0),
        .O(\RX_PE_DATA[57]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[58]_i_1 
       (.I0(p_0_in[13]),
        .I1(RX_SEP7_i_1_n_0),
        .O(\RX_PE_DATA[58]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[63]_i_1 
       (.I0(p_0_in[8]),
        .I1(RX_SEP7_i_1_n_0),
        .O(\RX_PE_DATA[63]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[0] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[63]),
        .Q(D[67]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[10] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[53]),
        .Q(D[57]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[11] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[52]),
        .Q(D[56]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[12] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[51]),
        .Q(D[55]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[13] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[50]),
        .Q(D[54]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[14] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[49]),
        .Q(D[53]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[15] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[48]),
        .Q(D[52]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[16] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[47]),
        .Q(D[51]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[17] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[46]),
        .Q(D[50]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[18] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[45]),
        .Q(D[49]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[19] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[44]),
        .Q(D[48]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[1] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[62]),
        .Q(D[66]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[20] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[43]),
        .Q(D[47]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[21] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[42]),
        .Q(D[46]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[22] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[41]),
        .Q(D[45]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[23] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[40]),
        .Q(D[44]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[24] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[39]),
        .Q(D[43]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[25] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[38]),
        .Q(D[42]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[26] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[37]),
        .Q(D[41]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[27] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[36]),
        .Q(D[40]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[28] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[35]),
        .Q(D[39]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[29] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[34]),
        .Q(D[38]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[2] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[61]),
        .Q(D[65]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[30] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[33]),
        .Q(D[37]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[31] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[32]),
        .Q(D[36]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[32] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[31]),
        .Q(D[35]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[33] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[30]),
        .Q(D[34]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[34] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[29]),
        .Q(D[33]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[35] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[28]),
        .Q(D[32]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[36] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[27]),
        .Q(D[31]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[37] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[26]),
        .Q(D[30]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[38] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[25]),
        .Q(D[29]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[39] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[24]),
        .Q(D[28]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[3] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[60]),
        .Q(D[64]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[40] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[23]),
        .Q(D[27]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[41] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[22]),
        .Q(D[26]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[42] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[21]),
        .Q(D[25]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[43] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[20]),
        .Q(D[24]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[44] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[19]),
        .Q(D[23]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[45] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[18]),
        .Q(D[22]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[46] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[17]),
        .Q(D[21]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[47] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[16]),
        .Q(D[20]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[48] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_PE_DATA[48]_i_2_n_0 ),
        .Q(D[19]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[49] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_PE_DATA[49]_i_1_n_0 ),
        .Q(D[18]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[4] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[59]),
        .Q(D[63]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[50] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_PE_DATA[50]_i_1_n_0 ),
        .Q(D[17]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[51] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_PE_DATA[51]_i_1_n_0 ),
        .Q(D[16]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[52] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_PE_DATA[52]_i_1_n_0 ),
        .Q(D[15]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[53] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_PE_DATA[53]_i_1_n_0 ),
        .Q(D[14]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[54] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_PE_DATA[54]_i_1_n_0 ),
        .Q(D[13]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[55] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_PE_DATA[55]_i_1_n_0 ),
        .Q(D[12]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[56] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_PE_DATA[56]_i_2_n_0 ),
        .Q(D[11]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[57] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_PE_DATA[57]_i_1_n_0 ),
        .Q(D[10]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[58] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_PE_DATA[58]_i_1_n_0 ),
        .Q(D[9]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[59] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(p_0_in[12]),
        .Q(D[8]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[5] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[58]),
        .Q(D[62]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[60] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(p_0_in[11]),
        .Q(D[7]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[61] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(p_0_in[10]),
        .Q(D[6]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[62] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(p_0_in[9]),
        .Q(D[5]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[63] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_PE_DATA[63]_i_1_n_0 ),
        .Q(D[4]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[6] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[57]),
        .Q(D[61]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[7] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[56]),
        .Q(D[60]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[8] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[55]),
        .Q(D[59]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[9] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdata_s[54]),
        .Q(D[58]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    RX_SEP7_i_1
       (.I0(RX_SEP_i_2_n_0),
        .I1(RX_SEP7_i_2_n_0),
        .I2(p_0_in[11]),
        .I3(p_0_in[12]),
        .I4(p_0_in[15]),
        .I5(p_0_in[14]),
        .O(RX_SEP7_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    RX_SEP7_i_2
       (.I0(p_0_in[9]),
        .I1(p_0_in[10]),
        .I2(p_0_in[8]),
        .I3(p_0_in[13]),
        .O(RX_SEP7_i_2_n_0));
  FDRE RX_SEP7_reg
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(RX_SEP7_i_1_n_0),
        .Q(RX_SEP7_reg_0),
        .R(sys_reset_out));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \RX_SEP_NB[0]_i_1 
       (.I0(p_0_in[2]),
        .I1(rx_sep_c_0),
        .I2(RX_SEP7_i_1_n_0),
        .O(\RX_SEP_NB[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \RX_SEP_NB[1]_i_1 
       (.I0(p_0_in[1]),
        .I1(rx_sep_c_0),
        .I2(RX_SEP7_i_1_n_0),
        .O(\RX_SEP_NB[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \RX_SEP_NB[2]_i_1 
       (.I0(p_0_in[0]),
        .I1(rx_sep_c_0),
        .I2(RX_SEP7_i_1_n_0),
        .O(\RX_SEP_NB[2]_i_1_n_0 ));
  FDRE \RX_SEP_NB_reg[0] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_SEP_NB[0]_i_1_n_0 ),
        .Q(rx_sep_nb_i[0]),
        .R(sys_reset_out));
  FDRE \RX_SEP_NB_reg[1] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_SEP_NB[1]_i_1_n_0 ),
        .Q(rx_sep_nb_i[1]),
        .R(sys_reset_out));
  FDRE \RX_SEP_NB_reg[2] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(\RX_SEP_NB[2]_i_1_n_0 ),
        .Q(rx_sep_nb_i[2]),
        .R(sys_reset_out));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    RX_SEP_i_1
       (.I0(RX_SEP_i_2_n_0),
        .I1(RX_SEP_i_3_n_0),
        .I2(p_0_in[10]),
        .I3(p_0_in[11]),
        .I4(p_0_in[9]),
        .I5(p_0_in[12]),
        .O(rx_sep_c_0));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    RX_SEP_i_2
       (.I0(sync_header_c[0]),
        .I1(sync_header_c[1]),
        .I2(RXDATAVALID_IN_REG),
        .O(RX_SEP_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    RX_SEP_i_3
       (.I0(p_0_in[8]),
        .I1(p_0_in[15]),
        .I2(p_0_in[14]),
        .I3(p_0_in[13]),
        .O(RX_SEP_i_3_n_0));
  FDRE RX_SEP_reg
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_sep_c_0),
        .Q(RX_SEP_reg_0),
        .R(sys_reset_out));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h010101FF)) 
    \raw_data_r[2]_i_1 
       (.I0(rx_sep_nb_i[1]),
        .I1(rx_sep_nb_i[2]),
        .I2(rx_sep_nb_i[0]),
        .I3(RX_SEP_reg_0),
        .I4(RX_SEP7_reg_0),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'hF111111F)) 
    \raw_data_r[3]_i_1 
       (.I0(RX_SEP7_reg_0),
        .I1(RX_SEP_reg_0),
        .I2(rx_sep_nb_i[0]),
        .I3(rx_sep_nb_i[1]),
        .I4(rx_sep_nb_i[2]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'hFF11111F)) 
    \raw_data_r[4]_i_1 
       (.I0(RX_SEP7_reg_0),
        .I1(RX_SEP_reg_0),
        .I2(rx_sep_nb_i[2]),
        .I3(rx_sep_nb_i[1]),
        .I4(rx_sep_nb_i[0]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'hE1E1E1FF)) 
    \raw_data_r[5]_i_1 
       (.I0(rx_sep_nb_i[1]),
        .I1(rx_sep_nb_i[2]),
        .I2(rx_sep_nb_i[0]),
        .I3(RX_SEP_reg_0),
        .I4(RX_SEP7_reg_0),
        .O(\RX_SEP_NB_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'hF1F1F1FF)) 
    \raw_data_r[6]_i_1 
       (.I0(rx_sep_nb_i[2]),
        .I1(rx_sep_nb_i[1]),
        .I2(rx_sep_nb_i[0]),
        .I3(RX_SEP7_reg_0),
        .I4(RX_SEP_reg_0),
        .O(\RX_SEP_NB_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \raw_data_r[73]_i_1 
       (.I0(D[3]),
        .I1(rx_pe_data_v_r_reg),
        .I2(got_cc_i),
        .O(pipe1_rx_pdu_in_progress_c));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'hF9F9F9FF)) 
    \raw_data_r[7]_i_1 
       (.I0(rx_sep_nb_i[2]),
        .I1(rx_sep_nb_i[1]),
        .I2(rx_sep_nb_i[0]),
        .I3(RX_SEP7_reg_0),
        .I4(RX_SEP_reg_0),
        .O(\RX_SEP_NB_reg[2]_1 ));
  LUT6 #(
    .INIT(64'h0202020200020202)) 
    \raw_data_r[8]_i_1 
       (.I0(pipe1_rx_pdu_in_progress_c),
        .I1(RX_SEP_reg_0),
        .I2(RX_SEP7_reg_0),
        .I3(sync_header_r[1]),
        .I4(rxdatavalid_r_reg_0),
        .I5(sync_header_r[0]),
        .O(RX_SEP_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'hFFFFDDDF)) 
    \raw_data_r[8]_i_2 
       (.I0(rx_sep_nb_i[2]),
        .I1(rx_sep_nb_i[1]),
        .I2(RX_SEP_reg_0),
        .I3(RX_SEP7_reg_0),
        .I4(rx_sep_nb_i[0]),
        .O(\RX_SEP_NB_reg[2]_2 ));
  LUT5 #(
    .INIT(32'hFFFFFF40)) 
    \raw_data_r[9]_i_1 
       (.I0(sync_header_r[0]),
        .I1(rxdatavalid_r_reg_0),
        .I2(sync_header_r[1]),
        .I3(RX_SEP7_reg_0),
        .I4(RX_SEP_reg_0),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h10000000FFFFFFFF)) 
    \remote_rdy_cntr[0]_i_1 
       (.I0(rx_na_idles_cntr_reg[4]),
        .I1(\remote_rdy_cntr[0]_i_4_n_0 ),
        .I2(remote_rdy_cntr[0]),
        .I3(remote_rdy_cntr[2]),
        .I4(remote_rdy_cntr[1]),
        .I5(remote_ready_det_reg_0),
        .O(\remote_rdy_cntr[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2AAA)) 
    \remote_rdy_cntr[0]_i_2 
       (.I0(remote_ready_det),
        .I1(remote_rdy_cntr[1]),
        .I2(remote_rdy_cntr[2]),
        .I3(remote_rdy_cntr[0]),
        .O(remote_rdy_cntr01_out));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \remote_rdy_cntr[0]_i_3 
       (.I0(remote_rdy_cntr[0]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .O(p_1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \remote_rdy_cntr[0]_i_4 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[1]),
        .I2(rx_na_idles_cntr_reg[0]),
        .I3(rx_na_idles_cntr_reg[3]),
        .O(\remote_rdy_cntr[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \remote_rdy_cntr[1]_i_1 
       (.I0(remote_rdy_cntr[1]),
        .I1(remote_rdy_cntr[2]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \remote_rdy_cntr[2]_i_1 
       (.I0(remote_rdy_cntr[2]),
        .O(p_1_in[0]));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[0] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(p_1_in[2]),
        .Q(remote_rdy_cntr[0]),
        .R(\remote_rdy_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[1] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(p_1_in[1]),
        .Q(remote_rdy_cntr[1]),
        .R(\remote_rdy_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[2] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(p_1_in[0]),
        .Q(remote_rdy_cntr[2]),
        .R(\remote_rdy_cntr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'h00000800)) 
    remote_ready_det_i_1
       (.I0(remote_ready_det_reg_0),
        .I1(sync_header_c[0]),
        .I2(sync_header_c[1]),
        .I3(RXDATAVALID_IN_REG),
        .I4(ILLEGAL_BTF_i_6_n_0),
        .O(remote_ready_det0));
  FDRE remote_ready_det_reg
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(remote_ready_det0),
        .Q(remote_ready_det),
        .R(sys_reset_out));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h80)) 
    remote_ready_r_i_1
       (.I0(remote_rdy_cntr[0]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .O(remote_ready_i));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rx_na_idles_cntr[0]_i_1 
       (.I0(rx_na_idles_cntr_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rx_na_idles_cntr[1]_i_1 
       (.I0(rx_na_idles_cntr_reg[1]),
        .I1(rx_na_idles_cntr_reg[0]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \rx_na_idles_cntr[2]_i_1 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[1]),
        .I2(rx_na_idles_cntr_reg[0]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_na_idles_cntr[3]_i_1 
       (.I0(rx_na_idles_cntr_reg[3]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[2]),
        .O(p_0_in__0[3]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \rx_na_idles_cntr[4]_i_1 
       (.I0(remote_ready_det_reg_0),
        .I1(remote_rdy_cntr[1]),
        .I2(remote_rdy_cntr[2]),
        .I3(remote_rdy_cntr[0]),
        .O(\rx_na_idles_cntr[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rx_na_idles_cntr[4]_i_2 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[1]),
        .I2(rx_na_idles_cntr_reg[0]),
        .I3(rx_na_idles_cntr_reg[3]),
        .I4(rx_na_idles_cntr_reg[4]),
        .O(p_0_in__0[4]));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[0] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(got_na_idles_i),
        .D(p_0_in__0[0]),
        .Q(rx_na_idles_cntr_reg[0]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[1] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(got_na_idles_i),
        .D(p_0_in__0[1]),
        .Q(rx_na_idles_cntr_reg[1]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[2] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(got_na_idles_i),
        .D(p_0_in__0[2]),
        .Q(rx_na_idles_cntr_reg[2]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[3] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(got_na_idles_i),
        .D(p_0_in__0[3]),
        .Q(rx_na_idles_cntr_reg[3]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[4] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(got_na_idles_i),
        .D(p_0_in__0[4]),
        .Q(rx_na_idles_cntr_reg[4]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8888A888)) 
    rx_pe_data_v_r_i_1
       (.I0(rx_pe_data_v_r_reg),
        .I1(rx_pe_data_v_r_i_2_n_0),
        .I2(sync_header_r[1]),
        .I3(rxdatavalid_r_reg_0),
        .I4(sync_header_r[0]),
        .O(rx_pe_data_v_c));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'hEEEEEEE0)) 
    rx_pe_data_v_r_i_2
       (.I0(RX_SEP7_reg_0),
        .I1(RX_SEP_reg_0),
        .I2(rx_sep_nb_i[0]),
        .I3(rx_sep_nb_i[2]),
        .I4(rx_sep_nb_i[1]),
        .O(rx_pe_data_v_r_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_sep_r_i_1
       (.I0(RX_SEP_reg_0),
        .I1(rx_pe_data_v_r_reg),
        .O(rx_sep_c));
  FDRE rxdatavalid_r_reg
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(1'b1),
        .D(RXDATAVALID_IN_REG),
        .Q(rxdatavalid_r_reg_0),
        .R(sys_reset_out));
  FDRE \sync_header_r_reg[0] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(RXDATAVALID_IN_REG),
        .D(sync_header_c[0]),
        .Q(sync_header_r[0]),
        .R(sys_reset_out));
  FDRE \sync_header_r_reg[1] 
       (.C(\RX_DATA_REG_reg[0]_0 ),
        .CE(RXDATAVALID_IN_REG),
        .D(sync_header_c[1]),
        .Q(sync_header_r[1]),
        .R(sys_reset_out));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_SYM_GEN
   (rst_pma_init_usrclk,
    TX_HEADER_1_reg_0,
    stg5_reg,
    \TX_DATA_reg[63]_0 ,
    stg1_aurora_64b66b_SL_cdc_to_reg,
    stg5_reg_0,
    TX_HEADER_0_reg_0,
    txdatavalid_symgen_i,
    channel_up_tx_if,
    TX_HEADER_1_reg_1,
    TX_HEADER_1_reg_2,
    gen_cc_i,
    gen_ch_bond_i,
    \TX_DATA_reg[59]_0 ,
    \TX_DATA_reg[55]_0 ,
    \TX_DATA_reg[63]_1 ,
    \TX_DATA_reg[63]_2 ,
    \TX_DATA_reg[56]_0 ,
    \TX_DATA_reg[51]_0 ,
    \TX_DATA_reg[50]_0 ,
    \TX_DATA_reg[49]_0 ,
    \TX_DATA_reg[48]_0 ,
    \TX_DATA_reg[58]_0 ,
    \TX_DATA_reg[58]_1 ,
    \TX_DATA_reg[57]_0 ,
    \TX_DATA_reg[7]_0 ,
    \TX_DATA_reg[59]_1 ,
    \TX_DATA_reg[62]_0 ,
    \TX_DATA_reg[61]_0 ,
    \TX_DATA_reg[60]_0 ,
    \TX_DATA_reg[59]_2 );
  output rst_pma_init_usrclk;
  output [1:0]TX_HEADER_1_reg_0;
  output stg5_reg;
  output [63:0]\TX_DATA_reg[63]_0 ;
  input stg1_aurora_64b66b_SL_cdc_to_reg;
  input stg5_reg_0;
  input TX_HEADER_0_reg_0;
  input txdatavalid_symgen_i;
  input channel_up_tx_if;
  input TX_HEADER_1_reg_1;
  input TX_HEADER_1_reg_2;
  input gen_cc_i;
  input gen_ch_bond_i;
  input \TX_DATA_reg[59]_0 ;
  input [3:0]\TX_DATA_reg[55]_0 ;
  input \TX_DATA_reg[63]_1 ;
  input \TX_DATA_reg[63]_2 ;
  input \TX_DATA_reg[56]_0 ;
  input \TX_DATA_reg[51]_0 ;
  input \TX_DATA_reg[50]_0 ;
  input \TX_DATA_reg[49]_0 ;
  input \TX_DATA_reg[48]_0 ;
  input \TX_DATA_reg[58]_0 ;
  input \TX_DATA_reg[58]_1 ;
  input \TX_DATA_reg[57]_0 ;
  input [47:0]\TX_DATA_reg[7]_0 ;
  input \TX_DATA_reg[59]_1 ;
  input \TX_DATA_reg[62]_0 ;
  input \TX_DATA_reg[61]_0 ;
  input \TX_DATA_reg[60]_0 ;
  input \TX_DATA_reg[59]_2 ;

  wire \TX_DATA_reg[48]_0 ;
  wire \TX_DATA_reg[49]_0 ;
  wire \TX_DATA_reg[50]_0 ;
  wire \TX_DATA_reg[51]_0 ;
  wire [3:0]\TX_DATA_reg[55]_0 ;
  wire \TX_DATA_reg[56]_0 ;
  wire \TX_DATA_reg[57]_0 ;
  wire \TX_DATA_reg[58]_0 ;
  wire \TX_DATA_reg[58]_1 ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[59]_1 ;
  wire \TX_DATA_reg[59]_2 ;
  wire \TX_DATA_reg[60]_0 ;
  wire \TX_DATA_reg[61]_0 ;
  wire \TX_DATA_reg[62]_0 ;
  wire [63:0]\TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire \TX_DATA_reg[63]_2 ;
  wire [47:0]\TX_DATA_reg[7]_0 ;
  wire TX_HEADER_0_reg_0;
  wire [1:0]TX_HEADER_1_reg_0;
  wire TX_HEADER_1_reg_1;
  wire TX_HEADER_1_reg_2;
  wire channel_up_tx_if;
  wire gen_cc_i;
  wire gen_ch_bond_i;
  wire rst_pma_init_usrclk;
  wire stg1_aurora_64b66b_SL_cdc_to_reg;
  wire stg5_reg;
  wire stg5_reg_0;
  wire txdatavalid_symgen_i;
  wire u_pma_init_data_sync_n_1;

  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[0] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [40]),
        .Q(\TX_DATA_reg[63]_0 [0]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[10] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [34]),
        .Q(\TX_DATA_reg[63]_0 [10]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[11] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [35]),
        .Q(\TX_DATA_reg[63]_0 [11]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[12] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [36]),
        .Q(\TX_DATA_reg[63]_0 [12]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[13] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [37]),
        .Q(\TX_DATA_reg[63]_0 [13]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[14] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [38]),
        .Q(\TX_DATA_reg[63]_0 [14]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[15] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [39]),
        .Q(\TX_DATA_reg[63]_0 [15]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[16] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [24]),
        .Q(\TX_DATA_reg[63]_0 [16]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[17] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [25]),
        .Q(\TX_DATA_reg[63]_0 [17]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[18] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [26]),
        .Q(\TX_DATA_reg[63]_0 [18]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[19] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [27]),
        .Q(\TX_DATA_reg[63]_0 [19]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[1] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [41]),
        .Q(\TX_DATA_reg[63]_0 [1]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[20] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [28]),
        .Q(\TX_DATA_reg[63]_0 [20]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[21] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [29]),
        .Q(\TX_DATA_reg[63]_0 [21]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[22] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [30]),
        .Q(\TX_DATA_reg[63]_0 [22]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[23] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [31]),
        .Q(\TX_DATA_reg[63]_0 [23]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[24] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [16]),
        .Q(\TX_DATA_reg[63]_0 [24]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[25] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [17]),
        .Q(\TX_DATA_reg[63]_0 [25]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[26] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [18]),
        .Q(\TX_DATA_reg[63]_0 [26]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[27] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [19]),
        .Q(\TX_DATA_reg[63]_0 [27]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[28] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [20]),
        .Q(\TX_DATA_reg[63]_0 [28]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[29] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [21]),
        .Q(\TX_DATA_reg[63]_0 [29]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[2] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [42]),
        .Q(\TX_DATA_reg[63]_0 [2]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[30] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [22]),
        .Q(\TX_DATA_reg[63]_0 [30]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[31] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [23]),
        .Q(\TX_DATA_reg[63]_0 [31]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[32] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [8]),
        .Q(\TX_DATA_reg[63]_0 [32]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[33] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [9]),
        .Q(\TX_DATA_reg[63]_0 [33]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[34] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [10]),
        .Q(\TX_DATA_reg[63]_0 [34]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[35] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [11]),
        .Q(\TX_DATA_reg[63]_0 [35]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[36] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [12]),
        .Q(\TX_DATA_reg[63]_0 [36]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[37] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [13]),
        .Q(\TX_DATA_reg[63]_0 [37]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[38] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [14]),
        .Q(\TX_DATA_reg[63]_0 [38]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[39] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [15]),
        .Q(\TX_DATA_reg[63]_0 [39]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[3] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [43]),
        .Q(\TX_DATA_reg[63]_0 [3]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[40] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [0]),
        .Q(\TX_DATA_reg[63]_0 [40]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[41] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [1]),
        .Q(\TX_DATA_reg[63]_0 [41]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[42] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [2]),
        .Q(\TX_DATA_reg[63]_0 [42]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[43] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [3]),
        .Q(\TX_DATA_reg[63]_0 [43]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[44] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [4]),
        .Q(\TX_DATA_reg[63]_0 [44]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[45] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [5]),
        .Q(\TX_DATA_reg[63]_0 [45]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[46] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [6]),
        .Q(\TX_DATA_reg[63]_0 [46]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[47] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [7]),
        .Q(\TX_DATA_reg[63]_0 [47]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[48] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[48]_0 ),
        .Q(\TX_DATA_reg[63]_0 [48]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[49] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[49]_0 ),
        .Q(\TX_DATA_reg[63]_0 [49]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[4] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [44]),
        .Q(\TX_DATA_reg[63]_0 [4]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[50] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[50]_0 ),
        .Q(\TX_DATA_reg[63]_0 [50]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[51] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[51]_0 ),
        .Q(\TX_DATA_reg[63]_0 [51]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[52] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[55]_0 [0]),
        .Q(\TX_DATA_reg[63]_0 [52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[53] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[55]_0 [1]),
        .Q(\TX_DATA_reg[63]_0 [53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[54] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[55]_0 [2]),
        .Q(\TX_DATA_reg[63]_0 [54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[55] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[55]_0 [3]),
        .Q(\TX_DATA_reg[63]_0 [55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[56] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[56]_0 ),
        .Q(\TX_DATA_reg[63]_0 [56]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[57] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[57]_0 ),
        .Q(\TX_DATA_reg[63]_0 [57]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[58] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[58]_1 ),
        .Q(\TX_DATA_reg[63]_0 [58]),
        .R(\TX_DATA_reg[58]_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[59] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[59]_2 ),
        .Q(\TX_DATA_reg[63]_0 [59]),
        .S(\TX_DATA_reg[59]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[5] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [45]),
        .Q(\TX_DATA_reg[63]_0 [5]),
        .R(\TX_DATA_reg[58]_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[60] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[60]_0 ),
        .Q(\TX_DATA_reg[63]_0 [60]),
        .S(\TX_DATA_reg[59]_1 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[61] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[61]_0 ),
        .Q(\TX_DATA_reg[63]_0 [61]),
        .S(\TX_DATA_reg[59]_1 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[62] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[62]_0 ),
        .Q(\TX_DATA_reg[63]_0 [62]),
        .S(\TX_DATA_reg[59]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[63] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[63]_2 ),
        .Q(\TX_DATA_reg[63]_0 [63]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[6] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [46]),
        .Q(\TX_DATA_reg[63]_0 [6]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[7] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [47]),
        .Q(\TX_DATA_reg[63]_0 [7]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[8] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [32]),
        .Q(\TX_DATA_reg[63]_0 [8]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[9] 
       (.C(stg5_reg_0),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [33]),
        .Q(\TX_DATA_reg[63]_0 [9]),
        .R(\TX_DATA_reg[58]_0 ));
  FDRE #(
    .INIT(1'b1)) 
    TX_HEADER_0_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(TX_HEADER_0_reg_0),
        .Q(TX_HEADER_1_reg_0[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    TX_HEADER_1_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(u_pma_init_data_sync_n_1),
        .Q(TX_HEADER_1_reg_0[1]),
        .R(1'b0));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync_5 u_pma_init_data_sync
       (.TX_HEADER_1_reg(u_pma_init_data_sync_n_1),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg_0[1]),
        .TX_HEADER_1_reg_1(TX_HEADER_1_reg_1),
        .TX_HEADER_1_reg_2(TX_HEADER_1_reg_2),
        .channel_up_tx_if(channel_up_tx_if),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .stg1_aurora_64b66b_SL_cdc_to_reg_0(stg1_aurora_64b66b_SL_cdc_to_reg),
        .stg5_reg_0(stg5_reg),
        .stg5_reg_1(stg5_reg_0),
        .txdatavalid_symgen_i(txdatavalid_symgen_i));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_TX_LL
   (gen_cc_i,
    channel_full_c,
    s_axi_tx_tready_reg,
    gen_sep7_i,
    gen_sep_i,
    gen_cc_flop,
    GEN_SEP_reg,
    Q,
    TX_PE_DATA_V_reg,
    CHANNEL_UP_TX_IF_reg,
    CHANNEL_UP_TX_IF_reg_0,
    CHANNEL_UP_TX_IF_reg_1,
    s_axi_tx_tkeep_5_sp_1,
    s_axi_tx_tkeep_0_sp_1,
    datavalid_pdu_reg,
    s_axi_tx_tkeep_2_sp_1,
    s_axi_tx_tkeep_3_sp_1,
    \TX_PE_DATA_reg[52] ,
    \SEP_NB_reg[2] ,
    \SEP_NB_reg[1] ,
    \SEP_NB_reg[0] ,
    TX_PE_DATA_V_reg_0,
    wait_for_lane_up_r_reg,
    wait_for_lane_up_r_reg_0,
    \TX_PE_DATA_reg[57] ,
    TX_PE_DATA_V_reg_1,
    R0,
    \TX_PE_DATA_reg[0] ,
    tlast_txdv_coincide_r0,
    txdatavalid_i,
    pdu_ok_c,
    \TX_DATA_reg[52] ,
    gen_na_idles_i,
    rst_pma_init_usrclk,
    gen_ch_bond_i,
    channel_up_tx_if,
    GEN_SEP7_reg,
    do_cc_r_reg,
    s_axi_tx_tvalid,
    s_axi_tx_tlast,
    s_axi_tx_tkeep,
    \TX_DATA_reg[63] ,
    s_axi_tx_tdata);
  output gen_cc_i;
  output channel_full_c;
  output s_axi_tx_tready_reg;
  output gen_sep7_i;
  output gen_sep_i;
  output [3:0]gen_cc_flop;
  output GEN_SEP_reg;
  output [47:0]Q;
  output TX_PE_DATA_V_reg;
  output CHANNEL_UP_TX_IF_reg;
  output CHANNEL_UP_TX_IF_reg_0;
  output CHANNEL_UP_TX_IF_reg_1;
  output s_axi_tx_tkeep_5_sp_1;
  output s_axi_tx_tkeep_0_sp_1;
  output datavalid_pdu_reg;
  output s_axi_tx_tkeep_2_sp_1;
  output s_axi_tx_tkeep_3_sp_1;
  output \TX_PE_DATA_reg[52] ;
  output \SEP_NB_reg[2] ;
  output \SEP_NB_reg[1] ;
  output \SEP_NB_reg[0] ;
  output TX_PE_DATA_V_reg_0;
  output wait_for_lane_up_r_reg;
  output wait_for_lane_up_r_reg_0;
  output \TX_PE_DATA_reg[57] ;
  output TX_PE_DATA_V_reg_1;
  input R0;
  input \TX_PE_DATA_reg[0] ;
  input tlast_txdv_coincide_r0;
  input txdatavalid_i;
  input pdu_ok_c;
  input \TX_DATA_reg[52] ;
  input gen_na_idles_i;
  input rst_pma_init_usrclk;
  input gen_ch_bond_i;
  input channel_up_tx_if;
  input GEN_SEP7_reg;
  input do_cc_r_reg;
  input s_axi_tx_tvalid;
  input s_axi_tx_tlast;
  input [0:7]s_axi_tx_tkeep;
  input \TX_DATA_reg[63] ;
  input [0:63]s_axi_tx_tdata;

  wire CHANNEL_UP_TX_IF_reg;
  wire CHANNEL_UP_TX_IF_reg_0;
  wire CHANNEL_UP_TX_IF_reg_1;
  wire GEN_SEP7_reg;
  wire GEN_SEP_reg;
  wire [47:0]Q;
  wire R0;
  wire \SEP_NB_reg[0] ;
  wire \SEP_NB_reg[1] ;
  wire \SEP_NB_reg[2] ;
  wire \TX_DATA_reg[52] ;
  wire \TX_DATA_reg[63] ;
  wire TX_PE_DATA_V_reg;
  wire TX_PE_DATA_V_reg_0;
  wire TX_PE_DATA_V_reg_1;
  wire \TX_PE_DATA_reg[0] ;
  wire \TX_PE_DATA_reg[52] ;
  wire \TX_PE_DATA_reg[57] ;
  wire channel_full_c;
  wire channel_up_tx_if;
  wire datavalid_pdu_reg;
  wire do_cc_r_reg;
  wire [3:0]gen_cc_flop;
  wire gen_cc_i;
  wire gen_ch_bond_i;
  wire gen_na_idles_i;
  wire gen_sep7_i;
  wire gen_sep_i;
  wire in_frame_c;
  wire pdu_ok_c;
  wire rst_pma_init_usrclk;
  wire [0:63]s_axi_tx_tdata;
  wire [0:7]s_axi_tx_tkeep;
  wire s_axi_tx_tkeep_0_sn_1;
  wire s_axi_tx_tkeep_2_sn_1;
  wire s_axi_tx_tkeep_3_sn_1;
  wire s_axi_tx_tkeep_5_sn_1;
  wire s_axi_tx_tlast;
  wire s_axi_tx_tready_reg;
  wire s_axi_tx_tvalid;
  wire tlast_txdv_coincide_r0;
  wire tx_ll_control_sm_i_n_8;
  wire [48:62]tx_pe_data_i;
  wire tx_pe_data_v_i;
  wire txdatavalid_i;
  wire wait_for_lane_up_r_reg;
  wire wait_for_lane_up_r_reg_0;

  assign s_axi_tx_tkeep_0_sp_1 = s_axi_tx_tkeep_0_sn_1;
  assign s_axi_tx_tkeep_2_sp_1 = s_axi_tx_tkeep_2_sn_1;
  assign s_axi_tx_tkeep_3_sp_1 = s_axi_tx_tkeep_3_sn_1;
  assign s_axi_tx_tkeep_5_sp_1 = s_axi_tx_tkeep_5_sn_1;
  aurora_64b66b_SL_aurora_64b66b_SL_TX_LL_CONTROL_SM tx_ll_control_sm_i
       (.CHANNEL_UP_TX_IF_reg(tx_ll_control_sm_i_n_8),
        .CHANNEL_UP_TX_IF_reg_0(CHANNEL_UP_TX_IF_reg),
        .CHANNEL_UP_TX_IF_reg_1(CHANNEL_UP_TX_IF_reg_0),
        .CHANNEL_UP_TX_IF_reg_2(CHANNEL_UP_TX_IF_reg_1),
        .GEN_SEP7_reg_0(gen_sep7_i),
        .GEN_SEP7_reg_1(GEN_SEP7_reg),
        .GEN_SEP_reg_0(gen_sep_i),
        .GEN_SEP_reg_1(GEN_SEP_reg),
        .Q({tx_pe_data_i[48],tx_pe_data_i[49],tx_pe_data_i[50],tx_pe_data_i[53],tx_pe_data_i[54],tx_pe_data_i[55],tx_pe_data_i[57],tx_pe_data_i[58],tx_pe_data_i[59],tx_pe_data_i[60],tx_pe_data_i[61],tx_pe_data_i[62]}),
        .R0(R0),
        .\SEP_NB_reg[0]_0 (\SEP_NB_reg[0] ),
        .\SEP_NB_reg[0]_1 (\TX_PE_DATA_reg[0] ),
        .\SEP_NB_reg[1]_0 (\SEP_NB_reg[1] ),
        .\SEP_NB_reg[2]_0 (\SEP_NB_reg[2] ),
        .\TX_DATA_reg[53] (\TX_DATA_reg[52] ),
        .TX_PE_DATA_V_reg(TX_PE_DATA_V_reg),
        .\TX_PE_DATA_reg[57] (\TX_PE_DATA_reg[57] ),
        .channel_full_c(channel_full_c),
        .channel_up_tx_if(channel_up_tx_if),
        .datavalid_pdu_reg_0(datavalid_pdu_reg),
        .do_cc_r_reg_0(do_cc_r_reg),
        .gen_cc_flop_0(gen_cc_i),
        .gen_cc_flop_1(gen_cc_flop[3:1]),
        .gen_ch_bond_i(gen_ch_bond_i),
        .gen_na_idles_i(gen_na_idles_i),
        .in_frame_c(in_frame_c),
        .pdu_ok_c(pdu_ok_c),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .s_axi_tx_tkeep(s_axi_tx_tkeep),
        .s_axi_tx_tkeep_0_sp_1(s_axi_tx_tkeep_0_sn_1),
        .s_axi_tx_tkeep_2_sp_1(s_axi_tx_tkeep_2_sn_1),
        .s_axi_tx_tkeep_3_sp_1(s_axi_tx_tkeep_3_sn_1),
        .s_axi_tx_tkeep_5_sp_1(s_axi_tx_tkeep_5_sn_1),
        .s_axi_tx_tlast(s_axi_tx_tlast),
        .s_axi_tx_tready_reg_0(s_axi_tx_tready_reg),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .tlast_txdv_coincide_r0(tlast_txdv_coincide_r0),
        .tx_pe_data_v_i(tx_pe_data_v_i),
        .txdatavalid_i(txdatavalid_i),
        .wait_for_lane_up_r_reg(wait_for_lane_up_r_reg),
        .wait_for_lane_up_r_reg_0(wait_for_lane_up_r_reg_0));
  aurora_64b66b_SL_aurora_64b66b_SL_TX_LL_DATAPATH tx_ll_datapath_i
       (.Q({Q,tx_pe_data_i[48],tx_pe_data_i[49],tx_pe_data_i[50],tx_pe_data_i[53],tx_pe_data_i[54],tx_pe_data_i[55],tx_pe_data_i[57],tx_pe_data_i[58],tx_pe_data_i[59],tx_pe_data_i[60],tx_pe_data_i[61],tx_pe_data_i[62]}),
        .\TX_DATA_reg[52] (\TX_DATA_reg[52] ),
        .\TX_DATA_reg[52]_0 (GEN_SEP_reg),
        .\TX_DATA_reg[52]_1 (tx_ll_control_sm_i_n_8),
        .\TX_DATA_reg[63] (gen_sep7_i),
        .\TX_DATA_reg[63]_0 (gen_sep_i),
        .\TX_DATA_reg[63]_1 (\TX_DATA_reg[63] ),
        .TX_PE_DATA_V_reg_0(TX_PE_DATA_V_reg_0),
        .TX_PE_DATA_V_reg_1(TX_PE_DATA_V_reg_1),
        .\TX_PE_DATA_reg[0]_0 (\TX_PE_DATA_reg[0] ),
        .\TX_PE_DATA_reg[52]_0 (\TX_PE_DATA_reg[52] ),
        .channel_up_tx_if(channel_up_tx_if),
        .gen_na_idles_i(gen_na_idles_i),
        .in_frame_c(in_frame_c),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .tx_pe_data_v_i(tx_pe_data_v_i),
        .wait_for_lane_up_r_reg(gen_cc_flop[0]));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_TX_LL_CONTROL_SM
   (gen_cc_flop_0,
    channel_full_c,
    s_axi_tx_tready_reg_0,
    GEN_SEP7_reg_0,
    GEN_SEP_reg_0,
    gen_cc_flop_1,
    CHANNEL_UP_TX_IF_reg,
    TX_PE_DATA_V_reg,
    CHANNEL_UP_TX_IF_reg_0,
    CHANNEL_UP_TX_IF_reg_1,
    CHANNEL_UP_TX_IF_reg_2,
    GEN_SEP_reg_1,
    in_frame_c,
    s_axi_tx_tkeep_5_sp_1,
    s_axi_tx_tkeep_0_sp_1,
    datavalid_pdu_reg_0,
    s_axi_tx_tkeep_2_sp_1,
    s_axi_tx_tkeep_3_sp_1,
    \SEP_NB_reg[2]_0 ,
    \SEP_NB_reg[1]_0 ,
    \SEP_NB_reg[0]_0 ,
    wait_for_lane_up_r_reg,
    wait_for_lane_up_r_reg_0,
    \TX_PE_DATA_reg[57] ,
    R0,
    \SEP_NB_reg[0]_1 ,
    tlast_txdv_coincide_r0,
    txdatavalid_i,
    pdu_ok_c,
    \TX_DATA_reg[53] ,
    gen_na_idles_i,
    Q,
    rst_pma_init_usrclk,
    gen_ch_bond_i,
    channel_up_tx_if,
    tx_pe_data_v_i,
    GEN_SEP7_reg_1,
    do_cc_r_reg_0,
    s_axi_tx_tvalid,
    s_axi_tx_tlast,
    s_axi_tx_tkeep);
  output gen_cc_flop_0;
  output channel_full_c;
  output s_axi_tx_tready_reg_0;
  output GEN_SEP7_reg_0;
  output GEN_SEP_reg_0;
  output [2:0]gen_cc_flop_1;
  output CHANNEL_UP_TX_IF_reg;
  output TX_PE_DATA_V_reg;
  output CHANNEL_UP_TX_IF_reg_0;
  output CHANNEL_UP_TX_IF_reg_1;
  output CHANNEL_UP_TX_IF_reg_2;
  output GEN_SEP_reg_1;
  output in_frame_c;
  output s_axi_tx_tkeep_5_sp_1;
  output s_axi_tx_tkeep_0_sp_1;
  output datavalid_pdu_reg_0;
  output s_axi_tx_tkeep_2_sp_1;
  output s_axi_tx_tkeep_3_sp_1;
  output \SEP_NB_reg[2]_0 ;
  output \SEP_NB_reg[1]_0 ;
  output \SEP_NB_reg[0]_0 ;
  output wait_for_lane_up_r_reg;
  output wait_for_lane_up_r_reg_0;
  output \TX_PE_DATA_reg[57] ;
  input R0;
  input \SEP_NB_reg[0]_1 ;
  input tlast_txdv_coincide_r0;
  input txdatavalid_i;
  input pdu_ok_c;
  input \TX_DATA_reg[53] ;
  input gen_na_idles_i;
  input [11:0]Q;
  input rst_pma_init_usrclk;
  input gen_ch_bond_i;
  input channel_up_tx_if;
  input tx_pe_data_v_i;
  input GEN_SEP7_reg_1;
  input do_cc_r_reg_0;
  input s_axi_tx_tvalid;
  input s_axi_tx_tlast;
  input [0:7]s_axi_tx_tkeep;

  wire CHANNEL_UP_TX_IF_reg;
  wire CHANNEL_UP_TX_IF_reg_0;
  wire CHANNEL_UP_TX_IF_reg_1;
  wire CHANNEL_UP_TX_IF_reg_2;
  wire GEN_SEP7_i_1_n_0;
  wire GEN_SEP7_i_2_n_0;
  wire GEN_SEP7_i_3_n_0;
  wire GEN_SEP7_i_4_n_0;
  wire GEN_SEP7_i_5_n_0;
  wire GEN_SEP7_i_7_n_0;
  wire GEN_SEP7_reg_0;
  wire GEN_SEP7_reg_1;
  wire GEN_SEP_i_1_n_0;
  wire GEN_SEP_i_2_n_0;
  wire GEN_SEP_i_3_n_0;
  wire GEN_SEP_reg_0;
  wire GEN_SEP_reg_1;
  wire [11:0]Q;
  wire R0;
  wire \SEP_NB[0]_i_1_n_0 ;
  wire \SEP_NB[1]_i_1_n_0 ;
  wire \SEP_NB[2]_i_1_n_0 ;
  wire \SEP_NB_reg[0]_0 ;
  wire \SEP_NB_reg[0]_1 ;
  wire \SEP_NB_reg[1]_0 ;
  wire \SEP_NB_reg[2]_0 ;
  wire \TX_DATA[58]_i_3_n_0 ;
  wire \TX_DATA[58]_i_4_n_0 ;
  wire \TX_DATA[60]_i_2_n_0 ;
  wire \TX_DATA[62]_i_3_n_0 ;
  wire \TX_DATA_reg[53] ;
  wire TX_PE_DATA_V_reg;
  wire \TX_PE_DATA_reg[57] ;
  wire channel_full_c;
  wire channel_full_r;
  wire channel_full_r2;
  wire channel_full_r_i_2_n_0;
  wire channel_full_r_i_4_n_0;
  wire channel_up_tx_if;
  wire data_r;
  wire datavalid_in_r;
  wire datavalid_in_r2;
  wire datavalid_pdu;
  wire datavalid_pdu_i_1_n_0;
  wire datavalid_pdu_reg_0;
  wire do_cc_r;
  wire do_cc_r_reg0;
  wire do_cc_r_reg_0;
  wire extend_cc_r;
  wire extend_cc_r_i_1_n_0;
  wire full_data_r;
  wire full_data_r_i_5_n_0;
  wire gen_cc_flop_0;
  wire [2:0]gen_cc_flop_1;
  wire gen_ch_bond_i;
  wire gen_na_idles_i;
  wire gen_sep7_r;
  wire gen_sep7_r_i_1_n_0;
  wire gen_sep_c;
  wire [0:2]gen_sep_nb_c;
  wire [0:2]gen_sep_nb_r;
  wire \gen_sep_nb_r[0]_i_2_n_0 ;
  wire \gen_sep_nb_r[0]_i_3_n_0 ;
  wire \gen_sep_nb_r[1]_i_2_n_0 ;
  wire gen_sep_r;
  wire gen_sep_r_i_1_n_0;
  wire gen_sep_r_i_3_n_0;
  wire gen_sep_r_i_4_n_0;
  wire gen_sep_r_i_5_n_0;
  wire idle_r;
  wire in_frame_c;
  wire next_data_c;
  wire next_full_data_c;
  wire next_idle_c;
  wire next_partial_data_c;
  wire p_17_in;
  wire partial_data_r;
  wire partial_data_r_i_2_n_0;
  wire partial_data_r_i_4_n_0;
  wire pdu_ok_c;
  wire rst_pma_init_usrclk;
  wire [0:7]s_axi_tx_tkeep;
  wire s_axi_tx_tkeep_0_sn_1;
  wire s_axi_tx_tkeep_2_sn_1;
  wire s_axi_tx_tkeep_3_sn_1;
  wire s_axi_tx_tkeep_5_sn_1;
  wire s_axi_tx_tlast;
  wire s_axi_tx_tready0;
  wire s_axi_tx_tready_i_3_n_0;
  wire s_axi_tx_tready_reg_0;
  wire s_axi_tx_tvalid;
  wire sep0_lane0_r;
  wire sep0_lane0_r_i_1_n_0;
  wire [0:2]sep_nb_i;
  wire tlast_txdv_coincide_r;
  wire tlast_txdv_coincide_r0;
  wire tx_pe_data_v_i;
  wire txdatavalid_i;
  wire wait_for_lane_up_r_reg;
  wire wait_for_lane_up_r_reg_0;

  assign s_axi_tx_tkeep_0_sp_1 = s_axi_tx_tkeep_0_sn_1;
  assign s_axi_tx_tkeep_2_sp_1 = s_axi_tx_tkeep_2_sn_1;
  assign s_axi_tx_tkeep_3_sp_1 = s_axi_tx_tkeep_3_sn_1;
  assign s_axi_tx_tkeep_5_sp_1 = s_axi_tx_tkeep_5_sn_1;
  LUT6 #(
    .INIT(64'hFFFFBAFF0000BA00)) 
    GEN_SEP7_i_1
       (.I0(p_17_in),
        .I1(datavalid_in_r2),
        .I2(gen_sep7_r),
        .I3(GEN_SEP7_i_2_n_0),
        .I4(GEN_SEP7_i_3_n_0),
        .I5(GEN_SEP7_reg_0),
        .O(GEN_SEP7_i_1_n_0));
  LUT6 #(
    .INIT(64'h7070707770707070)) 
    GEN_SEP7_i_2
       (.I0(gen_cc_flop_0),
        .I1(GEN_SEP_reg_0),
        .I2(GEN_SEP7_i_4_n_0),
        .I3(datavalid_in_r),
        .I4(GEN_SEP7_i_5_n_0),
        .I5(next_partial_data_c),
        .O(GEN_SEP7_i_2_n_0));
  LUT6 #(
    .INIT(64'hABAABBBBABAAABAA)) 
    GEN_SEP7_i_3
       (.I0(GEN_SEP_i_2_n_0),
        .I1(datavalid_in_r),
        .I2(GEN_SEP7_reg_1),
        .I3(next_partial_data_c),
        .I4(GEN_SEP7_i_7_n_0),
        .I5(pdu_ok_c),
        .O(GEN_SEP7_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'hFFAB)) 
    GEN_SEP7_i_4
       (.I0(gen_sep7_r),
        .I1(GEN_SEP_reg_0),
        .I2(GEN_SEP7_reg_0),
        .I3(datavalid_in_r2),
        .O(GEN_SEP7_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF7FFFFFFF)) 
    GEN_SEP7_i_5
       (.I0(s_axi_tx_tkeep[6]),
        .I1(s_axi_tx_tkeep[4]),
        .I2(s_axi_tx_tkeep[5]),
        .I3(s_axi_tx_tready_reg_0),
        .I4(s_axi_tx_tkeep[0]),
        .I5(\gen_sep_nb_r[0]_i_3_n_0 ),
        .O(GEN_SEP7_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT2 #(
    .INIT(4'hB)) 
    GEN_SEP7_i_7
       (.I0(s_axi_tx_tready_reg_0),
        .I1(sep0_lane0_r),
        .O(GEN_SEP7_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    GEN_SEP7_i_8
       (.I0(s_axi_tx_tkeep[3]),
        .I1(s_axi_tx_tkeep[4]),
        .I2(s_axi_tx_tkeep[6]),
        .I3(s_axi_tx_tkeep[5]),
        .O(s_axi_tx_tkeep_3_sn_1));
  FDRE GEN_SEP7_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(GEN_SEP7_i_1_n_0),
        .Q(GEN_SEP7_reg_0),
        .R(R0));
  LUT6 #(
    .INIT(64'hFEFFFEFECEEECEEE)) 
    GEN_SEP_i_1
       (.I0(gen_sep_c),
        .I1(GEN_SEP_i_2_n_0),
        .I2(GEN_SEP_i_3_n_0),
        .I3(datavalid_in_r),
        .I4(p_17_in),
        .I5(GEN_SEP_reg_0),
        .O(GEN_SEP_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    GEN_SEP_i_2
       (.I0(gen_sep_r),
        .I1(gen_cc_flop_0),
        .I2(datavalid_in_r2),
        .O(GEN_SEP_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT5 #(
    .INIT(32'hFF0E0F0E)) 
    GEN_SEP_i_3
       (.I0(GEN_SEP7_reg_0),
        .I1(gen_sep7_r),
        .I2(datavalid_in_r2),
        .I3(GEN_SEP_reg_0),
        .I4(gen_cc_flop_0),
        .O(GEN_SEP_i_3_n_0));
  FDRE GEN_SEP_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(GEN_SEP_i_1_n_0),
        .Q(GEN_SEP_reg_0),
        .R(R0));
  LUT3 #(
    .INIT(8'hB8)) 
    \SEP_NB[0]_i_1 
       (.I0(gen_sep_nb_c[0]),
        .I1(datavalid_in_r),
        .I2(gen_sep_nb_r[0]),
        .O(\SEP_NB[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \SEP_NB[1]_i_1 
       (.I0(gen_sep_nb_c[1]),
        .I1(datavalid_in_r),
        .I2(gen_sep_nb_r[1]),
        .O(\SEP_NB[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \SEP_NB[2]_i_1 
       (.I0(gen_sep_nb_c[2]),
        .I1(datavalid_in_r),
        .I2(gen_sep_nb_r[2]),
        .O(\SEP_NB[2]_i_1_n_0 ));
  FDRE \SEP_NB_reg[0] 
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(\SEP_NB[0]_i_1_n_0 ),
        .Q(sep_nb_i[0]),
        .R(1'b0));
  FDRE \SEP_NB_reg[1] 
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(\SEP_NB[1]_i_1_n_0 ),
        .Q(sep_nb_i[1]),
        .R(1'b0));
  FDRE \SEP_NB_reg[2] 
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(\SEP_NB[2]_i_1_n_0 ),
        .Q(sep_nb_i[2]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hA0A0C0C0A0A0C000)) 
    \TX_DATA[48]_i_1 
       (.I0(sep_nb_i[2]),
        .I1(Q[6]),
        .I2(channel_up_tx_if),
        .I3(tx_pe_data_v_i),
        .I4(GEN_SEP_reg_0),
        .I5(GEN_SEP7_reg_0),
        .O(\SEP_NB_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hA0A0C0C0A0A0C000)) 
    \TX_DATA[49]_i_1 
       (.I0(sep_nb_i[1]),
        .I1(Q[7]),
        .I2(channel_up_tx_if),
        .I3(tx_pe_data_v_i),
        .I4(GEN_SEP_reg_0),
        .I5(GEN_SEP7_reg_0),
        .O(\SEP_NB_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hA0A0C0C0A0A0C000)) 
    \TX_DATA[50]_i_1 
       (.I0(sep_nb_i[0]),
        .I1(Q[8]),
        .I2(channel_up_tx_if),
        .I3(tx_pe_data_v_i),
        .I4(GEN_SEP_reg_0),
        .I5(GEN_SEP7_reg_0),
        .O(\SEP_NB_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \TX_DATA[52]_i_2 
       (.I0(GEN_SEP_reg_0),
        .I1(GEN_SEP7_reg_0),
        .O(GEN_SEP_reg_1));
  LUT6 #(
    .INIT(64'h8888888888888F88)) 
    \TX_DATA[53]_i_1 
       (.I0(\TX_DATA_reg[53] ),
        .I1(gen_na_idles_i),
        .I2(CHANNEL_UP_TX_IF_reg),
        .I3(Q[9]),
        .I4(rst_pma_init_usrclk),
        .I5(TX_PE_DATA_V_reg),
        .O(gen_cc_flop_1[0]));
  LUT6 #(
    .INIT(64'h0000444400004F44)) 
    \TX_DATA[54]_i_1 
       (.I0(gen_cc_flop_0),
        .I1(gen_ch_bond_i),
        .I2(CHANNEL_UP_TX_IF_reg),
        .I3(Q[10]),
        .I4(rst_pma_init_usrclk),
        .I5(TX_PE_DATA_V_reg),
        .O(gen_cc_flop_1[1]));
  LUT5 #(
    .INIT(32'h00AA00BA)) 
    \TX_DATA[55]_i_2 
       (.I0(gen_cc_flop_0),
        .I1(CHANNEL_UP_TX_IF_reg),
        .I2(Q[11]),
        .I3(rst_pma_init_usrclk),
        .I4(TX_PE_DATA_V_reg),
        .O(gen_cc_flop_1[2]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT4 #(
    .INIT(16'hF5F7)) 
    \TX_DATA[55]_i_4 
       (.I0(channel_up_tx_if),
        .I1(tx_pe_data_v_i),
        .I2(GEN_SEP_reg_0),
        .I3(GEN_SEP7_reg_0),
        .O(CHANNEL_UP_TX_IF_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF01)) 
    \TX_DATA[55]_i_5 
       (.I0(tx_pe_data_v_i),
        .I1(GEN_SEP_reg_0),
        .I2(GEN_SEP7_reg_0),
        .I3(gen_ch_bond_i),
        .I4(gen_cc_flop_0),
        .I5(gen_na_idles_i),
        .O(TX_PE_DATA_V_reg));
  LUT6 #(
    .INIT(64'hFFFF000100010001)) 
    \TX_DATA[57]_i_1 
       (.I0(\TX_DATA[58]_i_3_n_0 ),
        .I1(gen_na_idles_i),
        .I2(gen_cc_flop_0),
        .I3(gen_ch_bond_i),
        .I4(\TX_DATA[58]_i_4_n_0 ),
        .I5(Q[0]),
        .O(wait_for_lane_up_r_reg));
  LUT6 #(
    .INIT(64'hFFFF000100010001)) 
    \TX_DATA[58]_i_2 
       (.I0(\TX_DATA[58]_i_3_n_0 ),
        .I1(gen_na_idles_i),
        .I2(gen_cc_flop_0),
        .I3(gen_ch_bond_i),
        .I4(\TX_DATA[58]_i_4_n_0 ),
        .I5(Q[1]),
        .O(wait_for_lane_up_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \TX_DATA[58]_i_3 
       (.I0(GEN_SEP_reg_0),
        .I1(channel_up_tx_if),
        .O(\TX_DATA[58]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \TX_DATA[58]_i_4 
       (.I0(GEN_SEP7_reg_0),
        .I1(GEN_SEP_reg_0),
        .I2(tx_pe_data_v_i),
        .I3(channel_up_tx_if),
        .O(\TX_DATA[58]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0200000002020202)) 
    \TX_DATA[59]_i_1 
       (.I0(channel_up_tx_if),
        .I1(rst_pma_init_usrclk),
        .I2(TX_PE_DATA_V_reg),
        .I3(Q[2]),
        .I4(\TX_DATA[58]_i_4_n_0 ),
        .I5(\TX_DATA[60]_i_2_n_0 ),
        .O(CHANNEL_UP_TX_IF_reg_0));
  LUT6 #(
    .INIT(64'h0200000002020202)) 
    \TX_DATA[60]_i_1 
       (.I0(channel_up_tx_if),
        .I1(rst_pma_init_usrclk),
        .I2(TX_PE_DATA_V_reg),
        .I3(Q[3]),
        .I4(\TX_DATA[58]_i_4_n_0 ),
        .I5(\TX_DATA[60]_i_2_n_0 ),
        .O(CHANNEL_UP_TX_IF_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h1F3F)) 
    \TX_DATA[60]_i_2 
       (.I0(GEN_SEP7_reg_0),
        .I1(GEN_SEP_reg_0),
        .I2(channel_up_tx_if),
        .I3(TX_PE_DATA_V_reg),
        .O(\TX_DATA[60]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0200000002020202)) 
    \TX_DATA[61]_i_1 
       (.I0(channel_up_tx_if),
        .I1(rst_pma_init_usrclk),
        .I2(TX_PE_DATA_V_reg),
        .I3(Q[4]),
        .I4(\TX_DATA[58]_i_4_n_0 ),
        .I5(\TX_DATA[62]_i_3_n_0 ),
        .O(CHANNEL_UP_TX_IF_reg_2));
  LUT6 #(
    .INIT(64'h000000000000D500)) 
    \TX_DATA[62]_i_2 
       (.I0(\TX_DATA[62]_i_3_n_0 ),
        .I1(Q[5]),
        .I2(\TX_DATA[58]_i_4_n_0 ),
        .I3(channel_up_tx_if),
        .I4(rst_pma_init_usrclk),
        .I5(TX_PE_DATA_V_reg),
        .O(\TX_PE_DATA_reg[57] ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h1FDF)) 
    \TX_DATA[62]_i_3 
       (.I0(GEN_SEP7_reg_0),
        .I1(GEN_SEP_reg_0),
        .I2(channel_up_tx_if),
        .I3(TX_PE_DATA_V_reg),
        .O(\TX_DATA[62]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT2 #(
    .INIT(4'h8)) 
    TX_PE_DATA_V_i_1
       (.I0(s_axi_tx_tready_reg_0),
        .I1(s_axi_tx_tvalid),
        .O(in_frame_c));
  FDRE channel_full_r2_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(channel_full_r),
        .Q(channel_full_r2),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000080000)) 
    channel_full_r_i_1
       (.I0(s_axi_tx_tkeep[0]),
        .I1(s_axi_tx_tkeep[1]),
        .I2(channel_full_r_i_2_n_0),
        .I3(s_axi_tx_tkeep_5_sn_1),
        .I4(s_axi_tx_tkeep[7]),
        .I5(channel_full_r_i_4_n_0),
        .O(channel_full_c));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'h7)) 
    channel_full_r_i_2
       (.I0(s_axi_tx_tkeep[2]),
        .I1(s_axi_tx_tkeep[3]),
        .O(channel_full_r_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    channel_full_r_i_3
       (.I0(s_axi_tx_tkeep[5]),
        .I1(s_axi_tx_tkeep[4]),
        .I2(s_axi_tx_tkeep[6]),
        .O(s_axi_tx_tkeep_5_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT2 #(
    .INIT(4'h7)) 
    channel_full_r_i_4
       (.I0(s_axi_tx_tvalid),
        .I1(s_axi_tx_tlast),
        .O(channel_full_r_i_4_n_0));
  FDRE channel_full_r_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(channel_full_c),
        .Q(channel_full_r),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'h00000040)) 
    data_r_i_1
       (.I0(s_axi_tx_tlast),
        .I1(s_axi_tx_tvalid),
        .I2(s_axi_tx_tready_reg_0),
        .I3(s_axi_tx_tready_i_3_n_0),
        .I4(full_data_r_i_5_n_0),
        .O(next_data_c));
  FDRE data_r_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(pdu_ok_c),
        .D(next_data_c),
        .Q(data_r),
        .R(R0));
  FDRE datavalid_in_r2_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(datavalid_in_r),
        .Q(datavalid_in_r2),
        .R(1'b0));
  FDRE datavalid_in_r_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(txdatavalid_i),
        .Q(datavalid_in_r),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    datavalid_pdu_i_1
       (.I0(datavalid_in_r),
        .I1(channel_full_r2),
        .I2(datavalid_in_r2),
        .O(datavalid_pdu_i_1_n_0));
  FDRE datavalid_pdu_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(datavalid_pdu_i_1_n_0),
        .Q(datavalid_pdu),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT2 #(
    .INIT(4'hE)) 
    do_cc_r_i_1
       (.I0(extend_cc_r),
        .I1(do_cc_r_reg_0),
        .O(do_cc_r_reg0));
  FDRE #(
    .INIT(1'b0)) 
    do_cc_r_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(do_cc_r_reg0),
        .Q(do_cc_r),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB0)) 
    extend_cc_r_i_1
       (.I0(extend_cc_r),
        .I1(txdatavalid_i),
        .I2(do_cc_r_reg_0),
        .O(extend_cc_r_i_1_n_0));
  FDRE extend_cc_r_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(extend_cc_r_i_1_n_0),
        .Q(extend_cc_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hBAAAAAAAAAAAAAAA)) 
    full_data_r_i_2
       (.I0(s_axi_tx_tready_i_3_n_0),
        .I1(full_data_r_i_5_n_0),
        .I2(s_axi_tx_tready_reg_0),
        .I3(s_axi_tx_tvalid),
        .I4(s_axi_tx_tlast),
        .I5(channel_full_c),
        .O(next_full_data_c));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    full_data_r_i_4
       (.I0(datavalid_pdu),
        .I1(do_cc_r_reg_0),
        .I2(channel_up_tx_if),
        .I3(do_cc_r),
        .O(datavalid_pdu_reg_0));
  LUT4 #(
    .INIT(16'h0001)) 
    full_data_r_i_5
       (.I0(full_data_r),
        .I1(idle_r),
        .I2(data_r),
        .I3(partial_data_r),
        .O(full_data_r_i_5_n_0));
  FDRE full_data_r_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(pdu_ok_c),
        .D(next_full_data_c),
        .Q(full_data_r),
        .R(R0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDRE #(
    .INIT(1'b0)) 
    gen_cc_flop
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(do_cc_r),
        .Q(gen_cc_flop_0),
        .R(R0));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    gen_sep7_r_i_1
       (.I0(p_17_in),
        .I1(datavalid_in_r2),
        .I2(gen_sep7_r),
        .O(gen_sep7_r_i_1_n_0));
  LUT5 #(
    .INIT(32'h00002000)) 
    gen_sep7_r_i_2
       (.I0(next_partial_data_c),
        .I1(\gen_sep_nb_r[0]_i_3_n_0 ),
        .I2(s_axi_tx_tkeep[0]),
        .I3(s_axi_tx_tready_reg_0),
        .I4(s_axi_tx_tkeep_5_sn_1),
        .O(p_17_in));
  FDRE gen_sep7_r_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(gen_sep7_r_i_1_n_0),
        .Q(gen_sep7_r),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT5 #(
    .INIT(32'h000000B1)) 
    \gen_sep_nb_r[0]_i_1 
       (.I0(s_axi_tx_tkeep[5]),
        .I1(s_axi_tx_tkeep[6]),
        .I2(s_axi_tx_tkeep[4]),
        .I3(\gen_sep_nb_r[0]_i_2_n_0 ),
        .I4(\gen_sep_nb_r[0]_i_3_n_0 ),
        .O(gen_sep_nb_c[0]));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \gen_sep_nb_r[0]_i_2 
       (.I0(full_data_r),
        .I1(s_axi_tx_tkeep[0]),
        .I2(sep0_lane0_r),
        .O(\gen_sep_nb_r[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'hFF7F)) 
    \gen_sep_nb_r[0]_i_3 
       (.I0(s_axi_tx_tkeep[3]),
        .I1(s_axi_tx_tkeep[2]),
        .I2(s_axi_tx_tkeep[1]),
        .I3(s_axi_tx_tkeep[7]),
        .O(\gen_sep_nb_r[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'h80008008)) 
    \gen_sep_nb_r[1]_i_1 
       (.I0(\gen_sep_nb_r[1]_i_2_n_0 ),
        .I1(s_axi_tx_tkeep[1]),
        .I2(s_axi_tx_tkeep[5]),
        .I3(s_axi_tx_tkeep[4]),
        .I4(s_axi_tx_tkeep[6]),
        .O(gen_sep_nb_c[1]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'h00000091)) 
    \gen_sep_nb_r[1]_i_2 
       (.I0(s_axi_tx_tkeep[4]),
        .I1(s_axi_tx_tkeep[3]),
        .I2(s_axi_tx_tkeep[2]),
        .I3(\gen_sep_nb_r[0]_i_2_n_0 ),
        .I4(s_axi_tx_tkeep[7]),
        .O(\gen_sep_nb_r[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h800A00000000800A)) 
    \gen_sep_nb_r[2]_i_1 
       (.I0(\gen_sep_nb_r[1]_i_2_n_0 ),
        .I1(s_axi_tx_tkeep[4]),
        .I2(s_axi_tx_tkeep[6]),
        .I3(s_axi_tx_tkeep[5]),
        .I4(s_axi_tx_tkeep[1]),
        .I5(s_axi_tx_tkeep[2]),
        .O(gen_sep_nb_c[2]));
  FDRE \gen_sep_nb_r_reg[0] 
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(gen_sep_nb_c[0]),
        .Q(gen_sep_nb_r[0]),
        .R(1'b0));
  FDRE \gen_sep_nb_r_reg[1] 
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(gen_sep_nb_c[1]),
        .Q(gen_sep_nb_r[1]),
        .R(1'b0));
  FDRE \gen_sep_nb_r_reg[2] 
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(gen_sep_nb_c[2]),
        .Q(gen_sep_nb_r[2]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT5 #(
    .INIT(32'hCACA0ACA)) 
    gen_sep_r_i_1
       (.I0(gen_sep_c),
        .I1(gen_sep_r),
        .I2(datavalid_in_r),
        .I3(datavalid_in_r2),
        .I4(gen_cc_flop_0),
        .O(gen_sep_r_i_1_n_0));
  LUT6 #(
    .INIT(64'h10FF101010101010)) 
    gen_sep_r_i_2
       (.I0(gen_sep_r_i_3_n_0),
        .I1(gen_sep_r_i_4_n_0),
        .I2(next_partial_data_c),
        .I3(s_axi_tx_tready_reg_0),
        .I4(sep0_lane0_r),
        .I5(pdu_ok_c),
        .O(gen_sep_c));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    gen_sep_r_i_3
       (.I0(s_axi_tx_tkeep_5_sn_1),
        .I1(s_axi_tx_tkeep[2]),
        .I2(s_axi_tx_tkeep[3]),
        .I3(s_axi_tx_tkeep[1]),
        .I4(s_axi_tx_tkeep[0]),
        .O(gen_sep_r_i_3_n_0));
  LUT6 #(
    .INIT(64'h7777777F77777777)) 
    gen_sep_r_i_4
       (.I0(s_axi_tx_tready_reg_0),
        .I1(channel_up_tx_if),
        .I2(s_axi_tx_tkeep[3]),
        .I3(s_axi_tx_tkeep[4]),
        .I4(gen_sep_r_i_5_n_0),
        .I5(s_axi_tx_tkeep_2_sn_1),
        .O(gen_sep_r_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'hE)) 
    gen_sep_r_i_5
       (.I0(s_axi_tx_tkeep[5]),
        .I1(s_axi_tx_tkeep[6]),
        .O(gen_sep_r_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    gen_sep_r_i_6
       (.I0(s_axi_tx_tkeep[2]),
        .I1(s_axi_tx_tkeep[1]),
        .I2(s_axi_tx_tkeep[0]),
        .I3(s_axi_tx_tkeep[7]),
        .O(s_axi_tx_tkeep_2_sn_1));
  FDRE gen_sep_r_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(gen_sep_r_i_1_n_0),
        .Q(gen_sep_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h1500000015151515)) 
    idle_r_i_1
       (.I0(full_data_r_i_5_n_0),
        .I1(s_axi_tx_tready_reg_0),
        .I2(s_axi_tx_tvalid),
        .I3(GEN_SEP_reg_0),
        .I4(full_data_r),
        .I5(sep0_lane0_r),
        .O(next_idle_c));
  FDSE idle_r_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(pdu_ok_c),
        .D(next_idle_c),
        .Q(idle_r),
        .S(R0));
  LUT6 #(
    .INIT(64'h00000000000000FE)) 
    partial_data_r_i_1
       (.I0(partial_data_r_i_2_n_0),
        .I1(s_axi_tx_tkeep_5_sn_1),
        .I2(s_axi_tx_tkeep_0_sn_1),
        .I3(s_axi_tx_tready_i_3_n_0),
        .I4(full_data_r_i_5_n_0),
        .I5(partial_data_r_i_4_n_0),
        .O(next_partial_data_c));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    partial_data_r_i_2
       (.I0(s_axi_tx_tlast),
        .I1(s_axi_tx_tvalid),
        .I2(s_axi_tx_tkeep[7]),
        .O(partial_data_r_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    partial_data_r_i_3
       (.I0(s_axi_tx_tkeep[0]),
        .I1(s_axi_tx_tkeep[1]),
        .I2(s_axi_tx_tkeep[3]),
        .I3(s_axi_tx_tkeep[2]),
        .O(s_axi_tx_tkeep_0_sn_1));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    partial_data_r_i_4
       (.I0(s_axi_tx_tlast),
        .I1(s_axi_tx_tvalid),
        .I2(s_axi_tx_tready_reg_0),
        .O(partial_data_r_i_4_n_0));
  FDRE partial_data_r_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(pdu_ok_c),
        .D(next_partial_data_c),
        .Q(partial_data_r),
        .R(R0));
  LUT5 #(
    .INIT(32'h40444444)) 
    s_axi_tx_tready_i_2
       (.I0(s_axi_tx_tready_i_3_n_0),
        .I1(pdu_ok_c),
        .I2(tlast_txdv_coincide_r),
        .I3(s_axi_tx_tready_reg_0),
        .I4(next_full_data_c),
        .O(s_axi_tx_tready0));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'h2A)) 
    s_axi_tx_tready_i_3
       (.I0(sep0_lane0_r),
        .I1(full_data_r),
        .I2(GEN_SEP_reg_0),
        .O(s_axi_tx_tready_i_3_n_0));
  FDRE s_axi_tx_tready_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tready0),
        .Q(s_axi_tx_tready_reg_0),
        .R(R0));
  LUT6 #(
    .INIT(64'h4000FFFF40004000)) 
    sep0_lane0_r_i_1
       (.I0(tlast_txdv_coincide_r),
        .I1(s_axi_tx_tready_reg_0),
        .I2(channel_up_tx_if),
        .I3(next_full_data_c),
        .I4(pdu_ok_c),
        .I5(sep0_lane0_r),
        .O(sep0_lane0_r_i_1_n_0));
  FDRE sep0_lane0_r_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(sep0_lane0_r_i_1_n_0),
        .Q(sep0_lane0_r),
        .R(1'b0));
  FDRE tlast_txdv_coincide_r_reg
       (.C(\SEP_NB_reg[0]_1 ),
        .CE(1'b1),
        .D(tlast_txdv_coincide_r0),
        .Q(tlast_txdv_coincide_r),
        .R(R0));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_TX_LL_DATAPATH
   (tx_pe_data_v_i,
    wait_for_lane_up_r_reg,
    Q,
    \TX_PE_DATA_reg[52]_0 ,
    TX_PE_DATA_V_reg_0,
    TX_PE_DATA_V_reg_1,
    in_frame_c,
    \TX_PE_DATA_reg[0]_0 ,
    \TX_DATA_reg[52] ,
    gen_na_idles_i,
    \TX_DATA_reg[52]_0 ,
    \TX_DATA_reg[52]_1 ,
    \TX_DATA_reg[63] ,
    \TX_DATA_reg[63]_0 ,
    channel_up_tx_if,
    \TX_DATA_reg[63]_1 ,
    s_axi_tx_tdata);
  output tx_pe_data_v_i;
  output [0:0]wait_for_lane_up_r_reg;
  output [59:0]Q;
  output \TX_PE_DATA_reg[52]_0 ;
  output TX_PE_DATA_V_reg_0;
  output TX_PE_DATA_V_reg_1;
  input in_frame_c;
  input \TX_PE_DATA_reg[0]_0 ;
  input \TX_DATA_reg[52] ;
  input gen_na_idles_i;
  input \TX_DATA_reg[52]_0 ;
  input \TX_DATA_reg[52]_1 ;
  input \TX_DATA_reg[63] ;
  input \TX_DATA_reg[63]_0 ;
  input channel_up_tx_if;
  input \TX_DATA_reg[63]_1 ;
  input [0:63]s_axi_tx_tdata;

  wire [59:0]Q;
  wire \TX_DATA_reg[52] ;
  wire \TX_DATA_reg[52]_0 ;
  wire \TX_DATA_reg[52]_1 ;
  wire \TX_DATA_reg[63] ;
  wire \TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire TX_PE_DATA_V_reg_0;
  wire TX_PE_DATA_V_reg_1;
  wire \TX_PE_DATA_reg[0]_0 ;
  wire \TX_PE_DATA_reg[52]_0 ;
  wire channel_up_tx_if;
  wire gen_na_idles_i;
  wire in_frame_c;
  wire [0:63]s_axi_tx_tdata;
  wire [51:63]tx_pe_data_i;
  wire tx_pe_data_v_i;
  wire [0:0]wait_for_lane_up_r_reg;

  LUT5 #(
    .INIT(32'h0A080000)) 
    \TX_DATA[51]_i_1 
       (.I0(tx_pe_data_i[52]),
        .I1(\TX_DATA_reg[63] ),
        .I2(\TX_DATA_reg[63]_0 ),
        .I3(tx_pe_data_v_i),
        .I4(channel_up_tx_if),
        .O(\TX_PE_DATA_reg[52]_0 ));
  LUT6 #(
    .INIT(64'h8A88AAAA8A888A88)) 
    \TX_DATA[52]_i_1 
       (.I0(\TX_DATA_reg[52] ),
        .I1(gen_na_idles_i),
        .I2(tx_pe_data_v_i),
        .I3(\TX_DATA_reg[52]_0 ),
        .I4(\TX_DATA_reg[52]_1 ),
        .I5(tx_pe_data_i[51]),
        .O(wait_for_lane_up_r_reg));
  LUT6 #(
    .INIT(64'h0008000000F80000)) 
    \TX_DATA[56]_i_1 
       (.I0(tx_pe_data_v_i),
        .I1(tx_pe_data_i[63]),
        .I2(\TX_DATA_reg[63] ),
        .I3(\TX_DATA_reg[63]_0 ),
        .I4(channel_up_tx_if),
        .I5(\TX_DATA_reg[63]_1 ),
        .O(TX_PE_DATA_V_reg_0));
  LUT6 #(
    .INIT(64'h0008000000F80000)) 
    \TX_DATA[63]_i_2 
       (.I0(tx_pe_data_v_i),
        .I1(tx_pe_data_i[56]),
        .I2(\TX_DATA_reg[63] ),
        .I3(\TX_DATA_reg[63]_0 ),
        .I4(channel_up_tx_if),
        .I5(\TX_DATA_reg[63]_1 ),
        .O(TX_PE_DATA_V_reg_1));
  FDRE TX_PE_DATA_V_reg
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(in_frame_c),
        .Q(tx_pe_data_v_i),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[0] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[0]),
        .Q(Q[59]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[10] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[10]),
        .Q(Q[49]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[11] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[11]),
        .Q(Q[48]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[12] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[12]),
        .Q(Q[47]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[13] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[13]),
        .Q(Q[46]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[14] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[14]),
        .Q(Q[45]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[15] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[15]),
        .Q(Q[44]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[16] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[16]),
        .Q(Q[43]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[17] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[17]),
        .Q(Q[42]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[18] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[18]),
        .Q(Q[41]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[19] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[19]),
        .Q(Q[40]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[1] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[1]),
        .Q(Q[58]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[20] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[20]),
        .Q(Q[39]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[21] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[21]),
        .Q(Q[38]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[22] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[22]),
        .Q(Q[37]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[23] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[23]),
        .Q(Q[36]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[24] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[24]),
        .Q(Q[35]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[25] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[25]),
        .Q(Q[34]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[26] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[26]),
        .Q(Q[33]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[27] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[27]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[28] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[28]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[29] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[29]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[2] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[2]),
        .Q(Q[57]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[30] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[30]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[31] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[31]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[32] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[32]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[33] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[33]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[34] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[34]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[35] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[35]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[36] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[36]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[37] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[37]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[38] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[38]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[39] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[39]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[3] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[3]),
        .Q(Q[56]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[40] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[40]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[41] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[41]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[42] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[42]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[43] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[43]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[44] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[44]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[45] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[45]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[46] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[46]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[47] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[47]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[48] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[48]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[49] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[49]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[4] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[4]),
        .Q(Q[55]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[50] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[50]),
        .Q(Q[9]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[51] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[51]),
        .Q(tx_pe_data_i[51]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[52] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[52]),
        .Q(tx_pe_data_i[52]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[53] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[53]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[54] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[54]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[55] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[55]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[56] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[56]),
        .Q(tx_pe_data_i[56]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[57] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[57]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[58] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[58]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[59] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[59]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[5] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[5]),
        .Q(Q[54]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[60] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[60]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[61] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[61]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[62] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[62]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[63] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[63]),
        .Q(tx_pe_data_i[63]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[6] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[6]),
        .Q(Q[53]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[7] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[7]),
        .Q(Q[52]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[8] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[8]),
        .Q(Q[51]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[9] 
       (.C(\TX_PE_DATA_reg[0]_0 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[9]),
        .Q(Q[50]),
        .R(1'b0));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_WRAPPER
   (gt0_drpdo,
    gt0_drprdy,
    gt_powergood,
    txn,
    txp,
    tx_out_clk,
    bufg_gt_clr_out,
    gt_pll_lock,
    master_do_rd_en,
    rx_header_err_i,
    link_reset_out,
    stg3_reg,
    rx_lossofsync_i,
    RX_NEG_OUT_reg_0,
    TX_HEADER_0_reg,
    txdatavalid_symgen_i,
    stg5_reg,
    tlast_txdv_coincide_r0,
    txdatavalid_i,
    pdu_ok_c,
    stg5_reg_0,
    ENABLE_ERR_DETECT_reg,
    Q,
    rxdatavalid_i,
    hold_reg_r_reg,
    rx_header_1_i,
    stg5_reg_1,
    stg5_reg_2,
    hold_reg_r_reg_0,
    rst_in_out_reg,
    gt0_drpaddr,
    init_clk,
    gt0_drpdi,
    gt0_drpen,
    gt0_drpwe,
    gt_refclk1_out,
    rxn,
    rxp,
    loopback,
    gt_rxcdrovrden_in,
    stg4_reg,
    in0,
    s_level_out_d1_aurora_64b66b_SL_cdc_to_reg,
    sys_reset_out,
    tx_reset_i,
    D,
    channel_up_tx_if,
    gen_sep7_i,
    gen_sep_i,
    channel_full_c,
    data_r_reg,
    rst_pma_init_usrclk,
    hard_err_usr_reg_0,
    enable_err_detect_i,
    \TX_DATA_reg[63] ,
    \TXDATA_IN_REG_reg[63]_0 ,
    mmcm_not_locked_out2,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output [15:0]gt0_drpdo;
  output gt0_drprdy;
  output [0:0]gt_powergood;
  output txn;
  output txp;
  output tx_out_clk;
  output bufg_gt_clr_out;
  output gt_pll_lock;
  output master_do_rd_en;
  output rx_header_err_i;
  output link_reset_out;
  output stg3_reg;
  output rx_lossofsync_i;
  output RX_NEG_OUT_reg_0;
  output TX_HEADER_0_reg;
  output txdatavalid_symgen_i;
  output stg5_reg;
  output tlast_txdv_coincide_r0;
  output txdatavalid_i;
  output pdu_ok_c;
  output stg5_reg_0;
  output ENABLE_ERR_DETECT_reg;
  output [64:0]Q;
  output rxdatavalid_i;
  output hold_reg_r_reg;
  output rx_header_1_i;
  output stg5_reg_1;
  output stg5_reg_2;
  output hold_reg_r_reg_0;
  input rst_in_out_reg;
  input [9:0]gt0_drpaddr;
  input init_clk;
  input [15:0]gt0_drpdi;
  input gt0_drpen;
  input gt0_drpwe;
  input gt_refclk1_out;
  input rxn;
  input rxp;
  input [2:0]loopback;
  input gt_rxcdrovrden_in;
  input stg4_reg;
  input in0;
  input s_level_out_d1_aurora_64b66b_SL_cdc_to_reg;
  input sys_reset_out;
  input tx_reset_i;
  input [1:0]D;
  input channel_up_tx_if;
  input gen_sep7_i;
  input gen_sep_i;
  input channel_full_c;
  input data_r_reg;
  input rst_pma_init_usrclk;
  input hard_err_usr_reg_0;
  input enable_err_detect_i;
  input \TX_DATA_reg[63] ;
  input [63:0]\TXDATA_IN_REG_reg[63]_0 ;
  input mmcm_not_locked_out2;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire ANY_VLD_BTF_FLAG;
  wire ANY_VLD_BTF_FLAG0__4;
  wire CB_detect0;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire [1:0]D;
  wire ENABLE_ERR_DETECT_reg;
  wire FSM_RESETDONE_j;
  wire \FSM_onehot_cdr_reset_fsm_r[2]_i_3_n_0 ;
  wire \FSM_onehot_cdr_reset_fsm_r[2]_i_4_n_0 ;
  wire \FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ;
  wire HPCNT_RESET_IN;
  wire LINK_RESET_OUT0;
  wire [64:0]Q;
  wire RX_NEG_OUT_reg_0;
  wire START_CB_WRITES_OUT;
  wire [63:0]TXDATA_IN_REG;
  wire [63:0]\TXDATA_IN_REG_reg[63]_0 ;
  wire \TX_DATA[55]_i_3_n_0 ;
  wire \TX_DATA_reg[63] ;
  wire TX_HEADER_0_reg;
  (* RTL_KEEP = "true" *) wire all_start_cb_writes_i;
  (* RTL_KEEP = "true" *) wire all_vld_btf_flag_i;
  wire allow_block_sync_propagation;
  wire allow_block_sync_propagation_reg_n_0;
  (* RTL_KEEP = "true" *) wire bit_err_chan_bond_i;
  wire blocksync_all_lanes_inrxclk_q;
  wire blocksync_out_i;
  wire bufg_gt_clr_out;
  wire cb_bit_err_out;
  wire cbcc_data_srst;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire [7:0]cdr_reset_fsm_cntr_r;
  wire \cdr_reset_fsm_cntr_r[0]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[1]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[2]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[3]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[4]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[5]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[6]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_2_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_3_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_4_n_0 ;
  wire cdr_reset_fsm_lnkreset;
  wire cdr_reset_fsm_lnkreset_i_1_n_0;
  wire cdr_reset_fsm_lnkreset_reg_n_0;
  wire channel_full_c;
  wire channel_up_tx_if;
  wire common_reset_cbcc_i_n_6;
  wire data_r_reg;
  (* RTL_KEEP = "true" *) wire do_rd_en_i;
  wire enable_err_detect_i;
  (* RTL_KEEP = "true" *) wire final_gater_for_fifo_din_i;
  wire freeze_free_count_r_inv_i_2_n_0;
  wire fsm_resetdone_initclk;
  wire fsm_resetdone_to_rxreset_in;
  wire full_data_r_i_3_n_0;
  wire gen_sep7_i;
  wire gen_sep_i;
  wire [9:0]gt0_drpaddr;
  wire [15:0]gt0_drpdi;
  wire [15:0]gt0_drpdo;
  wire gt0_drpen;
  wire gt0_drprdy;
  wire gt0_drpwe;
  wire gt_cplllock_i;
  wire gt_cplllock_j;
  wire gt_pll_lock;
  wire [0:0]gt_powergood;
  wire gt_refclk1_out;
  wire gt_rxcdrovrden_in;
  wire gtwiz_userclk_rx_active_in;
  wire gtx_reset_comb;
  wire hard_err_cntr_r;
  wire \hard_err_cntr_r[7]_i_4_n_0 ;
  wire \hard_err_cntr_r[7]_i_5_n_0 ;
  wire \hard_err_cntr_r[7]_i_6_n_0 ;
  wire [7:0]hard_err_cntr_r_reg;
  wire hard_err_rst_int;
  wire hard_err_rst_int_i_3_n_0;
  wire hard_err_usr;
  wire hard_err_usr0;
  wire hard_err_usr_reg_0;
  wire hold_reg_r_reg;
  wire hold_reg_r_reg_0;
  wire in0;
  wire init_clk;
  wire [2:2]int_gt_rxbufstatus;
  wire link_reset_out;
  wire [2:0]loopback;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire master_do_rd_en;
  (* RTL_KEEP = "true" *) wire master_do_rd_en_i;
  wire mmcm_not_locked_out2;
  wire new_gtx_rx_pcsreset_comb;
  wire [7:0]p_0_in__4;
  wire p_2_in;
  wire p_8_in;
  wire pdu_ok_c;
  wire [63:0]pos_rxdata_from_gtx_i;
  wire pos_rxdatavalid_i;
  wire [1:0]pos_rxheader_from_gtx_i;
  wire pos_rxheadervalid_i;
  wire [63:0]pre_r1_rxdata_from_gtx_i;
  wire pre_r1_rxdatavalid_i;
  wire [1:0]pre_r1_rxheader_from_gtx_i;
  wire pre_r1_rxheadervalid_i;
  wire [63:0]pre_rxdata_from_gtx_i;
  wire pre_rxdatavalid_i;
  wire [1:0]pre_rxheader_from_gtx_i;
  wire pre_rxheadervalid_i;
  wire reset_initclk;
  wire rst_in_out_reg;
  wire rst_pma_init_usrclk;
  wire rx_elastic_buf_err;
  (* RTL_KEEP = "true" *) wire rx_fsm_resetdone_i;
  wire rx_fsm_resetdone_i_i;
  (* RTL_KEEP = "true" *) wire rx_fsm_resetdone_ii;
  wire rx_header_1_i;
  wire rx_header_err_i;
  wire rx_lossofsync_i;
  wire [63:0]rxdata_from_gtx_i;
  wire [63:0]rxdata_to_fifo_i;
  wire rxdatavalid_i;
  wire rxdatavalid_i_0;
  wire rxdatavalid_to_fifo_i;
  (* RTL_KEEP = "true" *) wire rxfsm_reset_i;
  wire rxgearboxslip_i;
  wire [1:0]rxheader_from_gtx_i;
  wire [1:0]rxheader_to_fifo_i;
  wire rxheadervalid_i;
  wire rxlossofsync_out_i;
  wire rxlossofsync_out_q;
  wire rxn;
  wire rxp;
  wire rxreset_for_lanes_q;
  wire rxusrclk_out;
  wire s_level_out_d1_aurora_64b66b_SL_cdc_to_reg;
  wire [63:0]scrambled_data_i;
  wire scrambler_64b66b_gtx0_i_n_0;
  wire sel;
  wire stableclk_gtx_reset_comb;
  wire stg3_reg;
  wire stg4_reg;
  wire stg5;
  wire stg5_reg;
  wire stg5_reg_0;
  wire stg5_reg_1;
  wire stg5_reg_2;
  wire sync_rx_polarity_r;
  wire sys_reset_out;
  wire tlast_txdv_coincide_r0;
  wire tx_buf_err_i;
  (* RTL_KEEP = "true" *) wire tx_fsm_resetdone_i;
  (* RTL_KEEP = "true" *) wire tx_fsm_resetdone_ii;
  wire [1:0]tx_hdr_r;
  wire tx_out_clk;
  wire tx_reset_i;
  wire txdatavalid_i;
  wire txdatavalid_symgen_i;
  wire [1:0]txheader_r;
  wire txn;
  wire txp;
  wire [6:0]txseq_counter_i;
  wire \txseq_counter_i[3]_i_1_n_0 ;
  wire \txseq_counter_i_reg_n_0_[0] ;
  wire \txseq_counter_i_reg_n_0_[1] ;
  wire \txseq_counter_i_reg_n_0_[2] ;
  wire \txseq_counter_i_reg_n_0_[3] ;
  wire \txseq_counter_i_reg_n_0_[4] ;
  wire \txseq_counter_i_reg_n_0_[5] ;
  wire \txseq_counter_i_reg_n_0_[6] ;
  wire txsequence_ctr_en_int;
  wire txsequence_ctr_en_int_i_1_n_0;
  wire u_cdc__check_polarity_n_0;
  wire u_cdc_hard_err_init_n_0;
  wire u_rst_sync_blocksyncall_initclk_sync_n_0;
  wire u_rst_sync_fsm_resetdone_initclk_n_1;
  wire u_rst_sync_fsm_resetdone_n_0;
  wire valid_btf_detect_dlyd1;

  FDRE FSM_RESETDONE_j_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(stg3_reg),
        .Q(FSM_RESETDONE_j),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_cdr_reset_fsm_r[2]_i_3 
       (.I0(allow_block_sync_propagation),
        .I1(cdr_reset_fsm_lnkreset),
        .O(\FSM_onehot_cdr_reset_fsm_r[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \FSM_onehot_cdr_reset_fsm_r[2]_i_4 
       (.I0(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .I1(cdr_reset_fsm_cntr_r[7]),
        .I2(cdr_reset_fsm_cntr_r[6]),
        .I3(cdr_reset_fsm_cntr_r[4]),
        .I4(cdr_reset_fsm_cntr_r[5]),
        .O(\FSM_onehot_cdr_reset_fsm_r[2]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "IDLE:001,ASSERT_RXRESET:010,DONE:100," *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_cdr_reset_fsm_r_reg[0] 
       (.C(init_clk),
        .CE(u_rst_sync_blocksyncall_initclk_sync_n_0),
        .D(1'b0),
        .Q(\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ),
        .S(p_2_in));
  (* FSM_ENCODED_STATES = "IDLE:001,ASSERT_RXRESET:010,DONE:100," *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_cdr_reset_fsm_r_reg[1] 
       (.C(init_clk),
        .CE(u_rst_sync_blocksyncall_initclk_sync_n_0),
        .D(\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ),
        .Q(cdr_reset_fsm_lnkreset),
        .R(p_2_in));
  (* FSM_ENCODED_STATES = "IDLE:001,ASSERT_RXRESET:010,DONE:100," *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_cdr_reset_fsm_r_reg[2] 
       (.C(init_clk),
        .CE(u_rst_sync_blocksyncall_initclk_sync_n_0),
        .D(\FSM_onehot_cdr_reset_fsm_r[2]_i_3_n_0 ),
        .Q(allow_block_sync_propagation),
        .R(p_2_in));
  FDRE LINK_RESET_OUT_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(LINK_RESET_OUT0),
        .Q(link_reset_out),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h80)) 
    PLLLKDET_OUT
       (.I0(gt_cplllock_i),
        .I1(rx_fsm_resetdone_ii),
        .I2(tx_fsm_resetdone_ii),
        .O(gt_pll_lock));
  FDRE RX_NEG_OUT_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_cdc__check_polarity_n_0),
        .Q(RX_NEG_OUT_reg_0),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [0]),
        .Q(TXDATA_IN_REG[0]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[10] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [10]),
        .Q(TXDATA_IN_REG[10]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[11] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [11]),
        .Q(TXDATA_IN_REG[11]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[12] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [12]),
        .Q(TXDATA_IN_REG[12]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[13] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [13]),
        .Q(TXDATA_IN_REG[13]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[14] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [14]),
        .Q(TXDATA_IN_REG[14]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[15] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [15]),
        .Q(TXDATA_IN_REG[15]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[16] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [16]),
        .Q(TXDATA_IN_REG[16]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[17] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [17]),
        .Q(TXDATA_IN_REG[17]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[18] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [18]),
        .Q(TXDATA_IN_REG[18]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[19] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [19]),
        .Q(TXDATA_IN_REG[19]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [1]),
        .Q(TXDATA_IN_REG[1]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[20] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [20]),
        .Q(TXDATA_IN_REG[20]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[21] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [21]),
        .Q(TXDATA_IN_REG[21]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[22] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [22]),
        .Q(TXDATA_IN_REG[22]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[23] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [23]),
        .Q(TXDATA_IN_REG[23]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[24] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [24]),
        .Q(TXDATA_IN_REG[24]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[25] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [25]),
        .Q(TXDATA_IN_REG[25]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[26] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [26]),
        .Q(TXDATA_IN_REG[26]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[27] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [27]),
        .Q(TXDATA_IN_REG[27]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[28] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [28]),
        .Q(TXDATA_IN_REG[28]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[29] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [29]),
        .Q(TXDATA_IN_REG[29]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[2] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [2]),
        .Q(TXDATA_IN_REG[2]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[30] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [30]),
        .Q(TXDATA_IN_REG[30]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[31] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [31]),
        .Q(TXDATA_IN_REG[31]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[32] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [32]),
        .Q(TXDATA_IN_REG[32]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[33] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [33]),
        .Q(TXDATA_IN_REG[33]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[34] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [34]),
        .Q(TXDATA_IN_REG[34]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[35] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [35]),
        .Q(TXDATA_IN_REG[35]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[36] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [36]),
        .Q(TXDATA_IN_REG[36]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[37] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [37]),
        .Q(TXDATA_IN_REG[37]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[38] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [38]),
        .Q(TXDATA_IN_REG[38]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[39] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [39]),
        .Q(TXDATA_IN_REG[39]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[3] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [3]),
        .Q(TXDATA_IN_REG[3]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[40] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [40]),
        .Q(TXDATA_IN_REG[40]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[41] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [41]),
        .Q(TXDATA_IN_REG[41]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[42] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [42]),
        .Q(TXDATA_IN_REG[42]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[43] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [43]),
        .Q(TXDATA_IN_REG[43]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[44] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [44]),
        .Q(TXDATA_IN_REG[44]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[45] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [45]),
        .Q(TXDATA_IN_REG[45]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[46] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [46]),
        .Q(TXDATA_IN_REG[46]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[47] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [47]),
        .Q(TXDATA_IN_REG[47]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[48] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [48]),
        .Q(TXDATA_IN_REG[48]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[49] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [49]),
        .Q(TXDATA_IN_REG[49]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[4] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [4]),
        .Q(TXDATA_IN_REG[4]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[50] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [50]),
        .Q(TXDATA_IN_REG[50]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[51] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [51]),
        .Q(TXDATA_IN_REG[51]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[52] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [52]),
        .Q(TXDATA_IN_REG[52]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[53] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [53]),
        .Q(TXDATA_IN_REG[53]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[54] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [54]),
        .Q(TXDATA_IN_REG[54]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[55] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [55]),
        .Q(TXDATA_IN_REG[55]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[56] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [56]),
        .Q(TXDATA_IN_REG[56]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[57] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [57]),
        .Q(TXDATA_IN_REG[57]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[58] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [58]),
        .Q(TXDATA_IN_REG[58]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[59] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [59]),
        .Q(TXDATA_IN_REG[59]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[5] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [5]),
        .Q(TXDATA_IN_REG[5]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[60] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [60]),
        .Q(TXDATA_IN_REG[60]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[61] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [61]),
        .Q(TXDATA_IN_REG[61]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[62] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [62]),
        .Q(TXDATA_IN_REG[62]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[63] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [63]),
        .Q(TXDATA_IN_REG[63]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[6] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [6]),
        .Q(TXDATA_IN_REG[6]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[7] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [7]),
        .Q(TXDATA_IN_REG[7]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[8] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [8]),
        .Q(TXDATA_IN_REG[8]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[9] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [9]),
        .Q(TXDATA_IN_REG[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \TX_DATA[55]_i_1 
       (.I0(rst_pma_init_usrclk),
        .I1(\TX_DATA[55]_i_3_n_0 ),
        .I2(\txseq_counter_i_reg_n_0_[6] ),
        .I3(\txseq_counter_i_reg_n_0_[5] ),
        .O(stg5_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \TX_DATA[55]_i_3 
       (.I0(\txseq_counter_i_reg_n_0_[3] ),
        .I1(\txseq_counter_i_reg_n_0_[2] ),
        .I2(\txseq_counter_i_reg_n_0_[1] ),
        .I3(\txseq_counter_i_reg_n_0_[0] ),
        .I4(\txseq_counter_i_reg_n_0_[4] ),
        .O(\TX_DATA[55]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEFFFEAAAAFFFE)) 
    \TX_DATA[58]_i_1 
       (.I0(rst_pma_init_usrclk),
        .I1(\TX_DATA[55]_i_3_n_0 ),
        .I2(\txseq_counter_i_reg_n_0_[6] ),
        .I3(\txseq_counter_i_reg_n_0_[5] ),
        .I4(channel_up_tx_if),
        .I5(\TX_DATA_reg[63] ),
        .O(stg5_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'h55540000)) 
    \TX_DATA[62]_i_1 
       (.I0(rst_pma_init_usrclk),
        .I1(\TX_DATA[55]_i_3_n_0 ),
        .I2(\txseq_counter_i_reg_n_0_[6] ),
        .I3(\txseq_counter_i_reg_n_0_[5] ),
        .I4(\TX_DATA_reg[63] ),
        .O(stg5_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'hFFFEAAAA)) 
    \TX_DATA[63]_i_1 
       (.I0(rst_pma_init_usrclk),
        .I1(\TX_DATA[55]_i_3_n_0 ),
        .I2(\txseq_counter_i_reg_n_0_[6] ),
        .I3(\txseq_counter_i_reg_n_0_[5] ),
        .I4(\TX_DATA_reg[63] ),
        .O(stg5_reg));
  LUT6 #(
    .INIT(64'h000000002E2E2EEE)) 
    TX_HEADER_0_i_1
       (.I0(D[0]),
        .I1(txdatavalid_symgen_i),
        .I2(channel_up_tx_if),
        .I3(gen_sep7_i),
        .I4(gen_sep_i),
        .I5(stg5_reg),
        .O(TX_HEADER_0_reg));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    TX_HEADER_1_i_2
       (.I0(\txseq_counter_i_reg_n_0_[5] ),
        .I1(\txseq_counter_i_reg_n_0_[6] ),
        .I2(\TX_DATA[55]_i_3_n_0 ),
        .O(txdatavalid_symgen_i));
  FDRE #(
    .INIT(1'b0)) 
    allow_block_sync_propagation_reg
       (.C(init_clk),
        .CE(cdr_reset_fsm_lnkreset_i_1_n_0),
        .D(allow_block_sync_propagation),
        .Q(allow_block_sync_propagation_reg_n_0),
        .R(p_2_in));
  aurora_64b66b_SL_aurora_64b66b_SL_MULTI_GT aurora_64b66b_SL_multi_gt_i
       (.D(pre_rxdata_from_gtx_i),
        .E(sel),
        .Q(txheader_r),
        .SCRAMBLED_DATA_OUT(scrambled_data_i),
        .bufg_gt_clr_out(bufg_gt_clr_out),
        .cplllock_out(gt_cplllock_j),
        .gt0_drpaddr(gt0_drpaddr),
        .gt0_drpdi(gt0_drpdi),
        .gt0_drpdo(gt0_drpdo),
        .gt0_drpen(gt0_drpen),
        .gt0_drprdy(gt0_drprdy),
        .gt0_drpwe(gt0_drpwe),
        .gt_powergood(gt_powergood),
        .gt_refclk1_out(gt_refclk1_out),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .gtwiz_reset_rx_done_out(rx_fsm_resetdone_i),
        .gtwiz_reset_tx_done_out(tx_fsm_resetdone_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST (pre_rxheader_from_gtx_i),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 (rxgearboxslip_i),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 (sync_rx_polarity_r),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 ({\txseq_counter_i_reg_n_0_[6] ,\txseq_counter_i_reg_n_0_[5] ,\txseq_counter_i_reg_n_0_[4] ,\txseq_counter_i_reg_n_0_[3] ,\txseq_counter_i_reg_n_0_[2] ,\txseq_counter_i_reg_n_0_[1] ,\txseq_counter_i_reg_n_0_[0] }),
        .init_clk(init_clk),
        .loopback(loopback),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .mmcm_not_locked_out2(mmcm_not_locked_out2),
        .out(gtwiz_userclk_rx_active_in),
        .rst_in_out_reg(rst_in_out_reg),
        .rst_in_out_reg_0(rxfsm_reset_i),
        .rst_in_sync3_reg(stg4_reg),
        .rxbufstatus_out(int_gt_rxbufstatus),
        .rxdatavalid_out(pre_rxdatavalid_i),
        .rxheadervalid_out(pre_rxheadervalid_i),
        .rxn(rxn),
        .rxp(rxp),
        .tx_out_clk(tx_out_clk),
        .txbufstatus_out(tx_buf_err_i),
        .txn(txn),
        .txp(txp));
  aurora_64b66b_SL_aurora_64b66b_SL_BLOCK_SYNC_SM block_sync_sm_gtx0_i
       (.D(rxgearboxslip_i),
        .Q(rxheader_from_gtx_i),
        .SR(new_gtx_rx_pcsreset_comb),
        .blocksync_out_i(blocksync_out_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .rxheadervalid_i(rxheadervalid_i));
  FDRE #(
    .INIT(1'b0)) 
    blocksync_all_lanes_inrxclk_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(blocksync_out_i),
        .Q(blocksync_all_lanes_inrxclk_q),
        .R(1'b0));
  aurora_64b66b_SL_aurora_64b66b_SL_CLOCK_CORRECTION_CHANNEL_BONDING cbcc_gtx0_i
       (.ANY_VLD_BTF_FLAG(ANY_VLD_BTF_FLAG),
        .ANY_VLD_BTF_FLAG0__4(ANY_VLD_BTF_FLAG0__4),
        .CB_detect0(CB_detect0),
        .CC_detect_dlyd1(CC_detect_dlyd1),
        .CC_detect_pulse_i(CC_detect_pulse_i),
        .D({rxdatavalid_to_fifo_i,rxheader_to_fifo_i,rxdata_to_fifo_i}),
        .ENABLE_ERR_DETECT_reg(ENABLE_ERR_DETECT_reg),
        .FINAL_GATER_FOR_FIFO_DIN_reg_0(all_start_cb_writes_i),
        .LINK_RESET_OUT0(LINK_RESET_OUT0),
        .LINK_RESET_OUT_reg(cdr_reset_fsm_lnkreset_reg_n_0),
        .\LINK_RESET_reg[0]_0 (p_2_in),
        .Q(Q),
        .SR(cbcc_fifo_reset_wr_clk),
        .START_CB_WRITES_OUT(START_CB_WRITES_OUT),
        .START_CB_WRITES_OUT_reg_0(all_vld_btf_flag_i),
        .allow_block_sync_propagation_reg(rst_in_out_reg),
        .bit_err_chan_bond_i(bit_err_chan_bond_i),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .channel_up_tx_if(channel_up_tx_if),
        .\count_for_reset_r_reg[23]_0 (u_rst_sync_fsm_resetdone_initclk_n_1),
        .do_rd_en_i(do_rd_en_i),
        .enable_err_detect_i(enable_err_detect_i),
        .final_gater_for_fifo_din_i(final_gater_for_fifo_din_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .hard_err_rst_int(hard_err_rst_int),
        .hard_err_usr0(hard_err_usr0),
        .hard_err_usr_reg(rx_elastic_buf_err),
        .hard_err_usr_reg_0(hard_err_usr_reg_0),
        .hold_reg_r_reg_0(hold_reg_r_reg),
        .hold_reg_r_reg_1(hold_reg_r_reg_0),
        .in0(rxlossofsync_out_q),
        .init_clk(init_clk),
        .master_do_rd_en(master_do_rd_en),
        .new_do_wr_en_reg_0(common_reset_cbcc_i_n_6),
        .out(master_do_rd_en_i),
        .p_8_in(p_8_in),
        .rx_header_1_i(rx_header_1_i),
        .rx_header_err_i(rx_header_err_i),
        .rx_lossofsync_i(rx_lossofsync_i),
        .rxdatavalid_i(rxdatavalid_i),
        .rxfsm_reset_i(rxfsm_reset_i),
        .s_level_out_d5_reg(stg4_reg),
        .srst(cbcc_data_srst),
        .stg5(stg5),
        .txbufstatus_out(tx_buf_err_i),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1),
        .\valid_btf_detect_extend_r_reg[4]_0 (new_gtx_rx_pcsreset_comb),
        .\wr_monitor_flag_reg[0]_0 (cbcc_fifo_reset_to_fifo_wr_clk));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \cdr_reset_fsm_cntr_r[0]_i_1 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[0]),
        .O(\cdr_reset_fsm_cntr_r[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \cdr_reset_fsm_cntr_r[1]_i_1 
       (.I0(cdr_reset_fsm_cntr_r[1]),
        .I1(cdr_reset_fsm_cntr_r[0]),
        .I2(cdr_reset_fsm_lnkreset),
        .O(\cdr_reset_fsm_cntr_r[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h7800)) 
    \cdr_reset_fsm_cntr_r[2]_i_1 
       (.I0(cdr_reset_fsm_cntr_r[0]),
        .I1(cdr_reset_fsm_cntr_r[1]),
        .I2(cdr_reset_fsm_cntr_r[2]),
        .I3(cdr_reset_fsm_lnkreset),
        .O(\cdr_reset_fsm_cntr_r[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \cdr_reset_fsm_cntr_r[3]_i_1 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[2]),
        .I2(cdr_reset_fsm_cntr_r[1]),
        .I3(cdr_reset_fsm_cntr_r[0]),
        .I4(cdr_reset_fsm_cntr_r[3]),
        .O(\cdr_reset_fsm_cntr_r[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF800000000000)) 
    \cdr_reset_fsm_cntr_r[4]_i_1 
       (.I0(cdr_reset_fsm_cntr_r[1]),
        .I1(cdr_reset_fsm_cntr_r[0]),
        .I2(cdr_reset_fsm_cntr_r[3]),
        .I3(cdr_reset_fsm_cntr_r[2]),
        .I4(cdr_reset_fsm_cntr_r[4]),
        .I5(cdr_reset_fsm_lnkreset),
        .O(\cdr_reset_fsm_cntr_r[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \cdr_reset_fsm_cntr_r[5]_i_1 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[4]),
        .I2(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .I3(cdr_reset_fsm_cntr_r[5]),
        .O(\cdr_reset_fsm_cntr_r[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \cdr_reset_fsm_cntr_r[6]_i_1 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[5]),
        .I2(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .I3(cdr_reset_fsm_cntr_r[4]),
        .I4(cdr_reset_fsm_cntr_r[6]),
        .O(\cdr_reset_fsm_cntr_r[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \cdr_reset_fsm_cntr_r[7]_i_1 
       (.I0(\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ),
        .I1(allow_block_sync_propagation),
        .I2(\cdr_reset_fsm_cntr_r[7]_i_3_n_0 ),
        .O(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
    \cdr_reset_fsm_cntr_r[7]_i_2 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[4]),
        .I2(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .I3(cdr_reset_fsm_cntr_r[5]),
        .I4(cdr_reset_fsm_cntr_r[6]),
        .I5(cdr_reset_fsm_cntr_r[7]),
        .O(\cdr_reset_fsm_cntr_r[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAAAAAAAAAA)) 
    \cdr_reset_fsm_cntr_r[7]_i_3 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[5]),
        .I2(cdr_reset_fsm_cntr_r[4]),
        .I3(cdr_reset_fsm_cntr_r[6]),
        .I4(cdr_reset_fsm_cntr_r[7]),
        .I5(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .O(\cdr_reset_fsm_cntr_r[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \cdr_reset_fsm_cntr_r[7]_i_4 
       (.I0(cdr_reset_fsm_cntr_r[1]),
        .I1(cdr_reset_fsm_cntr_r[0]),
        .I2(cdr_reset_fsm_cntr_r[3]),
        .I3(cdr_reset_fsm_cntr_r[2]),
        .O(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[0] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[0]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[0]),
        .R(p_2_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[1] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[1]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[1]),
        .R(p_2_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[2] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[2]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[2]),
        .R(p_2_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[3] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[3]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[3]),
        .R(p_2_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[4] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[4]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[4]),
        .R(p_2_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[5] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[5]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[5]),
        .R(p_2_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[6] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[6]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[6]),
        .R(p_2_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[7] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[7]_i_2_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[7]),
        .R(p_2_in));
  LUT3 #(
    .INIT(8'hFE)) 
    cdr_reset_fsm_lnkreset_i_1
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ),
        .I2(allow_block_sync_propagation),
        .O(cdr_reset_fsm_lnkreset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cdr_reset_fsm_lnkreset_reg
       (.C(init_clk),
        .CE(cdr_reset_fsm_lnkreset_i_1_n_0),
        .D(cdr_reset_fsm_lnkreset),
        .Q(cdr_reset_fsm_lnkreset_reg_n_0),
        .R(p_2_in));
  aurora_64b66b_SL_aurora_64b66b_SL_common_logic_cbcc common_logic_cbcc_i
       (.ANY_VLD_BTF_FLAG(ANY_VLD_BTF_FLAG),
        .SR(cbcc_fifo_reset_wr_clk),
        .START_CB_WRITES_OUT(START_CB_WRITES_OUT),
        .all_vld_btf_flag_i(all_vld_btf_flag_i),
        .cb_bit_err_out(cb_bit_err_out),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(all_start_cb_writes_i),
        .master_do_rd_en_i(master_do_rd_en_i),
        .master_do_rd_en_out_reg_0(do_rd_en_i),
        .master_do_rd_en_out_reg_1(stg4_reg),
        .out(bit_err_chan_bond_i));
  aurora_64b66b_SL_aurora_64b66b_SL_common_reset_cbcc common_reset_cbcc_i
       (.ANY_VLD_BTF_FLAG0__4(ANY_VLD_BTF_FLAG0__4),
        .SR(cbcc_fifo_reset_wr_clk),
        .cb_bit_err_out(cb_bit_err_out),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_fifo_reset_wr_clk_reg_0(common_reset_cbcc_i_n_6),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .srst(cbcc_data_srst),
        .stg1_aurora_64b66b_SL_cdc_to_reg(new_gtx_rx_pcsreset_comb),
        .stg5(stg5),
        .stg5_reg(stg4_reg),
        .stg9_reg(cbcc_fifo_reset_to_fifo_wr_clk));
  aurora_64b66b_SL_aurora_64b66b_SL_DESCRAMBLER_64B66B descrambler_64b66b_gtx0_i
       (.CB_detect0(CB_detect0),
        .CC_detect_dlyd1(CC_detect_dlyd1),
        .CC_detect_pulse_i(CC_detect_pulse_i),
        .D({rxdatavalid_to_fifo_i,rxheader_to_fifo_i}),
        .E(rxdatavalid_i_0),
        .Q(rxdata_from_gtx_i),
        .UNSCRAMBLED_DATA_OUT(rxdata_to_fifo_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(rxlossofsync_out_q),
        .p_8_in(p_8_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFDF)) 
    freeze_free_count_r_inv_i_1
       (.I0(\txseq_counter_i_reg_n_0_[3] ),
        .I1(\txseq_counter_i_reg_n_0_[0] ),
        .I2(\txseq_counter_i_reg_n_0_[4] ),
        .I3(freeze_free_count_r_inv_i_2_n_0),
        .I4(\txseq_counter_i_reg_n_0_[6] ),
        .I5(\txseq_counter_i_reg_n_0_[5] ),
        .O(txdatavalid_i));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h7)) 
    freeze_free_count_r_inv_i_2
       (.I0(\txseq_counter_i_reg_n_0_[1] ),
        .I1(\txseq_counter_i_reg_n_0_[2] ),
        .O(freeze_free_count_r_inv_i_2_n_0));
  LUT5 #(
    .INIT(32'h0000FBFF)) 
    full_data_r_i_1
       (.I0(full_data_r_i_3_n_0),
        .I1(\txseq_counter_i_reg_n_0_[4] ),
        .I2(\txseq_counter_i_reg_n_0_[0] ),
        .I3(\txseq_counter_i_reg_n_0_[3] ),
        .I4(data_r_reg),
        .O(pdu_ok_c));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    full_data_r_i_3
       (.I0(\txseq_counter_i_reg_n_0_[5] ),
        .I1(\txseq_counter_i_reg_n_0_[6] ),
        .I2(\txseq_counter_i_reg_n_0_[2] ),
        .I3(\txseq_counter_i_reg_n_0_[1] ),
        .O(full_data_r_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hard_err_cntr_r[0]_i_1 
       (.I0(hard_err_cntr_r_reg[0]),
        .O(p_0_in__4[0]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \hard_err_cntr_r[1]_i_1 
       (.I0(hard_err_cntr_r_reg[0]),
        .I1(hard_err_cntr_r_reg[1]),
        .O(p_0_in__4[1]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \hard_err_cntr_r[2]_i_1 
       (.I0(hard_err_cntr_r_reg[1]),
        .I1(hard_err_cntr_r_reg[0]),
        .I2(hard_err_cntr_r_reg[2]),
        .O(p_0_in__4[2]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \hard_err_cntr_r[3]_i_1 
       (.I0(hard_err_cntr_r_reg[2]),
        .I1(hard_err_cntr_r_reg[0]),
        .I2(hard_err_cntr_r_reg[1]),
        .I3(hard_err_cntr_r_reg[3]),
        .O(p_0_in__4[3]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \hard_err_cntr_r[4]_i_1 
       (.I0(hard_err_cntr_r_reg[3]),
        .I1(hard_err_cntr_r_reg[1]),
        .I2(hard_err_cntr_r_reg[0]),
        .I3(hard_err_cntr_r_reg[2]),
        .I4(hard_err_cntr_r_reg[4]),
        .O(p_0_in__4[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \hard_err_cntr_r[5]_i_1 
       (.I0(hard_err_cntr_r_reg[1]),
        .I1(hard_err_cntr_r_reg[0]),
        .I2(hard_err_cntr_r_reg[2]),
        .I3(hard_err_cntr_r_reg[3]),
        .I4(hard_err_cntr_r_reg[4]),
        .I5(hard_err_cntr_r_reg[5]),
        .O(p_0_in__4[5]));
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \hard_err_cntr_r[6]_i_1 
       (.I0(\hard_err_cntr_r[7]_i_6_n_0 ),
        .I1(hard_err_cntr_r_reg[4]),
        .I2(hard_err_cntr_r_reg[3]),
        .I3(hard_err_cntr_r_reg[5]),
        .I4(hard_err_cntr_r_reg[6]),
        .O(p_0_in__4[6]));
  LUT6 #(
    .INIT(64'hBFFFFFFF40000000)) 
    \hard_err_cntr_r[7]_i_3 
       (.I0(\hard_err_cntr_r[7]_i_6_n_0 ),
        .I1(hard_err_cntr_r_reg[5]),
        .I2(hard_err_cntr_r_reg[3]),
        .I3(hard_err_cntr_r_reg[4]),
        .I4(hard_err_cntr_r_reg[6]),
        .I5(hard_err_cntr_r_reg[7]),
        .O(p_0_in__4[7]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \hard_err_cntr_r[7]_i_4 
       (.I0(hard_err_cntr_r_reg[6]),
        .I1(hard_err_cntr_r_reg[4]),
        .I2(hard_err_cntr_r_reg[3]),
        .I3(hard_err_cntr_r_reg[5]),
        .I4(hard_err_cntr_r_reg[7]),
        .O(\hard_err_cntr_r[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \hard_err_cntr_r[7]_i_5 
       (.I0(hard_err_cntr_r_reg[3]),
        .I1(hard_err_cntr_r_reg[6]),
        .I2(hard_err_cntr_r_reg[7]),
        .I3(hard_err_cntr_r_reg[5]),
        .I4(hard_err_cntr_r_reg[4]),
        .O(\hard_err_cntr_r[7]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \hard_err_cntr_r[7]_i_6 
       (.I0(hard_err_cntr_r_reg[1]),
        .I1(hard_err_cntr_r_reg[0]),
        .I2(hard_err_cntr_r_reg[2]),
        .O(\hard_err_cntr_r[7]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[0] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__4[0]),
        .Q(hard_err_cntr_r_reg[0]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[1] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__4[1]),
        .Q(hard_err_cntr_r_reg[1]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[2] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__4[2]),
        .Q(hard_err_cntr_r_reg[2]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[3] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__4[3]),
        .Q(hard_err_cntr_r_reg[3]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[4] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__4[4]),
        .Q(hard_err_cntr_r_reg[4]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[5] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__4[5]),
        .Q(hard_err_cntr_r_reg[5]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[6] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__4[6]),
        .Q(hard_err_cntr_r_reg[6]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[7] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__4[7]),
        .Q(hard_err_cntr_r_reg[7]),
        .R(HPCNT_RESET_IN));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFE)) 
    hard_err_rst_int_i_3
       (.I0(hard_err_cntr_r_reg[2]),
        .I1(hard_err_cntr_r_reg[6]),
        .I2(hard_err_cntr_r_reg[4]),
        .I3(hard_err_cntr_r_reg[3]),
        .I4(hard_err_cntr_r_reg[5]),
        .I5(hard_err_cntr_r_reg[7]),
        .O(hard_err_rst_int_i_3_n_0));
  FDRE hard_err_rst_int_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_cdc_hard_err_init_n_0),
        .Q(hard_err_rst_int),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    hard_err_usr_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(hard_err_usr0),
        .Q(hard_err_usr),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    new_gtx_rx_pcsreset_comb_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_rst_sync_fsm_resetdone_n_0),
        .Q(new_gtx_rx_pcsreset_comb),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[0]),
        .Q(pos_rxdata_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[10]),
        .Q(pos_rxdata_from_gtx_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[11]),
        .Q(pos_rxdata_from_gtx_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[12]),
        .Q(pos_rxdata_from_gtx_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[13]),
        .Q(pos_rxdata_from_gtx_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[14]),
        .Q(pos_rxdata_from_gtx_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[15]),
        .Q(pos_rxdata_from_gtx_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[16]),
        .Q(pos_rxdata_from_gtx_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[17]),
        .Q(pos_rxdata_from_gtx_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[18]),
        .Q(pos_rxdata_from_gtx_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[19]),
        .Q(pos_rxdata_from_gtx_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[1]),
        .Q(pos_rxdata_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[20]),
        .Q(pos_rxdata_from_gtx_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[21]),
        .Q(pos_rxdata_from_gtx_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[22]),
        .Q(pos_rxdata_from_gtx_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[23]),
        .Q(pos_rxdata_from_gtx_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[24]),
        .Q(pos_rxdata_from_gtx_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[25]),
        .Q(pos_rxdata_from_gtx_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[26]),
        .Q(pos_rxdata_from_gtx_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[27]),
        .Q(pos_rxdata_from_gtx_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[28]),
        .Q(pos_rxdata_from_gtx_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[29]),
        .Q(pos_rxdata_from_gtx_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[2]),
        .Q(pos_rxdata_from_gtx_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[30]),
        .Q(pos_rxdata_from_gtx_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[31]),
        .Q(pos_rxdata_from_gtx_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[32]),
        .Q(pos_rxdata_from_gtx_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[33]),
        .Q(pos_rxdata_from_gtx_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[34]),
        .Q(pos_rxdata_from_gtx_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[35]),
        .Q(pos_rxdata_from_gtx_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[36]),
        .Q(pos_rxdata_from_gtx_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[37]),
        .Q(pos_rxdata_from_gtx_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[38]),
        .Q(pos_rxdata_from_gtx_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[39]),
        .Q(pos_rxdata_from_gtx_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[3]),
        .Q(pos_rxdata_from_gtx_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[40]),
        .Q(pos_rxdata_from_gtx_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[41]),
        .Q(pos_rxdata_from_gtx_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[42]),
        .Q(pos_rxdata_from_gtx_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[43]),
        .Q(pos_rxdata_from_gtx_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[44]),
        .Q(pos_rxdata_from_gtx_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[45]),
        .Q(pos_rxdata_from_gtx_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[46]),
        .Q(pos_rxdata_from_gtx_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[47]),
        .Q(pos_rxdata_from_gtx_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[48]),
        .Q(pos_rxdata_from_gtx_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[49]),
        .Q(pos_rxdata_from_gtx_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[4]),
        .Q(pos_rxdata_from_gtx_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[50]),
        .Q(pos_rxdata_from_gtx_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[51]),
        .Q(pos_rxdata_from_gtx_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[52]),
        .Q(pos_rxdata_from_gtx_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[53]),
        .Q(pos_rxdata_from_gtx_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[54]),
        .Q(pos_rxdata_from_gtx_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[55]),
        .Q(pos_rxdata_from_gtx_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[56]),
        .Q(pos_rxdata_from_gtx_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[57]),
        .Q(pos_rxdata_from_gtx_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[58]),
        .Q(pos_rxdata_from_gtx_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[59]),
        .Q(pos_rxdata_from_gtx_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[5]),
        .Q(pos_rxdata_from_gtx_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[60]),
        .Q(pos_rxdata_from_gtx_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[61]),
        .Q(pos_rxdata_from_gtx_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[62]),
        .Q(pos_rxdata_from_gtx_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[63]),
        .Q(pos_rxdata_from_gtx_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[6]),
        .Q(pos_rxdata_from_gtx_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[7]),
        .Q(pos_rxdata_from_gtx_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[8]),
        .Q(pos_rxdata_from_gtx_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[9]),
        .Q(pos_rxdata_from_gtx_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxdatavalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxdatavalid_i),
        .Q(pos_rxdatavalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_i),
        .D(pre_r1_rxheader_from_gtx_i[0]),
        .Q(pos_rxheader_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_i),
        .D(pre_r1_rxheader_from_gtx_i[1]),
        .Q(pos_rxheader_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxheadervalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxheadervalid_i),
        .Q(pos_rxheadervalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[0]),
        .Q(pre_r1_rxdata_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[10]),
        .Q(pre_r1_rxdata_from_gtx_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[11]),
        .Q(pre_r1_rxdata_from_gtx_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[12]),
        .Q(pre_r1_rxdata_from_gtx_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[13]),
        .Q(pre_r1_rxdata_from_gtx_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[14]),
        .Q(pre_r1_rxdata_from_gtx_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[15]),
        .Q(pre_r1_rxdata_from_gtx_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[16]),
        .Q(pre_r1_rxdata_from_gtx_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[17]),
        .Q(pre_r1_rxdata_from_gtx_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[18]),
        .Q(pre_r1_rxdata_from_gtx_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[19]),
        .Q(pre_r1_rxdata_from_gtx_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[1]),
        .Q(pre_r1_rxdata_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[20]),
        .Q(pre_r1_rxdata_from_gtx_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[21]),
        .Q(pre_r1_rxdata_from_gtx_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[22]),
        .Q(pre_r1_rxdata_from_gtx_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[23]),
        .Q(pre_r1_rxdata_from_gtx_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[24]),
        .Q(pre_r1_rxdata_from_gtx_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[25]),
        .Q(pre_r1_rxdata_from_gtx_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[26]),
        .Q(pre_r1_rxdata_from_gtx_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[27]),
        .Q(pre_r1_rxdata_from_gtx_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[28]),
        .Q(pre_r1_rxdata_from_gtx_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[29]),
        .Q(pre_r1_rxdata_from_gtx_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[2]),
        .Q(pre_r1_rxdata_from_gtx_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[30]),
        .Q(pre_r1_rxdata_from_gtx_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[31]),
        .Q(pre_r1_rxdata_from_gtx_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[32]),
        .Q(pre_r1_rxdata_from_gtx_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[33]),
        .Q(pre_r1_rxdata_from_gtx_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[34]),
        .Q(pre_r1_rxdata_from_gtx_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[35]),
        .Q(pre_r1_rxdata_from_gtx_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[36]),
        .Q(pre_r1_rxdata_from_gtx_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[37]),
        .Q(pre_r1_rxdata_from_gtx_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[38]),
        .Q(pre_r1_rxdata_from_gtx_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[39]),
        .Q(pre_r1_rxdata_from_gtx_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[3]),
        .Q(pre_r1_rxdata_from_gtx_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[40]),
        .Q(pre_r1_rxdata_from_gtx_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[41]),
        .Q(pre_r1_rxdata_from_gtx_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[42]),
        .Q(pre_r1_rxdata_from_gtx_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[43]),
        .Q(pre_r1_rxdata_from_gtx_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[44]),
        .Q(pre_r1_rxdata_from_gtx_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[45]),
        .Q(pre_r1_rxdata_from_gtx_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[46]),
        .Q(pre_r1_rxdata_from_gtx_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[47]),
        .Q(pre_r1_rxdata_from_gtx_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[48]),
        .Q(pre_r1_rxdata_from_gtx_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[49]),
        .Q(pre_r1_rxdata_from_gtx_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[4]),
        .Q(pre_r1_rxdata_from_gtx_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[50]),
        .Q(pre_r1_rxdata_from_gtx_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[51]),
        .Q(pre_r1_rxdata_from_gtx_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[52]),
        .Q(pre_r1_rxdata_from_gtx_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[53]),
        .Q(pre_r1_rxdata_from_gtx_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[54]),
        .Q(pre_r1_rxdata_from_gtx_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[55]),
        .Q(pre_r1_rxdata_from_gtx_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[56]),
        .Q(pre_r1_rxdata_from_gtx_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[57]),
        .Q(pre_r1_rxdata_from_gtx_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[58]),
        .Q(pre_r1_rxdata_from_gtx_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[59]),
        .Q(pre_r1_rxdata_from_gtx_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[5]),
        .Q(pre_r1_rxdata_from_gtx_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[60]),
        .Q(pre_r1_rxdata_from_gtx_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[61]),
        .Q(pre_r1_rxdata_from_gtx_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[62]),
        .Q(pre_r1_rxdata_from_gtx_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[63]),
        .Q(pre_r1_rxdata_from_gtx_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[6]),
        .Q(pre_r1_rxdata_from_gtx_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[7]),
        .Q(pre_r1_rxdata_from_gtx_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[8]),
        .Q(pre_r1_rxdata_from_gtx_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[9]),
        .Q(pre_r1_rxdata_from_gtx_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxdatavalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdatavalid_i),
        .Q(pre_r1_rxdatavalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_i[0]),
        .Q(pre_r1_rxheader_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_i[1]),
        .Q(pre_r1_rxheader_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxheadervalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheadervalid_i),
        .Q(pre_r1_rxheadervalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[0]),
        .Q(rxdata_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[10]),
        .Q(rxdata_from_gtx_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[11]),
        .Q(rxdata_from_gtx_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[12]),
        .Q(rxdata_from_gtx_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[13]),
        .Q(rxdata_from_gtx_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[14]),
        .Q(rxdata_from_gtx_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[15]),
        .Q(rxdata_from_gtx_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[16]),
        .Q(rxdata_from_gtx_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[17]),
        .Q(rxdata_from_gtx_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[18]),
        .Q(rxdata_from_gtx_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[19]),
        .Q(rxdata_from_gtx_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[1]),
        .Q(rxdata_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[20]),
        .Q(rxdata_from_gtx_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[21]),
        .Q(rxdata_from_gtx_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[22]),
        .Q(rxdata_from_gtx_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[23]),
        .Q(rxdata_from_gtx_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[24]),
        .Q(rxdata_from_gtx_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[25]),
        .Q(rxdata_from_gtx_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[26]),
        .Q(rxdata_from_gtx_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[27]),
        .Q(rxdata_from_gtx_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[28]),
        .Q(rxdata_from_gtx_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[29]),
        .Q(rxdata_from_gtx_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[2]),
        .Q(rxdata_from_gtx_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[30]),
        .Q(rxdata_from_gtx_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[31]),
        .Q(rxdata_from_gtx_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[32]),
        .Q(rxdata_from_gtx_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[33]),
        .Q(rxdata_from_gtx_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[34]),
        .Q(rxdata_from_gtx_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[35]),
        .Q(rxdata_from_gtx_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[36]),
        .Q(rxdata_from_gtx_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[37]),
        .Q(rxdata_from_gtx_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[38]),
        .Q(rxdata_from_gtx_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[39]),
        .Q(rxdata_from_gtx_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[3]),
        .Q(rxdata_from_gtx_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[40]),
        .Q(rxdata_from_gtx_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[41]),
        .Q(rxdata_from_gtx_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[42]),
        .Q(rxdata_from_gtx_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[43]),
        .Q(rxdata_from_gtx_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[44]),
        .Q(rxdata_from_gtx_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[45]),
        .Q(rxdata_from_gtx_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[46]),
        .Q(rxdata_from_gtx_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[47]),
        .Q(rxdata_from_gtx_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[48]),
        .Q(rxdata_from_gtx_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[49]),
        .Q(rxdata_from_gtx_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[4]),
        .Q(rxdata_from_gtx_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[50]),
        .Q(rxdata_from_gtx_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[51]),
        .Q(rxdata_from_gtx_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[52]),
        .Q(rxdata_from_gtx_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[53]),
        .Q(rxdata_from_gtx_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[54]),
        .Q(rxdata_from_gtx_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[55]),
        .Q(rxdata_from_gtx_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[56]),
        .Q(rxdata_from_gtx_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[57]),
        .Q(rxdata_from_gtx_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[58]),
        .Q(rxdata_from_gtx_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[59]),
        .Q(rxdata_from_gtx_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[5]),
        .Q(rxdata_from_gtx_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[60]),
        .Q(rxdata_from_gtx_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[61]),
        .Q(rxdata_from_gtx_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[62]),
        .Q(rxdata_from_gtx_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[63]),
        .Q(rxdata_from_gtx_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[6]),
        .Q(rxdata_from_gtx_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[7]),
        .Q(rxdata_from_gtx_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[8]),
        .Q(rxdata_from_gtx_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[9]),
        .Q(rxdata_from_gtx_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxdatavalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdatavalid_i),
        .Q(rxdatavalid_i_0),
        .R(1'b0));
  FDRE rxdatavalid_to_fifo_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_i_0),
        .Q(rxdatavalid_to_fifo_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_i[0]),
        .Q(rxheader_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_i[1]),
        .Q(rxheader_from_gtx_i[1]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_i[0]),
        .Q(rxheader_to_fifo_i[0]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_i[1]),
        .Q(rxheader_to_fifo_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxheadervalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheadervalid_i),
        .Q(rxheadervalid_i),
        .R(1'b0));
  FDRE rxlossofsync_out_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxlossofsync_out_i),
        .Q(rxlossofsync_out_q),
        .R(1'b0));
  FDRE rxreset_for_lanes_q_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(tx_reset_i),
        .Q(rxreset_for_lanes_q),
        .R(1'b0));
  aurora_64b66b_SL_aurora_64b66b_SL_SCRAMBLER_64B66B scrambler_64b66b_gtx0_i
       (.Q({\txseq_counter_i_reg_n_0_[6] ,\txseq_counter_i_reg_n_0_[5] ,\txseq_counter_i_reg_n_0_[4] ,\txseq_counter_i_reg_n_0_[3] ,\txseq_counter_i_reg_n_0_[2] ,\txseq_counter_i_reg_n_0_[1] ,\txseq_counter_i_reg_n_0_[0] }),
        .SCRAMBLED_DATA_OUT(scrambled_data_i),
        .\SCRAMBLED_DATA_OUT_reg[63]_0 (stg4_reg),
        .\SCRAMBLED_DATA_OUT_reg[63]_1 (TXDATA_IN_REG),
        .\txseq_counter_i_reg[0] (scrambler_64b66b_gtx0_i_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    tlast_txdv_coincide_r_i_1
       (.I0(channel_full_c),
        .I1(txdatavalid_i),
        .O(tlast_txdv_coincide_r0));
  FDRE \tx_hdr_r_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(D[0]),
        .Q(tx_hdr_r[0]),
        .R(1'b0));
  FDRE \tx_hdr_r_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(D[1]),
        .Q(tx_hdr_r[1]),
        .R(1'b0));
  FDRE \txheader_r_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(tx_hdr_r[0]),
        .Q(txheader_r[0]),
        .R(1'b0));
  FDRE \txheader_r_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(tx_hdr_r[1]),
        .Q(txheader_r[1]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0000FFFB)) 
    \txseq_counter_i[0]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[4] ),
        .I1(\txseq_counter_i_reg_n_0_[5] ),
        .I2(\txseq_counter_i_reg_n_0_[2] ),
        .I3(scrambler_64b66b_gtx0_i_n_0),
        .I4(\txseq_counter_i_reg_n_0_[0] ),
        .O(txseq_counter_i[0]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \txseq_counter_i[1]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[1] ),
        .I1(\txseq_counter_i_reg_n_0_[0] ),
        .O(txseq_counter_i[1]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \txseq_counter_i[2]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[2] ),
        .I1(\txseq_counter_i_reg_n_0_[1] ),
        .I2(\txseq_counter_i_reg_n_0_[0] ),
        .O(txseq_counter_i[2]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \txseq_counter_i[3]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[3] ),
        .I1(\txseq_counter_i_reg_n_0_[0] ),
        .I2(\txseq_counter_i_reg_n_0_[1] ),
        .I3(\txseq_counter_i_reg_n_0_[2] ),
        .O(\txseq_counter_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \txseq_counter_i[4]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[4] ),
        .I1(\txseq_counter_i_reg_n_0_[0] ),
        .I2(\txseq_counter_i_reg_n_0_[1] ),
        .I3(\txseq_counter_i_reg_n_0_[2] ),
        .I4(\txseq_counter_i_reg_n_0_[3] ),
        .O(txseq_counter_i[4]));
  LUT5 #(
    .INIT(32'hCCC83333)) 
    \txseq_counter_i[5]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[4] ),
        .I1(\txseq_counter_i_reg_n_0_[5] ),
        .I2(\txseq_counter_i_reg_n_0_[2] ),
        .I3(scrambler_64b66b_gtx0_i_n_0),
        .I4(\TX_DATA[55]_i_3_n_0 ),
        .O(txseq_counter_i[5]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    \txseq_counter_i[6]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[6] ),
        .I1(\TX_DATA[55]_i_3_n_0 ),
        .I2(\txseq_counter_i_reg_n_0_[5] ),
        .O(txseq_counter_i[6]));
  FDRE \txseq_counter_i_reg[0] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[0]),
        .Q(\txseq_counter_i_reg_n_0_[0] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[1] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[1]),
        .Q(\txseq_counter_i_reg_n_0_[1] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[2] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[2]),
        .Q(\txseq_counter_i_reg_n_0_[2] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[3] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(\txseq_counter_i[3]_i_1_n_0 ),
        .Q(\txseq_counter_i_reg_n_0_[3] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[4] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[4]),
        .Q(\txseq_counter_i_reg_n_0_[4] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[5] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[5]),
        .Q(\txseq_counter_i_reg_n_0_[5] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[6] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[6]),
        .Q(\txseq_counter_i_reg_n_0_[6] ),
        .R(gtx_reset_comb));
  LUT1 #(
    .INIT(2'h1)) 
    txsequence_ctr_en_int_i_1
       (.I0(txsequence_ctr_en_int),
        .O(txsequence_ctr_en_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txsequence_ctr_en_int_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(txsequence_ctr_en_int_i_1_n_0),
        .Q(txsequence_ctr_en_int),
        .R(1'b0));
  aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync_6 u_cdc__check_polarity
       (.Q(rxheader_from_gtx_i),
        .RX_NEG_OUT_reg(RX_NEG_OUT_reg_0),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(in0),
        .rxheadervalid_i(rxheadervalid_i),
        .rxheadervalid_i_reg(u_cdc__check_polarity_n_0));
  aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized0 u_cdc_gt_cplllock_i
       (.cplllock_out(gt_cplllock_j),
        .init_clk(init_clk),
        .out(gt_cplllock_i));
  aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized0_7 u_cdc_hard_err_init
       (.E(hard_err_cntr_r),
        .Q(hard_err_cntr_r_reg[2:0]),
        .\dly_gt_rst_r_reg[18] (u_cdc_hard_err_init_n_0),
        .fsm_resetdone_initclk(fsm_resetdone_initclk),
        .\hard_err_cntr_r_reg[0] (\hard_err_cntr_r[7]_i_4_n_0 ),
        .\hard_err_cntr_r_reg[0]_0 (\hard_err_cntr_r[7]_i_5_n_0 ),
        .hard_err_rst_int(hard_err_rst_int),
        .hard_err_rst_int_reg(rst_in_out_reg),
        .hard_err_rst_int_reg_0(cdr_reset_fsm_lnkreset_reg_n_0),
        .hard_err_rst_int_reg_1(hard_err_rst_int_i_3_n_0),
        .in0(hard_err_usr),
        .init_clk(init_clk),
        .out(rxfsm_reset_i),
        .reset_initclk(reset_initclk));
  aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized1 u_cdc_rx_elastic_buferr
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(rx_elastic_buf_err),
        .rxbufstatus_out(int_gt_rxbufstatus),
        .s_level_out_d6_reg_0(stg4_reg));
  aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized0_8 u_cdc_rx_fsm_resetdone_i
       (.init_clk(init_clk),
        .out(rx_fsm_resetdone_i),
        .rx_fsm_resetdone_ii(rx_fsm_resetdone_ii));
  aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized2 u_cdc_rxpolarity_
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(sync_rx_polarity_r),
        .s_level_out_d1_aurora_64b66b_SL_cdc_to_reg_0(s_level_out_d1_aurora_64b66b_SL_cdc_to_reg));
  aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized0_9 u_cdc_tx_fsm_resetdone_i
       (.init_clk(init_clk),
        .out(tx_fsm_resetdone_i),
        .tx_fsm_resetdone_ii(tx_fsm_resetdone_ii));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized0 u_rst_done_sync_rx
       (.out(rx_fsm_resetdone_i),
        .stg2_reg_0(stg4_reg),
        .stg3_reg_0(rx_fsm_resetdone_i_i));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized0_10 u_rst_done_sync_rx1
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(rx_fsm_resetdone_i));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized0_11 u_rst_done_sync_tx
       (.FSM_RESETDONE_j_reg(rx_fsm_resetdone_i_i),
        .out(tx_fsm_resetdone_i),
        .stg3_reg_0(stg3_reg),
        .stg3_reg_1(stg4_reg));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized0_12 u_rst_done_sync_tx1
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(tx_fsm_resetdone_i));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1 u_rst_sync_blocksyncall_initclk_sync
       (.E(u_rst_sync_blocksyncall_initclk_sync_n_0),
        .\FSM_onehot_cdr_reset_fsm_r_reg[0] (\FSM_onehot_cdr_reset_fsm_r[2]_i_4_n_0 ),
        .Q({allow_block_sync_propagation,cdr_reset_fsm_lnkreset,\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] }),
        .in0(blocksync_all_lanes_inrxclk_q),
        .init_clk(init_clk));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_13 u_rst_sync_blocksyncprop_inrxclk_sync
       (.blocksync_out_i(blocksync_out_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(allow_block_sync_propagation_reg_n_0),
        .rxlossofsync_out_i(rxlossofsync_out_i));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_14 u_rst_sync_fsm_resetdone
       (.fsm_resetdone_to_rxreset_in(fsm_resetdone_to_rxreset_in),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(FSM_RESETDONE_j),
        .out(gtwiz_userclk_rx_active_in),
        .stg5_reg_0(u_rst_sync_fsm_resetdone_n_0));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_15 u_rst_sync_fsm_resetdone_initclk
       (.\count_for_reset_r_reg[23] (rst_in_out_reg),
        .\count_for_reset_r_reg[23]_0 (cdr_reset_fsm_lnkreset_reg_n_0),
        .\dly_gt_rst_r_reg[18] (u_rst_sync_fsm_resetdone_initclk_n_1),
        .fsm_resetdone_initclk(fsm_resetdone_initclk),
        .in0(FSM_RESETDONE_j),
        .init_clk(init_clk),
        .out(rxfsm_reset_i),
        .reset_initclk(reset_initclk),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_16 u_rst_sync_gtx_reset_comb
       (.SR(gtx_reset_comb),
        .in0(stableclk_gtx_reset_comb),
        .stg4_reg_0(stg4_reg));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_17 u_rst_sync_reset_initclk
       (.SR(HPCNT_RESET_IN),
        .fsm_resetdone_initclk(fsm_resetdone_initclk),
        .\hard_err_cntr_r_reg[7] (cdr_reset_fsm_lnkreset_reg_n_0),
        .\hard_err_cntr_r_reg[7]_0 (rst_in_out_reg),
        .init_clk(init_clk),
        .out(rxfsm_reset_i),
        .reset_initclk(reset_initclk),
        .sys_reset_out(sys_reset_out));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_18 u_rst_sync_rxreset_in
       (.fsm_resetdone_to_rxreset_in(fsm_resetdone_to_rxreset_in),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(rxreset_for_lanes_q));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_19 u_rst_sync_txusrclk_gtx_reset_comb
       (.E(sel),
        .in0(stableclk_gtx_reset_comb),
        .init_clk(init_clk));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync
   (next_ready_c,
    next_begin_c,
    prev_rx_polarity_r_reg,
    s_level_out_d1_aurora_64b66b_SL_cdc_to_reg_0,
    s_level_out_d5_reg_0,
    align_r,
    begin_r,
    ready_r_reg,
    polarity_r,
    ready_r,
    rx_lossofsync_i,
    rx_polarity_dlyd_i,
    reset_lanes_i,
    begin_r_reg,
    prev_rx_polarity_r,
    rx_polarity_r_reg,
    sys_reset_out);
  output next_ready_c;
  output next_begin_c;
  output prev_rx_polarity_r_reg;
  input s_level_out_d1_aurora_64b66b_SL_cdc_to_reg_0;
  input s_level_out_d5_reg_0;
  input align_r;
  input begin_r;
  input ready_r_reg;
  input polarity_r;
  input ready_r;
  input rx_lossofsync_i;
  input rx_polarity_dlyd_i;
  input reset_lanes_i;
  input begin_r_reg;
  input prev_rx_polarity_r;
  input rx_polarity_r_reg;
  input sys_reset_out;

  wire align_r;
  wire begin_r;
  wire begin_r_reg;
  wire next_begin_c;
  wire next_ready_c;
  wire p_level_in_int;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_reg;
  wire ready_r;
  wire ready_r_i_3_n_0;
  wire ready_r_reg;
  wire reset_lanes_i;
  wire rx_lossofsync_i;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire sys_reset_out;

  assign p_level_in_int = s_level_out_d1_aurora_64b66b_SL_cdc_to_reg_0;
  LUT5 #(
    .INIT(32'hFFFFE0A0)) 
    begin_r_i_1
       (.I0(reset_lanes_i),
        .I1(s_level_out_d2),
        .I2(polarity_r),
        .I3(rx_polarity_dlyd_i),
        .I4(begin_r_reg),
        .O(next_begin_c));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_SL_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT6 #(
    .INIT(64'h0002000200020000)) 
    ready_r_i_2
       (.I0(ready_r_i_3_n_0),
        .I1(align_r),
        .I2(begin_r),
        .I3(ready_r_reg),
        .I4(polarity_r),
        .I5(ready_r),
        .O(next_ready_c));
  LUT6 #(
    .INIT(64'h0000111100001F11)) 
    ready_r_i_3
       (.I0(rx_lossofsync_i),
        .I1(polarity_r),
        .I2(ready_r),
        .I3(rx_polarity_dlyd_i),
        .I4(reset_lanes_i),
        .I5(s_level_out_d2),
        .O(ready_r_i_3_n_0));
  LUT4 #(
    .INIT(16'h0074)) 
    rx_polarity_r_i_1
       (.I0(prev_rx_polarity_r),
        .I1(s_level_out_d2),
        .I2(rx_polarity_r_reg),
        .I3(sys_reset_out),
        .O(prev_rx_polarity_r_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_SL_cdc_to_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_cdc_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync_6
   (rxheadervalid_i_reg,
    in0,
    gtwiz_userclk_rx_usrclk_out,
    rxheadervalid_i,
    Q,
    RX_NEG_OUT_reg);
  output rxheadervalid_i_reg;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;
  input rxheadervalid_i;
  input [1:0]Q;
  input RX_NEG_OUT_reg;

  wire [1:0]Q;
  wire RX_NEG_OUT_reg;
  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire rxheadervalid_i;
  wire rxheadervalid_i_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT5 #(
    .INIT(32'hFF200000)) 
    RX_NEG_OUT_i_1
       (.I0(rxheadervalid_i),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(RX_NEG_OUT_reg),
        .I4(s_level_out_d2),
        .O(rxheadervalid_i_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_SL_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_SL_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_cdc_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized0
   (out,
    cplllock_out,
    init_clk);
  output out;
  input [0:0]cplllock_out;
  input init_clk;

  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d5;
  assign p_level_in_int = cplllock_out[0];
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_SL_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_SL_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_cdc_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized0_20
   (\cb_bit_err_ext_cnt_reg[3] ,
    gtwiz_userclk_rx_usrclk_out,
    Q,
    reset_cbcc_comb_reg);
  output \cb_bit_err_ext_cnt_reg[3] ;
  input gtwiz_userclk_rx_usrclk_out;
  input [3:0]Q;
  input [0:0]reset_cbcc_comb_reg;

  wire [3:0]Q;
  wire \cb_bit_err_ext_cnt_reg[3] ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire [0:0]reset_cbcc_comb_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_SL_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_199
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    reset_cbcc_comb_i_1
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(s_level_out_d5),
        .I5(reset_cbcc_comb_reg),
        .O(\cb_bit_err_ext_cnt_reg[3] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_SL_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_cdc_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized0_27
   (s_level_out_d5_reg_0,
    in0,
    s_level_out_d5_reg_1,
    stg5);
  output s_level_out_d5_reg_0;
  input in0;
  input s_level_out_d5_reg_1;
  input stg5;

  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  wire s_level_out_d5_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire stg5;

  assign p_level_in_int = in0;
  LUT2 #(
    .INIT(4'hD)) 
    CC_RXLOSSOFSYNC_OUT_i_1
       (.I0(s_level_out_d5),
        .I1(stg5),
        .O(s_level_out_d5_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_SL_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_SL_cdc_to_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_cdc_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized0_7
   (\dly_gt_rst_r_reg[18] ,
    E,
    in0,
    init_clk,
    hard_err_rst_int_reg,
    hard_err_rst_int_reg_0,
    fsm_resetdone_initclk,
    reset_initclk,
    out,
    hard_err_rst_int_reg_1,
    Q,
    hard_err_rst_int,
    \hard_err_cntr_r_reg[0] ,
    \hard_err_cntr_r_reg[0]_0 );
  output \dly_gt_rst_r_reg[18] ;
  output [0:0]E;
  input in0;
  input init_clk;
  input hard_err_rst_int_reg;
  input hard_err_rst_int_reg_0;
  input fsm_resetdone_initclk;
  input reset_initclk;
  input out;
  input hard_err_rst_int_reg_1;
  input [2:0]Q;
  input hard_err_rst_int;
  input \hard_err_cntr_r_reg[0] ;
  input \hard_err_cntr_r_reg[0]_0 ;

  wire [0:0]E;
  wire [2:0]Q;
  wire \dly_gt_rst_r_reg[18] ;
  wire fsm_resetdone_initclk;
  wire \hard_err_cntr_r_reg[0] ;
  wire \hard_err_cntr_r_reg[0]_0 ;
  wire hard_err_rst_int;
  wire hard_err_rst_int_i_2_n_0;
  wire hard_err_rst_int_i_4_n_0;
  wire hard_err_rst_int_reg;
  wire hard_err_rst_int_reg_0;
  wire hard_err_rst_int_reg_1;
  wire init_clk;
  wire out;
  wire p_level_in_int;
  wire reset_initclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT6 #(
    .INIT(64'hAAFFFFFFFFFFFFFC)) 
    \hard_err_cntr_r[7]_i_2 
       (.I0(\hard_err_cntr_r_reg[0] ),
        .I1(\hard_err_cntr_r_reg[0]_0 ),
        .I2(s_level_out_d5),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(E));
  LUT6 #(
    .INIT(64'h0202020200000200)) 
    hard_err_rst_int_i_1
       (.I0(hard_err_rst_int_i_2_n_0),
        .I1(hard_err_rst_int_reg),
        .I2(hard_err_rst_int_reg_0),
        .I3(fsm_resetdone_initclk),
        .I4(reset_initclk),
        .I5(out),
        .O(\dly_gt_rst_r_reg[18] ));
  LUT6 #(
    .INIT(64'hAAAAAAEFAAAAAAE0)) 
    hard_err_rst_int_i_2
       (.I0(hard_err_rst_int_reg_1),
        .I1(Q[2]),
        .I2(hard_err_rst_int_i_4_n_0),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(hard_err_rst_int),
        .O(hard_err_rst_int_i_2_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    hard_err_rst_int_i_4
       (.I0(s_level_out_d5),
        .I1(Q[2]),
        .I2(\hard_err_cntr_r_reg[0]_0 ),
        .O(hard_err_rst_int_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_SL_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_SL_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_cdc_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized0_8
   (rx_fsm_resetdone_ii,
    out,
    init_clk);
  output rx_fsm_resetdone_ii;
  input out;
  input init_clk;

  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = out;
  assign rx_fsm_resetdone_ii = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_SL_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_SL_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_cdc_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized0_9
   (tx_fsm_resetdone_ii,
    out,
    init_clk);
  output tx_fsm_resetdone_ii;
  input out;
  input init_clk;

  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = out;
  assign tx_fsm_resetdone_ii = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_SL_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_SL_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_cdc_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized1
   (out,
    rxbufstatus_out,
    gtwiz_userclk_rx_usrclk_out,
    s_level_out_d6_reg_0);
  output out;
  input [0:0]rxbufstatus_out;
  input gtwiz_userclk_rx_usrclk_out;
  input s_level_out_d6_reg_0;

  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire [0:0]rxbufstatus_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  wire s_level_out_d6_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_SL_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  FDRE p_level_in_d1_cdc_from_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxbufstatus_out),
        .Q(p_level_in_int),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_SL_cdc_to_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_cdc_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized2
   (out,
    s_level_out_d1_aurora_64b66b_SL_cdc_to_reg_0,
    gtwiz_userclk_rx_usrclk_out);
  output out;
  input s_level_out_d1_aurora_64b66b_SL_cdc_to_reg_0;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = s_level_out_d1_aurora_64b66b_SL_cdc_to_reg_0;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_SL_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_SL_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_cdc_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized3
   (cbcc_reset_cbstg2_rd_clk,
    full,
    s_level_out_d5_reg_0);
  input cbcc_reset_cbstg2_rd_clk;
  input full;
  input s_level_out_d5_reg_0;

  wire cbcc_reset_cbstg2_rd_clk;
  wire full;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_SL_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_SL_cdc_to_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(full),
        .Q(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_reset_cbstg2_rd_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_cdc_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized3_28
   (out,
    cbcc_fifo_reset_rd_clk,
    overflow,
    s_level_out_d5_reg_0);
  output out;
  input cbcc_fifo_reset_rd_clk;
  input overflow;
  input s_level_out_d5_reg_0;

  wire cbcc_fifo_reset_rd_clk;
  wire overflow;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_SL_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_SL_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_SL_cdc_to_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(overflow),
        .Q(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_SL_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_fifo_reset_rd_clk));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_common_logic_cbcc
   (cb_bit_err_out,
    in0,
    master_do_rd_en_i,
    all_vld_btf_flag_i,
    SR,
    out,
    gtwiz_userclk_rx_usrclk_out,
    START_CB_WRITES_OUT,
    cbcc_fifo_reset_rd_clk,
    master_do_rd_en_out_reg_0,
    master_do_rd_en_out_reg_1,
    ANY_VLD_BTF_FLAG);
  output cb_bit_err_out;
  output in0;
  output master_do_rd_en_i;
  output all_vld_btf_flag_i;
  input [0:0]SR;
  input out;
  input gtwiz_userclk_rx_usrclk_out;
  input START_CB_WRITES_OUT;
  input cbcc_fifo_reset_rd_clk;
  input master_do_rd_en_out_reg_0;
  input master_do_rd_en_out_reg_1;
  input ANY_VLD_BTF_FLAG;

  wire ANY_VLD_BTF_FLAG;
  wire [0:0]SR;
  wire START_CB_WRITES_OUT;
  wire all_vld_btf_flag_i;
  wire cb_bit_err_out;
  wire cbcc_fifo_reset_rd_clk;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire master_do_rd_en_i;
  wire master_do_rd_en_out_reg_0;
  wire master_do_rd_en_out_reg_1;
  wire out;
  wire second_cb_write_failed;

  FDRE all_start_cb_writes_out_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(START_CB_WRITES_OUT),
        .Q(in0),
        .R(SR));
  FDRE all_vld_btf_out_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(ANY_VLD_BTF_FLAG),
        .Q(all_vld_btf_flag_i),
        .R(SR));
  FDRE cb_bit_err_out_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(second_cb_write_failed),
        .Q(cb_bit_err_out),
        .R(SR));
  FDRE master_do_rd_en_out_reg
       (.C(master_do_rd_en_out_reg_1),
        .CE(1'b1),
        .D(master_do_rd_en_out_reg_0),
        .Q(master_do_rd_en_i),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    second_cb_write_failed_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(out),
        .Q(second_cb_write_failed),
        .R(SR));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_common_reset_cbcc
   (srst,
    stg9_reg,
    stg5,
    cbcc_reset_cbstg2_rd_clk,
    SR,
    cbcc_fifo_reset_rd_clk,
    cbcc_fifo_reset_wr_clk_reg_0,
    stg1_aurora_64b66b_SL_cdc_to_reg,
    stg5_reg,
    gtwiz_userclk_rx_usrclk_out,
    ANY_VLD_BTF_FLAG0__4,
    cb_bit_err_out);
  output srst;
  output [0:0]stg9_reg;
  output stg5;
  output cbcc_reset_cbstg2_rd_clk;
  output [0:0]SR;
  output cbcc_fifo_reset_rd_clk;
  output cbcc_fifo_reset_wr_clk_reg_0;
  input [0:0]stg1_aurora_64b66b_SL_cdc_to_reg;
  input stg5_reg;
  input gtwiz_userclk_rx_usrclk_out;
  input ANY_VLD_BTF_FLAG0__4;
  input cb_bit_err_out;

  wire ANY_VLD_BTF_FLAG0__4;
  wire [0:0]SR;
  wire [3:0]cb_bit_err_ext_cnt;
  wire \cb_bit_err_ext_cnt[0]_i_1_n_0 ;
  wire \cb_bit_err_ext_cnt[1]_i_1_n_0 ;
  wire \cb_bit_err_ext_cnt[2]_i_1_n_0 ;
  wire \cb_bit_err_ext_cnt[3]_i_1_n_0 ;
  wire cb_bit_err_out;
  wire cbc_rd_if_reset;
  wire cbc_rd_if_reset_i_1_n_0;
  wire cbc_wr_if_reset;
  wire cbc_wr_if_reset_i_1_n_0;
  wire cbcc_data_srst0;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_rd_clk;
  wire cbcc_fifo_reset_to_fifo_rd_clk_dlyd;
  wire cbcc_fifo_reset_to_fifo_wr_clk_dlyd;
  wire cbcc_fifo_reset_wr_clk_reg_0;
  wire cbcc_reset_cbstg2_rd_clk;
  wire dbg_extend_srst0;
  wire [3:0]dbg_extend_srst_reg;
  wire dbg_srst_assert;
  wire dbg_srst_assert0;
  wire fifo_reset_comb;
  wire fifo_reset_comb_read_clk;
  wire fifo_reset_comb_user_clk;
  wire fifo_reset_comb_user_clk_int;
  wire fifo_reset_comb_user_clk_int_22q;
  wire fifo_reset_rd;
  wire gtwiz_userclk_rx_usrclk_out;
  wire [3:0]p_0_in__5;
  wire rd_stg1;
  wire reset_cbcc_comb;
  wire srst;
  wire [0:0]stg1_aurora_64b66b_SL_cdc_to_reg;
  wire stg5;
  wire stg5_reg;
  wire [0:0]stg9_reg;
  wire u_cdc_chan_bond_reset_n_0;
  wire u_rst_sync_reset_rd_clk_n_0;
  wire u_rst_sync_reset_wr_clk_n_0;
  wire u_rst_sync_rst_cbcc_rd_clk_n_0;
  wire u_rst_sync_rst_cbcc_rd_clk_n_1;

  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'hFFFF5554)) 
    \cb_bit_err_ext_cnt[0]_i_1 
       (.I0(cb_bit_err_ext_cnt[0]),
        .I1(cb_bit_err_ext_cnt[2]),
        .I2(cb_bit_err_ext_cnt[3]),
        .I3(cb_bit_err_ext_cnt[1]),
        .I4(cb_bit_err_out),
        .O(\cb_bit_err_ext_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'hFFFF9998)) 
    \cb_bit_err_ext_cnt[1]_i_1 
       (.I0(cb_bit_err_ext_cnt[0]),
        .I1(cb_bit_err_ext_cnt[1]),
        .I2(cb_bit_err_ext_cnt[2]),
        .I3(cb_bit_err_ext_cnt[3]),
        .I4(cb_bit_err_out),
        .O(\cb_bit_err_ext_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'hFFFFE1E0)) 
    \cb_bit_err_ext_cnt[2]_i_1 
       (.I0(cb_bit_err_ext_cnt[1]),
        .I1(cb_bit_err_ext_cnt[0]),
        .I2(cb_bit_err_ext_cnt[2]),
        .I3(cb_bit_err_ext_cnt[3]),
        .I4(cb_bit_err_out),
        .O(\cb_bit_err_ext_cnt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'hFFFFFE00)) 
    \cb_bit_err_ext_cnt[3]_i_1 
       (.I0(cb_bit_err_ext_cnt[0]),
        .I1(cb_bit_err_ext_cnt[1]),
        .I2(cb_bit_err_ext_cnt[2]),
        .I3(cb_bit_err_ext_cnt[3]),
        .I4(cb_bit_err_out),
        .O(\cb_bit_err_ext_cnt[3]_i_1_n_0 ));
  FDRE \cb_bit_err_ext_cnt_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[0]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[0]),
        .R(stg1_aurora_64b66b_SL_cdc_to_reg));
  FDRE \cb_bit_err_ext_cnt_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[1]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[1]),
        .R(stg1_aurora_64b66b_SL_cdc_to_reg));
  FDRE \cb_bit_err_ext_cnt_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[2]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[2]),
        .R(stg1_aurora_64b66b_SL_cdc_to_reg));
  FDRE \cb_bit_err_ext_cnt_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[3]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[3]),
        .R(stg1_aurora_64b66b_SL_cdc_to_reg));
  LUT4 #(
    .INIT(16'hFFD0)) 
    cbc_rd_if_reset_i_1
       (.I0(cbcc_fifo_reset_to_fifo_rd_clk_dlyd),
        .I1(cbcc_fifo_reset_to_fifo_rd_clk),
        .I2(cbc_rd_if_reset),
        .I3(fifo_reset_comb_read_clk),
        .O(cbc_rd_if_reset_i_1_n_0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbc_rd_if_reset_reg
       (.C(stg5_reg),
        .CE(1'b1),
        .D(cbc_rd_if_reset_i_1_n_0),
        .Q(cbc_rd_if_reset),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFD0)) 
    cbc_wr_if_reset_i_1
       (.I0(cbcc_fifo_reset_to_fifo_wr_clk_dlyd),
        .I1(stg9_reg),
        .I2(cbc_wr_if_reset),
        .I3(fifo_reset_comb_user_clk),
        .O(cbc_wr_if_reset_i_1_n_0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbc_wr_if_reset_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(cbc_wr_if_reset_i_1_n_0),
        .Q(cbc_wr_if_reset),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hBBBBBFFF)) 
    cbcc_data_srst_i_1
       (.I0(dbg_srst_assert),
        .I1(dbg_extend_srst_reg[3]),
        .I2(dbg_extend_srst_reg[0]),
        .I3(dbg_extend_srst_reg[1]),
        .I4(dbg_extend_srst_reg[2]),
        .O(cbcc_data_srst0));
  FDRE #(
    .INIT(1'b0)) 
    cbcc_data_srst_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(cbcc_data_srst0),
        .Q(srst),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cbcc_fifo_reset_rd_clk_reg
       (.C(stg5_reg),
        .CE(1'b1),
        .D(u_rst_sync_reset_rd_clk_n_0),
        .Q(cbcc_fifo_reset_rd_clk),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg
       (.C(stg5_reg),
        .CE(1'b1),
        .D(cbcc_fifo_reset_to_fifo_rd_clk),
        .Q(cbcc_fifo_reset_to_fifo_rd_clk_dlyd),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg9_reg),
        .Q(cbcc_fifo_reset_to_fifo_wr_clk_dlyd),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cbcc_fifo_reset_wr_clk_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(u_rst_sync_reset_wr_clk_n_0),
        .Q(SR),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE cbcc_reset_cbstg2_rd_clk_reg
       (.C(stg5_reg),
        .CE(1'b1),
        .D(u_rst_sync_rst_cbcc_rd_clk_n_1),
        .Q(cbcc_reset_cbstg2_rd_clk),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \dbg_extend_srst[0]_i_1 
       (.I0(dbg_extend_srst_reg[0]),
        .O(p_0_in__5[0]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dbg_extend_srst[1]_i_1 
       (.I0(dbg_extend_srst_reg[0]),
        .I1(dbg_extend_srst_reg[1]),
        .O(p_0_in__5[1]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \dbg_extend_srst[2]_i_1 
       (.I0(dbg_extend_srst_reg[2]),
        .I1(dbg_extend_srst_reg[0]),
        .I2(dbg_extend_srst_reg[1]),
        .O(p_0_in__5[2]));
  LUT4 #(
    .INIT(16'h15FF)) 
    \dbg_extend_srst[3]_i_1 
       (.I0(dbg_extend_srst_reg[2]),
        .I1(dbg_extend_srst_reg[1]),
        .I2(dbg_extend_srst_reg[0]),
        .I3(dbg_extend_srst_reg[3]),
        .O(dbg_extend_srst0));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \dbg_extend_srst[3]_i_2 
       (.I0(dbg_extend_srst_reg[1]),
        .I1(dbg_extend_srst_reg[0]),
        .I2(dbg_extend_srst_reg[2]),
        .I3(dbg_extend_srst_reg[3]),
        .O(p_0_in__5[3]));
  FDRE #(
    .INIT(1'b1)) 
    \dbg_extend_srst_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__5[0]),
        .Q(dbg_extend_srst_reg[0]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b1)) 
    \dbg_extend_srst_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__5[1]),
        .Q(dbg_extend_srst_reg[1]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b0)) 
    \dbg_extend_srst_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__5[2]),
        .Q(dbg_extend_srst_reg[2]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b1)) 
    \dbg_extend_srst_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__5[3]),
        .Q(dbg_extend_srst_reg[3]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b0)) 
    dbg_srst_assert_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(dbg_srst_assert0),
        .Q(dbg_srst_assert),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    do_wr_en_i_2
       (.I0(SR),
        .I1(ANY_VLD_BTF_FLAG0__4),
        .O(cbcc_fifo_reset_wr_clk_reg_0));
  FDRE #(
    .INIT(1'b1)) 
    fifo_reset_comb_user_clk_int_22q_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(fifo_reset_comb_user_clk_int),
        .Q(fifo_reset_comb_user_clk_int_22q),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    fifo_reset_rd_reg
       (.C(stg5_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(fifo_reset_rd),
        .S(cbcc_reset_cbstg2_rd_clk));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    rd_stg1_reg
       (.C(stg5_reg),
        .CE(1'b1),
        .D(u_rst_sync_rst_cbcc_rd_clk_n_0),
        .Q(rd_stg1),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    reset_cbcc_comb_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(u_cdc_chan_bond_reset_n_0),
        .Q(reset_cbcc_comb),
        .R(1'b0));
  aurora_64b66b_SL_aurora_64b66b_SL_cdc_sync__parameterized0_20 u_cdc_chan_bond_reset
       (.Q(cb_bit_err_ext_cnt),
        .\cb_bit_err_ext_cnt_reg[3] (u_cdc_chan_bond_reset_n_0),
        .gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .reset_cbcc_comb_reg(stg1_aurora_64b66b_SL_cdc_to_reg));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_21 u_rst_sync_cbcc_fifo_reset_rd_clk
       (.in0(fifo_reset_comb_user_clk),
        .stg4_reg_0(stg5_reg),
        .stg5_reg_0(fifo_reset_comb_read_clk));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_22 u_rst_sync_cbcc_only_reset_rd_clk
       (.stg1_aurora_64b66b_SL_cdc_to_reg_0(stg1_aurora_64b66b_SL_cdc_to_reg),
        .stg4_reg_0(stg5_reg),
        .stg5(stg5));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized3 u_rst_sync_fifo_reset_comb_user_clk_in
       (.dbg_srst_assert0(dbg_srst_assert0),
        .dbg_srst_assert_reg(fifo_reset_comb_user_clk_int_22q),
        .fifo_reset_comb_user_clk_int(fifo_reset_comb_user_clk_int),
        .gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(fifo_reset_comb_user_clk));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized2 u_rst_sync_fifo_reset_user_clk
       (.gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(fifo_reset_comb),
        .stg11_reg_0(fifo_reset_comb_user_clk));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_23 u_rst_sync_r_sync3
       (.gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(fifo_reset_rd),
        .stg1_aurora_64b66b_SL_cdc_to_reg_0(reset_cbcc_comb),
        .stg5_reg_0(fifo_reset_comb));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_24 u_rst_sync_reset_rd_clk
       (.in0(cbc_rd_if_reset),
        .stg2_reg_0(stg5_reg),
        .stg3_reg_0(u_rst_sync_reset_rd_clk_n_0));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized5 u_rst_sync_reset_to_fifo_rd_clk
       (.cbcc_fifo_reset_to_fifo_rd_clk(cbcc_fifo_reset_to_fifo_rd_clk),
        .stg1_aurora_64b66b_SL_cdc_to_reg_0(fifo_reset_comb_read_clk),
        .stg31_reg_0(stg5_reg));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized4 u_rst_sync_reset_to_fifo_wr_clk
       (.gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .stg1_aurora_64b66b_SL_cdc_to_reg_0(fifo_reset_comb_user_clk_int_22q),
        .stg9_reg_0(stg9_reg));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_25 u_rst_sync_reset_wr_clk
       (.gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(cbc_wr_if_reset),
        .stg3_reg_0(u_rst_sync_reset_wr_clk_n_0));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_26 u_rst_sync_rst_cbcc_rd_clk
       (.rd_stg1(rd_stg1),
        .rd_stg1_reg(u_rst_sync_rst_cbcc_rd_clk_n_1),
        .stg1_aurora_64b66b_SL_cdc_to_reg_0(reset_cbcc_comb),
        .stg5_reg_0(u_rst_sync_rst_cbcc_rd_clk_n_0),
        .stg5_reg_1(stg5_reg));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_core
   (link_reset_out,
    lane_up_flop_i,
    sys_reset_out,
    gt0_drpdo,
    gt0_drprdy,
    gt_powergood,
    txn,
    txp,
    tx_out_clk,
    bufg_gt_clr_out,
    gt_pll_lock,
    CHANNEL_UP_RX_IF_reg,
    hard_err,
    s_axi_tx_tready_reg,
    m_axi_rx_tvalid,
    m_axi_rx_tlast,
    m_axi_rx_tdata,
    m_axi_rx_tkeep,
    soft_err,
    power_down,
    sysreset_from_support,
    \TX_PE_DATA_reg[0] ,
    stg1_aurora_64b66b_SL_cdc_to_reg,
    gt0_drpaddr,
    init_clk,
    gt0_drpdi,
    gt0_drpen,
    gt0_drpwe,
    gt_refclk1_out,
    rxn,
    rxp,
    loopback,
    gt_rxcdrovrden_in,
    s_axi_tx_tvalid,
    s_axi_tx_tlast,
    s_axi_tx_tkeep,
    s_axi_tx_tdata,
    mmcm_not_locked_out2,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output link_reset_out;
  output lane_up_flop_i;
  output sys_reset_out;
  output [15:0]gt0_drpdo;
  output gt0_drprdy;
  output [0:0]gt_powergood;
  output txn;
  output txp;
  output tx_out_clk;
  output bufg_gt_clr_out;
  output gt_pll_lock;
  output CHANNEL_UP_RX_IF_reg;
  output hard_err;
  output s_axi_tx_tready_reg;
  output m_axi_rx_tvalid;
  output m_axi_rx_tlast;
  output [0:63]m_axi_rx_tdata;
  output [0:7]m_axi_rx_tkeep;
  output soft_err;
  input power_down;
  input sysreset_from_support;
  input \TX_PE_DATA_reg[0] ;
  input stg1_aurora_64b66b_SL_cdc_to_reg;
  input [9:0]gt0_drpaddr;
  input init_clk;
  input [15:0]gt0_drpdi;
  input gt0_drpen;
  input gt0_drpwe;
  input gt_refclk1_out;
  input rxn;
  input rxp;
  input [2:0]loopback;
  input gt_rxcdrovrden_in;
  input s_axi_tx_tvalid;
  input s_axi_tx_tlast;
  input [0:7]s_axi_tx_tkeep;
  input [0:63]s_axi_tx_tdata;
  input mmcm_not_locked_out2;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire CHANNEL_UP_RX_IF_reg;
  wire \TX_PE_DATA_reg[0] ;
  wire aurora_64b66b_SL_wrapper_i_n_100;
  wire aurora_64b66b_SL_wrapper_i_n_101;
  wire aurora_64b66b_SL_wrapper_i_n_103;
  wire aurora_64b66b_SL_wrapper_i_n_105;
  wire aurora_64b66b_SL_wrapper_i_n_106;
  wire aurora_64b66b_SL_wrapper_i_n_107;
  wire aurora_64b66b_SL_wrapper_i_n_29;
  wire aurora_64b66b_SL_wrapper_i_n_31;
  wire aurora_64b66b_SL_wrapper_i_n_35;
  wire aurora_64b66b_SL_wrapper_i_n_36;
  wire aurora_64b66b_SL_wrapper_i_n_38;
  wire aurora_64b66b_SL_wrapper_i_n_39;
  wire aurora_64b66b_SL_wrapper_i_n_40;
  wire aurora_64b66b_SL_wrapper_i_n_41;
  wire aurora_64b66b_SL_wrapper_i_n_42;
  wire aurora_64b66b_SL_wrapper_i_n_43;
  wire aurora_64b66b_SL_wrapper_i_n_44;
  wire aurora_64b66b_SL_wrapper_i_n_45;
  wire aurora_64b66b_SL_wrapper_i_n_46;
  wire aurora_64b66b_SL_wrapper_i_n_47;
  wire aurora_64b66b_SL_wrapper_i_n_48;
  wire aurora_64b66b_SL_wrapper_i_n_49;
  wire aurora_64b66b_SL_wrapper_i_n_50;
  wire aurora_64b66b_SL_wrapper_i_n_51;
  wire aurora_64b66b_SL_wrapper_i_n_52;
  wire aurora_64b66b_SL_wrapper_i_n_53;
  wire aurora_64b66b_SL_wrapper_i_n_54;
  wire aurora_64b66b_SL_wrapper_i_n_55;
  wire aurora_64b66b_SL_wrapper_i_n_56;
  wire aurora_64b66b_SL_wrapper_i_n_57;
  wire aurora_64b66b_SL_wrapper_i_n_58;
  wire aurora_64b66b_SL_wrapper_i_n_59;
  wire aurora_64b66b_SL_wrapper_i_n_60;
  wire aurora_64b66b_SL_wrapper_i_n_61;
  wire aurora_64b66b_SL_wrapper_i_n_62;
  wire aurora_64b66b_SL_wrapper_i_n_63;
  wire aurora_64b66b_SL_wrapper_i_n_64;
  wire aurora_64b66b_SL_wrapper_i_n_65;
  wire aurora_64b66b_SL_wrapper_i_n_66;
  wire aurora_64b66b_SL_wrapper_i_n_67;
  wire aurora_64b66b_SL_wrapper_i_n_68;
  wire aurora_64b66b_SL_wrapper_i_n_69;
  wire aurora_64b66b_SL_wrapper_i_n_70;
  wire aurora_64b66b_SL_wrapper_i_n_71;
  wire aurora_64b66b_SL_wrapper_i_n_72;
  wire aurora_64b66b_SL_wrapper_i_n_73;
  wire aurora_64b66b_SL_wrapper_i_n_74;
  wire aurora_64b66b_SL_wrapper_i_n_75;
  wire aurora_64b66b_SL_wrapper_i_n_76;
  wire aurora_64b66b_SL_wrapper_i_n_77;
  wire aurora_64b66b_SL_wrapper_i_n_78;
  wire aurora_64b66b_SL_wrapper_i_n_79;
  wire aurora_64b66b_SL_wrapper_i_n_80;
  wire aurora_64b66b_SL_wrapper_i_n_81;
  wire aurora_64b66b_SL_wrapper_i_n_82;
  wire aurora_64b66b_SL_wrapper_i_n_83;
  wire aurora_64b66b_SL_wrapper_i_n_84;
  wire aurora_64b66b_SL_wrapper_i_n_85;
  wire aurora_64b66b_SL_wrapper_i_n_86;
  wire aurora_64b66b_SL_wrapper_i_n_87;
  wire aurora_64b66b_SL_wrapper_i_n_88;
  wire aurora_64b66b_SL_wrapper_i_n_89;
  wire aurora_64b66b_SL_wrapper_i_n_90;
  wire aurora_64b66b_SL_wrapper_i_n_91;
  wire aurora_64b66b_SL_wrapper_i_n_92;
  wire aurora_64b66b_SL_wrapper_i_n_93;
  wire aurora_64b66b_SL_wrapper_i_n_94;
  wire aurora_64b66b_SL_wrapper_i_n_95;
  wire aurora_64b66b_SL_wrapper_i_n_96;
  wire aurora_64b66b_SL_wrapper_i_n_97;
  wire aurora_64b66b_SL_wrapper_i_n_98;
  wire aurora_64b66b_SL_wrapper_i_n_99;
  wire aurora_lane_0_i_n_68;
  wire aurora_lane_0_i_n_69;
  wire aurora_lane_0_i_n_70;
  wire aurora_lane_0_i_n_71;
  wire aurora_lane_0_i_n_84;
  wire aurora_lane_0_i_n_88;
  wire aurora_lane_0_i_n_89;
  wire aurora_lane_0_i_n_90;
  wire aurora_lane_0_i_n_91;
  wire aurora_lane_0_i_n_92;
  wire bufg_gt_clr_out;
  wire \cbcc_gtx0_i/master_do_rd_en ;
  wire \cbcc_gtx0_i/p_0_in10_in ;
  wire \channel_init_sm_i/reset_lanes_c ;
  wire \channel_init_sm_i/wait_for_lane_up_r0 ;
  wire channel_up_tx_if;
  wire check_polarity_i;
  wire do_cc_i;
  wire enable_err_detect_i;
  wire fsm_resetdone;
  wire gen_cc_i;
  wire gen_ch_bond_i;
  wire gen_na_idles_i;
  wire gen_sep7_i;
  wire gen_sep_i;
  wire global_logic_i_n_10;
  wire global_logic_i_n_6;
  wire global_logic_i_n_8;
  wire got_cc_i;
  wire got_idles_i;
  wire [9:0]gt0_drpaddr;
  wire [15:0]gt0_drpdi;
  wire [15:0]gt0_drpdo;
  wire gt0_drpen;
  wire gt0_drprdy;
  wire gt0_drpwe;
  wire gt_pll_lock;
  wire [0:0]gt_powergood;
  wire gt_refclk1_out;
  wire gt_rxcdrovrden_in;
  wire hard_err;
  wire hard_err_i;
  wire init_clk;
  wire \lane_init_sm_i/ready_r_reg0 ;
  wire \lane_init_sm_i/reset_count_r0 ;
  wire lane_up_flop_i;
  wire link_reset_out;
  wire [2:0]loopback;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire [0:63]m_axi_rx_tdata;
  wire [0:7]m_axi_rx_tkeep;
  wire m_axi_rx_tlast;
  wire m_axi_rx_tvalid;
  wire mmcm_not_locked_out2;
  wire p_0_in;
  wire power_down;
  wire remote_ready_i;
  wire reset_lanes_i;
  wire rx_header_1_i;
  wire rx_header_err_i;
  wire \rx_ll_datapath_i/pipe1_rx_pdu_in_progress_c ;
  wire \rx_ll_datapath_i/rx_pe_data_v_c ;
  wire \rx_ll_datapath_i/rx_sep_c ;
  wire rx_lossofsync_i;
  wire rx_neg_i;
  wire [0:63]rx_pe_data_i;
  wire rx_polarity_i;
  wire rx_sep7_i;
  wire rx_sep_i;
  wire rxdatavalid_i;
  wire rxdatavalid_to_ll_i;
  wire rxn;
  wire rxp;
  wire [0:63]s_axi_tx_tdata;
  wire [0:7]s_axi_tx_tkeep;
  wire s_axi_tx_tlast;
  wire s_axi_tx_tready_reg;
  wire s_axi_tx_tvalid;
  wire soft_err;
  wire soft_err_i;
  wire stg1_aurora_64b66b_SL_cdc_to_reg;
  wire \sym_gen_i/rst_pma_init_usrclk ;
  wire sys_reset_out;
  wire sysreset_from_support;
  wire [0:63]tx_data_i;
  wire tx_header_0_i;
  wire tx_header_1_i;
  wire \tx_ll_control_sm_i/R0 ;
  wire \tx_ll_control_sm_i/channel_full_c ;
  wire \tx_ll_control_sm_i/pdu_ok_c ;
  wire \tx_ll_control_sm_i/tlast_txdv_coincide_r0 ;
  wire tx_ll_i_n_5;
  wire tx_ll_i_n_58;
  wire tx_ll_i_n_59;
  wire tx_ll_i_n_6;
  wire tx_ll_i_n_60;
  wire tx_ll_i_n_61;
  wire tx_ll_i_n_62;
  wire tx_ll_i_n_63;
  wire tx_ll_i_n_64;
  wire tx_ll_i_n_65;
  wire tx_ll_i_n_66;
  wire tx_ll_i_n_67;
  wire tx_ll_i_n_68;
  wire tx_ll_i_n_69;
  wire tx_ll_i_n_7;
  wire tx_ll_i_n_70;
  wire tx_ll_i_n_71;
  wire tx_ll_i_n_72;
  wire tx_ll_i_n_73;
  wire tx_ll_i_n_74;
  wire tx_ll_i_n_75;
  wire tx_ll_i_n_8;
  wire tx_ll_i_n_9;
  wire tx_out_clk;
  wire [0:47]tx_pe_data_i;
  wire tx_reset_i;
  wire txdatavalid_i;
  wire txdatavalid_symgen_i;
  wire txn;
  wire txp;

  aurora_64b66b_SL_aurora_64b66b_SL_WRAPPER aurora_64b66b_SL_wrapper_i
       (.D({tx_header_1_i,tx_header_0_i}),
        .ENABLE_ERR_DETECT_reg(aurora_64b66b_SL_wrapper_i_n_36),
        .Q({\cbcc_gtx0_i/p_0_in10_in ,aurora_64b66b_SL_wrapper_i_n_38,aurora_64b66b_SL_wrapper_i_n_39,aurora_64b66b_SL_wrapper_i_n_40,aurora_64b66b_SL_wrapper_i_n_41,aurora_64b66b_SL_wrapper_i_n_42,aurora_64b66b_SL_wrapper_i_n_43,aurora_64b66b_SL_wrapper_i_n_44,aurora_64b66b_SL_wrapper_i_n_45,aurora_64b66b_SL_wrapper_i_n_46,aurora_64b66b_SL_wrapper_i_n_47,aurora_64b66b_SL_wrapper_i_n_48,aurora_64b66b_SL_wrapper_i_n_49,aurora_64b66b_SL_wrapper_i_n_50,aurora_64b66b_SL_wrapper_i_n_51,aurora_64b66b_SL_wrapper_i_n_52,aurora_64b66b_SL_wrapper_i_n_53,aurora_64b66b_SL_wrapper_i_n_54,aurora_64b66b_SL_wrapper_i_n_55,aurora_64b66b_SL_wrapper_i_n_56,aurora_64b66b_SL_wrapper_i_n_57,aurora_64b66b_SL_wrapper_i_n_58,aurora_64b66b_SL_wrapper_i_n_59,aurora_64b66b_SL_wrapper_i_n_60,aurora_64b66b_SL_wrapper_i_n_61,aurora_64b66b_SL_wrapper_i_n_62,aurora_64b66b_SL_wrapper_i_n_63,aurora_64b66b_SL_wrapper_i_n_64,aurora_64b66b_SL_wrapper_i_n_65,aurora_64b66b_SL_wrapper_i_n_66,aurora_64b66b_SL_wrapper_i_n_67,aurora_64b66b_SL_wrapper_i_n_68,aurora_64b66b_SL_wrapper_i_n_69,aurora_64b66b_SL_wrapper_i_n_70,aurora_64b66b_SL_wrapper_i_n_71,aurora_64b66b_SL_wrapper_i_n_72,aurora_64b66b_SL_wrapper_i_n_73,aurora_64b66b_SL_wrapper_i_n_74,aurora_64b66b_SL_wrapper_i_n_75,aurora_64b66b_SL_wrapper_i_n_76,aurora_64b66b_SL_wrapper_i_n_77,aurora_64b66b_SL_wrapper_i_n_78,aurora_64b66b_SL_wrapper_i_n_79,aurora_64b66b_SL_wrapper_i_n_80,aurora_64b66b_SL_wrapper_i_n_81,aurora_64b66b_SL_wrapper_i_n_82,aurora_64b66b_SL_wrapper_i_n_83,aurora_64b66b_SL_wrapper_i_n_84,aurora_64b66b_SL_wrapper_i_n_85,aurora_64b66b_SL_wrapper_i_n_86,aurora_64b66b_SL_wrapper_i_n_87,aurora_64b66b_SL_wrapper_i_n_88,aurora_64b66b_SL_wrapper_i_n_89,aurora_64b66b_SL_wrapper_i_n_90,aurora_64b66b_SL_wrapper_i_n_91,aurora_64b66b_SL_wrapper_i_n_92,aurora_64b66b_SL_wrapper_i_n_93,aurora_64b66b_SL_wrapper_i_n_94,aurora_64b66b_SL_wrapper_i_n_95,aurora_64b66b_SL_wrapper_i_n_96,aurora_64b66b_SL_wrapper_i_n_97,aurora_64b66b_SL_wrapper_i_n_98,aurora_64b66b_SL_wrapper_i_n_99,aurora_64b66b_SL_wrapper_i_n_100,aurora_64b66b_SL_wrapper_i_n_101}),
        .RX_NEG_OUT_reg_0(rx_neg_i),
        .\TXDATA_IN_REG_reg[63]_0 ({tx_data_i[0],tx_data_i[1],tx_data_i[2],tx_data_i[3],tx_data_i[4],tx_data_i[5],tx_data_i[6],tx_data_i[7],tx_data_i[8],tx_data_i[9],tx_data_i[10],tx_data_i[11],tx_data_i[12],tx_data_i[13],tx_data_i[14],tx_data_i[15],tx_data_i[16],tx_data_i[17],tx_data_i[18],tx_data_i[19],tx_data_i[20],tx_data_i[21],tx_data_i[22],tx_data_i[23],tx_data_i[24],tx_data_i[25],tx_data_i[26],tx_data_i[27],tx_data_i[28],tx_data_i[29],tx_data_i[30],tx_data_i[31],tx_data_i[32],tx_data_i[33],tx_data_i[34],tx_data_i[35],tx_data_i[36],tx_data_i[37],tx_data_i[38],tx_data_i[39],tx_data_i[40],tx_data_i[41],tx_data_i[42],tx_data_i[43],tx_data_i[44],tx_data_i[45],tx_data_i[46],tx_data_i[47],tx_data_i[48],tx_data_i[49],tx_data_i[50],tx_data_i[51],tx_data_i[52],tx_data_i[53],tx_data_i[54],tx_data_i[55],tx_data_i[56],tx_data_i[57],tx_data_i[58],tx_data_i[59],tx_data_i[60],tx_data_i[61],tx_data_i[62],tx_data_i[63]}),
        .\TX_DATA_reg[63] (tx_ll_i_n_58),
        .TX_HEADER_0_reg(aurora_64b66b_SL_wrapper_i_n_29),
        .bufg_gt_clr_out(bufg_gt_clr_out),
        .channel_full_c(\tx_ll_control_sm_i/channel_full_c ),
        .channel_up_tx_if(channel_up_tx_if),
        .data_r_reg(tx_ll_i_n_64),
        .enable_err_detect_i(enable_err_detect_i),
        .gen_sep7_i(gen_sep7_i),
        .gen_sep_i(gen_sep_i),
        .gt0_drpaddr(gt0_drpaddr),
        .gt0_drpdi(gt0_drpdi),
        .gt0_drpdo(gt0_drpdo),
        .gt0_drpen(gt0_drpen),
        .gt0_drprdy(gt0_drprdy),
        .gt0_drpwe(gt0_drpwe),
        .gt_pll_lock(gt_pll_lock),
        .gt_powergood(gt_powergood),
        .gt_refclk1_out(gt_refclk1_out),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .hard_err_usr_reg_0(CHANNEL_UP_RX_IF_reg),
        .hold_reg_r_reg(aurora_64b66b_SL_wrapper_i_n_103),
        .hold_reg_r_reg_0(aurora_64b66b_SL_wrapper_i_n_107),
        .in0(check_polarity_i),
        .init_clk(init_clk),
        .link_reset_out(link_reset_out),
        .loopback(loopback),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .master_do_rd_en(\cbcc_gtx0_i/master_do_rd_en ),
        .mmcm_not_locked_out2(mmcm_not_locked_out2),
        .pdu_ok_c(\tx_ll_control_sm_i/pdu_ok_c ),
        .rst_in_out_reg(stg1_aurora_64b66b_SL_cdc_to_reg),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk ),
        .rx_header_1_i(rx_header_1_i),
        .rx_header_err_i(rx_header_err_i),
        .rx_lossofsync_i(rx_lossofsync_i),
        .rxdatavalid_i(rxdatavalid_i),
        .rxn(rxn),
        .rxp(rxp),
        .s_level_out_d1_aurora_64b66b_SL_cdc_to_reg(rx_polarity_i),
        .stg3_reg(fsm_resetdone),
        .stg4_reg(\TX_PE_DATA_reg[0] ),
        .stg5_reg(aurora_64b66b_SL_wrapper_i_n_31),
        .stg5_reg_0(aurora_64b66b_SL_wrapper_i_n_35),
        .stg5_reg_1(aurora_64b66b_SL_wrapper_i_n_105),
        .stg5_reg_2(aurora_64b66b_SL_wrapper_i_n_106),
        .sys_reset_out(sys_reset_out),
        .tlast_txdv_coincide_r0(\tx_ll_control_sm_i/tlast_txdv_coincide_r0 ),
        .tx_out_clk(tx_out_clk),
        .tx_reset_i(tx_reset_i),
        .txdatavalid_i(txdatavalid_i),
        .txdatavalid_symgen_i(txdatavalid_symgen_i),
        .txn(txn),
        .txp(txp));
  aurora_64b66b_SL_aurora_64b66b_SL_AURORA_LANE aurora_lane_0_i
       (.D({rx_pe_data_i[0],rx_pe_data_i[1],rx_pe_data_i[2],rx_pe_data_i[3],rx_pe_data_i[4],rx_pe_data_i[5],rx_pe_data_i[6],rx_pe_data_i[7],rx_pe_data_i[8],rx_pe_data_i[9],rx_pe_data_i[10],rx_pe_data_i[11],rx_pe_data_i[12],rx_pe_data_i[13],rx_pe_data_i[14],rx_pe_data_i[15],rx_pe_data_i[16],rx_pe_data_i[17],rx_pe_data_i[18],rx_pe_data_i[19],rx_pe_data_i[20],rx_pe_data_i[21],rx_pe_data_i[22],rx_pe_data_i[23],rx_pe_data_i[24],rx_pe_data_i[25],rx_pe_data_i[26],rx_pe_data_i[27],rx_pe_data_i[28],rx_pe_data_i[29],rx_pe_data_i[30],rx_pe_data_i[31],rx_pe_data_i[32],rx_pe_data_i[33],rx_pe_data_i[34],rx_pe_data_i[35],rx_pe_data_i[36],rx_pe_data_i[37],rx_pe_data_i[38],rx_pe_data_i[39],rx_pe_data_i[40],rx_pe_data_i[41],rx_pe_data_i[42],rx_pe_data_i[43],rx_pe_data_i[44],rx_pe_data_i[45],rx_pe_data_i[46],rx_pe_data_i[47],rx_pe_data_i[48],rx_pe_data_i[49],rx_pe_data_i[50],rx_pe_data_i[51],rx_pe_data_i[52],rx_pe_data_i[53],rx_pe_data_i[54],rx_pe_data_i[55],rx_pe_data_i[56],rx_pe_data_i[57],rx_pe_data_i[58],rx_pe_data_i[59],rx_pe_data_i[60],rx_pe_data_i[61],rx_pe_data_i[62],rx_pe_data_i[63],aurora_lane_0_i_n_68,aurora_lane_0_i_n_69,aurora_lane_0_i_n_70,aurora_lane_0_i_n_71,rx_sep_i,rx_sep7_i}),
        .HARD_ERR_reg(aurora_64b66b_SL_wrapper_i_n_36),
        .Q({\cbcc_gtx0_i/p_0_in10_in ,aurora_64b66b_SL_wrapper_i_n_38,aurora_64b66b_SL_wrapper_i_n_39,aurora_64b66b_SL_wrapper_i_n_40,aurora_64b66b_SL_wrapper_i_n_41,aurora_64b66b_SL_wrapper_i_n_42,aurora_64b66b_SL_wrapper_i_n_43,aurora_64b66b_SL_wrapper_i_n_44,aurora_64b66b_SL_wrapper_i_n_45,aurora_64b66b_SL_wrapper_i_n_46,aurora_64b66b_SL_wrapper_i_n_47,aurora_64b66b_SL_wrapper_i_n_48,aurora_64b66b_SL_wrapper_i_n_49,aurora_64b66b_SL_wrapper_i_n_50,aurora_64b66b_SL_wrapper_i_n_51,aurora_64b66b_SL_wrapper_i_n_52,aurora_64b66b_SL_wrapper_i_n_53,aurora_64b66b_SL_wrapper_i_n_54,aurora_64b66b_SL_wrapper_i_n_55,aurora_64b66b_SL_wrapper_i_n_56,aurora_64b66b_SL_wrapper_i_n_57,aurora_64b66b_SL_wrapper_i_n_58,aurora_64b66b_SL_wrapper_i_n_59,aurora_64b66b_SL_wrapper_i_n_60,aurora_64b66b_SL_wrapper_i_n_61,aurora_64b66b_SL_wrapper_i_n_62,aurora_64b66b_SL_wrapper_i_n_63,aurora_64b66b_SL_wrapper_i_n_64,aurora_64b66b_SL_wrapper_i_n_65,aurora_64b66b_SL_wrapper_i_n_66,aurora_64b66b_SL_wrapper_i_n_67,aurora_64b66b_SL_wrapper_i_n_68,aurora_64b66b_SL_wrapper_i_n_69,aurora_64b66b_SL_wrapper_i_n_70,aurora_64b66b_SL_wrapper_i_n_71,aurora_64b66b_SL_wrapper_i_n_72,aurora_64b66b_SL_wrapper_i_n_73,aurora_64b66b_SL_wrapper_i_n_74,aurora_64b66b_SL_wrapper_i_n_75,aurora_64b66b_SL_wrapper_i_n_76,aurora_64b66b_SL_wrapper_i_n_77,aurora_64b66b_SL_wrapper_i_n_78,aurora_64b66b_SL_wrapper_i_n_79,aurora_64b66b_SL_wrapper_i_n_80,aurora_64b66b_SL_wrapper_i_n_81,aurora_64b66b_SL_wrapper_i_n_82,aurora_64b66b_SL_wrapper_i_n_83,aurora_64b66b_SL_wrapper_i_n_84,aurora_64b66b_SL_wrapper_i_n_85,aurora_64b66b_SL_wrapper_i_n_86,aurora_64b66b_SL_wrapper_i_n_87,aurora_64b66b_SL_wrapper_i_n_88,aurora_64b66b_SL_wrapper_i_n_89,aurora_64b66b_SL_wrapper_i_n_90,aurora_64b66b_SL_wrapper_i_n_91,aurora_64b66b_SL_wrapper_i_n_92,aurora_64b66b_SL_wrapper_i_n_93,aurora_64b66b_SL_wrapper_i_n_94,aurora_64b66b_SL_wrapper_i_n_95,aurora_64b66b_SL_wrapper_i_n_96,aurora_64b66b_SL_wrapper_i_n_97,aurora_64b66b_SL_wrapper_i_n_98,aurora_64b66b_SL_wrapper_i_n_99,aurora_64b66b_SL_wrapper_i_n_100,aurora_64b66b_SL_wrapper_i_n_101}),
        .\RX_DATA_REG_reg[0] (aurora_64b66b_SL_wrapper_i_n_107),
        .RX_HEADER_0_REG_reg(aurora_64b66b_SL_wrapper_i_n_103),
        .\RX_SEP_NB_reg[1] (aurora_lane_0_i_n_89),
        .\RX_SEP_NB_reg[2] (aurora_lane_0_i_n_84),
        .\RX_SEP_NB_reg[2]_0 (aurora_lane_0_i_n_90),
        .\RX_SEP_NB_reg[2]_1 (aurora_lane_0_i_n_92),
        .RX_SEP_reg(aurora_lane_0_i_n_91),
        .\TX_DATA_reg[48] (tx_ll_i_n_68),
        .\TX_DATA_reg[49] (tx_ll_i_n_69),
        .\TX_DATA_reg[50] (tx_ll_i_n_70),
        .\TX_DATA_reg[51] (tx_ll_i_n_67),
        .\TX_DATA_reg[55] ({tx_ll_i_n_5,tx_ll_i_n_6,tx_ll_i_n_7,tx_ll_i_n_8}),
        .\TX_DATA_reg[56] (tx_ll_i_n_71),
        .\TX_DATA_reg[57] (tx_ll_i_n_72),
        .\TX_DATA_reg[58] (aurora_64b66b_SL_wrapper_i_n_105),
        .\TX_DATA_reg[58]_0 (tx_ll_i_n_73),
        .\TX_DATA_reg[59] (aurora_64b66b_SL_wrapper_i_n_35),
        .\TX_DATA_reg[59]_0 (aurora_64b66b_SL_wrapper_i_n_106),
        .\TX_DATA_reg[59]_1 (tx_ll_i_n_59),
        .\TX_DATA_reg[60] (tx_ll_i_n_60),
        .\TX_DATA_reg[61] (tx_ll_i_n_61),
        .\TX_DATA_reg[62] (tx_ll_i_n_74),
        .\TX_DATA_reg[63] ({tx_data_i[0],tx_data_i[1],tx_data_i[2],tx_data_i[3],tx_data_i[4],tx_data_i[5],tx_data_i[6],tx_data_i[7],tx_data_i[8],tx_data_i[9],tx_data_i[10],tx_data_i[11],tx_data_i[12],tx_data_i[13],tx_data_i[14],tx_data_i[15],tx_data_i[16],tx_data_i[17],tx_data_i[18],tx_data_i[19],tx_data_i[20],tx_data_i[21],tx_data_i[22],tx_data_i[23],tx_data_i[24],tx_data_i[25],tx_data_i[26],tx_data_i[27],tx_data_i[28],tx_data_i[29],tx_data_i[30],tx_data_i[31],tx_data_i[32],tx_data_i[33],tx_data_i[34],tx_data_i[35],tx_data_i[36],tx_data_i[37],tx_data_i[38],tx_data_i[39],tx_data_i[40],tx_data_i[41],tx_data_i[42],tx_data_i[43],tx_data_i[44],tx_data_i[45],tx_data_i[46],tx_data_i[47],tx_data_i[48],tx_data_i[49],tx_data_i[50],tx_data_i[51],tx_data_i[52],tx_data_i[53],tx_data_i[54],tx_data_i[55],tx_data_i[56],tx_data_i[57],tx_data_i[58],tx_data_i[59],tx_data_i[60],tx_data_i[61],tx_data_i[62],tx_data_i[63]}),
        .\TX_DATA_reg[63]_0 (aurora_64b66b_SL_wrapper_i_n_31),
        .\TX_DATA_reg[63]_1 (tx_ll_i_n_75),
        .\TX_DATA_reg[7] ({tx_pe_data_i[0],tx_pe_data_i[1],tx_pe_data_i[2],tx_pe_data_i[3],tx_pe_data_i[4],tx_pe_data_i[5],tx_pe_data_i[6],tx_pe_data_i[7],tx_pe_data_i[8],tx_pe_data_i[9],tx_pe_data_i[10],tx_pe_data_i[11],tx_pe_data_i[12],tx_pe_data_i[13],tx_pe_data_i[14],tx_pe_data_i[15],tx_pe_data_i[16],tx_pe_data_i[17],tx_pe_data_i[18],tx_pe_data_i[19],tx_pe_data_i[20],tx_pe_data_i[21],tx_pe_data_i[22],tx_pe_data_i[23],tx_pe_data_i[24],tx_pe_data_i[25],tx_pe_data_i[26],tx_pe_data_i[27],tx_pe_data_i[28],tx_pe_data_i[29],tx_pe_data_i[30],tx_pe_data_i[31],tx_pe_data_i[32],tx_pe_data_i[33],tx_pe_data_i[34],tx_pe_data_i[35],tx_pe_data_i[36],tx_pe_data_i[37],tx_pe_data_i[38],tx_pe_data_i[39],tx_pe_data_i[40],tx_pe_data_i[41],tx_pe_data_i[42],tx_pe_data_i[43],tx_pe_data_i[44],tx_pe_data_i[45],tx_pe_data_i[46],tx_pe_data_i[47]}),
        .TX_HEADER_0_reg(aurora_64b66b_SL_wrapper_i_n_29),
        .TX_HEADER_1_reg({tx_header_1_i,tx_header_0_i}),
        .TX_HEADER_1_reg_0(tx_ll_i_n_9),
        .TX_HEADER_1_reg_1(tx_ll_i_n_58),
        .channel_up_tx_if(channel_up_tx_if),
        .enable_err_detect_i(enable_err_detect_i),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .got_cc_i(got_cc_i),
        .got_idles_i(got_idles_i),
        .hard_err_i(hard_err_i),
        .in0(check_polarity_i),
        .lane_up_flop_i(lane_up_flop_i),
        .master_do_rd_en(\cbcc_gtx0_i/master_do_rd_en ),
        .pipe1_rx_pdu_in_progress_c(\rx_ll_datapath_i/pipe1_rx_pdu_in_progress_c ),
        .ready_r_reg0(\lane_init_sm_i/ready_r_reg0 ),
        .remote_ready_i(remote_ready_i),
        .reset_count_r0(\lane_init_sm_i/reset_count_r0 ),
        .reset_lanes_i(reset_lanes_i),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk ),
        .rx_header_1_i(rx_header_1_i),
        .rx_header_err_i(rx_header_err_i),
        .rx_lossofsync_i(rx_lossofsync_i),
        .rx_pe_data_v_c(\rx_ll_datapath_i/rx_pe_data_v_c ),
        .rx_pe_data_v_r_reg(CHANNEL_UP_RX_IF_reg),
        .rx_polarity_r_reg(rx_polarity_i),
        .rx_sep_c(\rx_ll_datapath_i/rx_sep_c ),
        .rxdatavalid_i(rxdatavalid_i),
        .rxdatavalid_to_ll_i(rxdatavalid_to_ll_i),
        .s_level_out_d1_aurora_64b66b_SL_cdc_to_reg(rx_neg_i),
        .soft_err_i(soft_err_i),
        .stg1_aurora_64b66b_SL_cdc_to_reg(stg1_aurora_64b66b_SL_cdc_to_reg),
        .stg5_reg(aurora_lane_0_i_n_88),
        .stg5_reg_0(\TX_PE_DATA_reg[0] ),
        .sys_reset_out(sys_reset_out),
        .tx_reset_i(tx_reset_i),
        .txdatavalid_symgen_i(txdatavalid_symgen_i));
  aurora_64b66b_SL_aurora_64b66b_SL_RESET_LOGIC core_reset_logic_i
       (.gen_na_idles_i(gen_na_idles_i),
        .hard_err_i(hard_err_i),
        .link_reset_out(link_reset_out),
        .power_down(power_down),
        .ready_r_reg0(\lane_init_sm_i/ready_r_reg0 ),
        .reset_count_r0(\lane_init_sm_i/reset_count_r0 ),
        .reset_lanes_c(\channel_init_sm_i/reset_lanes_c ),
        .reset_lanes_flop_0_i(lane_up_flop_i),
        .stg1_aurora_64b66b_SL_cdc_to_reg(fsm_resetdone),
        .stg4_reg(\TX_PE_DATA_reg[0] ),
        .sys_reset_out(sys_reset_out),
        .sysreset_from_support(sysreset_from_support),
        .tx_reset_i(tx_reset_i),
        .wait_for_lane_up_r0(\channel_init_sm_i/wait_for_lane_up_r0 ));
  aurora_64b66b_SL_aurora_64b66b_SL_GLOBAL_LOGIC global_logic_i
       (.CHANNEL_UP_RX_IF_reg(CHANNEL_UP_RX_IF_reg),
        .CHANNEL_UP_TX_IF_reg(global_logic_i_n_8),
        .CHANNEL_UP_TX_IF_reg_0(global_logic_i_n_10),
        .CHANNEL_UP_TX_IF_reg_1(\TX_PE_DATA_reg[0] ),
        .GEN_SEP7_i_3(tx_ll_i_n_63),
        .GEN_SEP7_i_3_0(tx_ll_i_n_62),
        .GEN_SEP7_i_3_1(tx_ll_i_n_65),
        .GEN_SEP7_i_3_2(tx_ll_i_n_66),
        .GEN_SEP7_i_3_3(s_axi_tx_tready_reg),
        .R0(\tx_ll_control_sm_i/R0 ),
        .SR(p_0_in),
        .channel_up_tx_if(channel_up_tx_if),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .gen_na_idles_i(gen_na_idles_i),
        .got_idles_i(got_idles_i),
        .hard_err(hard_err),
        .hard_err_i(hard_err_i),
        .remote_ready_i(remote_ready_i),
        .reset_lanes_c(\channel_init_sm_i/reset_lanes_c ),
        .reset_lanes_i(reset_lanes_i),
        .soft_err_i(soft_err_i),
        .sys_reset_out(sys_reset_out),
        .txdatavalid_i(txdatavalid_i),
        .wait_for_lane_up_r0(\channel_init_sm_i/wait_for_lane_up_r0 ),
        .wait_for_lane_up_r_reg(global_logic_i_n_6));
  aurora_64b66b_SL_aurora_64b66b_SL_RX_LL rx_ll_i
       (.D({rx_pe_data_i[0],rx_pe_data_i[1],rx_pe_data_i[2],rx_pe_data_i[3],rx_pe_data_i[4],rx_pe_data_i[5],rx_pe_data_i[6],rx_pe_data_i[7],rx_pe_data_i[8],rx_pe_data_i[9],rx_pe_data_i[10],rx_pe_data_i[11],rx_pe_data_i[12],rx_pe_data_i[13],rx_pe_data_i[14],rx_pe_data_i[15],rx_pe_data_i[16],rx_pe_data_i[17],rx_pe_data_i[18],rx_pe_data_i[19],rx_pe_data_i[20],rx_pe_data_i[21],rx_pe_data_i[22],rx_pe_data_i[23],rx_pe_data_i[24],rx_pe_data_i[25],rx_pe_data_i[26],rx_pe_data_i[27],rx_pe_data_i[28],rx_pe_data_i[29],rx_pe_data_i[30],rx_pe_data_i[31],rx_pe_data_i[32],rx_pe_data_i[33],rx_pe_data_i[34],rx_pe_data_i[35],rx_pe_data_i[36],rx_pe_data_i[37],rx_pe_data_i[38],rx_pe_data_i[39],rx_pe_data_i[40],rx_pe_data_i[41],rx_pe_data_i[42],rx_pe_data_i[43],rx_pe_data_i[44],rx_pe_data_i[45],rx_pe_data_i[46],rx_pe_data_i[47],rx_pe_data_i[48],rx_pe_data_i[49],rx_pe_data_i[50],rx_pe_data_i[51],rx_pe_data_i[52],rx_pe_data_i[53],rx_pe_data_i[54],rx_pe_data_i[55],rx_pe_data_i[56],rx_pe_data_i[57],rx_pe_data_i[58],rx_pe_data_i[59],rx_pe_data_i[60],rx_pe_data_i[61],rx_pe_data_i[62],rx_pe_data_i[63],aurora_lane_0_i_n_68,aurora_lane_0_i_n_69,aurora_lane_0_i_n_70,aurora_lane_0_i_n_71,rx_sep_i,rx_sep7_i}),
        .SR(p_0_in),
        .got_cc_i(got_cc_i),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .m_axi_rx_tkeep(m_axi_rx_tkeep),
        .m_axi_rx_tlast(m_axi_rx_tlast),
        .m_axi_rx_tvalid(m_axi_rx_tvalid),
        .m_axi_rx_tvalid_reg(CHANNEL_UP_RX_IF_reg),
        .pipe1_rx_pdu_in_progress_c(\rx_ll_datapath_i/pipe1_rx_pdu_in_progress_c ),
        .\raw_data_r_reg[5] (\TX_PE_DATA_reg[0] ),
        .\raw_data_r_reg[5]_0 (aurora_lane_0_i_n_89),
        .\raw_data_r_reg[6] (aurora_lane_0_i_n_84),
        .\raw_data_r_reg[7] (aurora_lane_0_i_n_90),
        .\raw_data_r_reg[8] (aurora_lane_0_i_n_91),
        .\raw_data_r_reg[8]_0 (aurora_lane_0_i_n_92),
        .rx_pe_data_v_c(\rx_ll_datapath_i/rx_pe_data_v_c ),
        .rx_sep_c(\rx_ll_datapath_i/rx_sep_c ),
        .rxdatavalid_to_ll_i(rxdatavalid_to_ll_i));
  FDRE soft_err_reg
       (.C(\TX_PE_DATA_reg[0] ),
        .CE(1'b1),
        .D(global_logic_i_n_10),
        .Q(soft_err),
        .R(sys_reset_out));
  aurora_64b66b_SL_aurora_64b66b_SL_STANDARD_CC_MODULE standard_cc_module_i
       (.Q(do_cc_i),
        .SR(p_0_in),
        .\cc_count_r_reg[0]_0 (\TX_PE_DATA_reg[0] ),
        .\cc_count_r_reg[0]_1 (CHANNEL_UP_RX_IF_reg));
  aurora_64b66b_SL_aurora_64b66b_SL_TX_LL tx_ll_i
       (.CHANNEL_UP_TX_IF_reg(tx_ll_i_n_59),
        .CHANNEL_UP_TX_IF_reg_0(tx_ll_i_n_60),
        .CHANNEL_UP_TX_IF_reg_1(tx_ll_i_n_61),
        .GEN_SEP7_reg(global_logic_i_n_8),
        .GEN_SEP_reg(tx_ll_i_n_9),
        .Q({tx_pe_data_i[0],tx_pe_data_i[1],tx_pe_data_i[2],tx_pe_data_i[3],tx_pe_data_i[4],tx_pe_data_i[5],tx_pe_data_i[6],tx_pe_data_i[7],tx_pe_data_i[8],tx_pe_data_i[9],tx_pe_data_i[10],tx_pe_data_i[11],tx_pe_data_i[12],tx_pe_data_i[13],tx_pe_data_i[14],tx_pe_data_i[15],tx_pe_data_i[16],tx_pe_data_i[17],tx_pe_data_i[18],tx_pe_data_i[19],tx_pe_data_i[20],tx_pe_data_i[21],tx_pe_data_i[22],tx_pe_data_i[23],tx_pe_data_i[24],tx_pe_data_i[25],tx_pe_data_i[26],tx_pe_data_i[27],tx_pe_data_i[28],tx_pe_data_i[29],tx_pe_data_i[30],tx_pe_data_i[31],tx_pe_data_i[32],tx_pe_data_i[33],tx_pe_data_i[34],tx_pe_data_i[35],tx_pe_data_i[36],tx_pe_data_i[37],tx_pe_data_i[38],tx_pe_data_i[39],tx_pe_data_i[40],tx_pe_data_i[41],tx_pe_data_i[42],tx_pe_data_i[43],tx_pe_data_i[44],tx_pe_data_i[45],tx_pe_data_i[46],tx_pe_data_i[47]}),
        .R0(\tx_ll_control_sm_i/R0 ),
        .\SEP_NB_reg[0] (tx_ll_i_n_70),
        .\SEP_NB_reg[1] (tx_ll_i_n_69),
        .\SEP_NB_reg[2] (tx_ll_i_n_68),
        .\TX_DATA_reg[52] (aurora_lane_0_i_n_88),
        .\TX_DATA_reg[63] (global_logic_i_n_6),
        .TX_PE_DATA_V_reg(tx_ll_i_n_58),
        .TX_PE_DATA_V_reg_0(tx_ll_i_n_71),
        .TX_PE_DATA_V_reg_1(tx_ll_i_n_75),
        .\TX_PE_DATA_reg[0] (\TX_PE_DATA_reg[0] ),
        .\TX_PE_DATA_reg[52] (tx_ll_i_n_67),
        .\TX_PE_DATA_reg[57] (tx_ll_i_n_74),
        .channel_full_c(\tx_ll_control_sm_i/channel_full_c ),
        .channel_up_tx_if(channel_up_tx_if),
        .datavalid_pdu_reg(tx_ll_i_n_64),
        .do_cc_r_reg(do_cc_i),
        .gen_cc_flop({tx_ll_i_n_5,tx_ll_i_n_6,tx_ll_i_n_7,tx_ll_i_n_8}),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .gen_na_idles_i(gen_na_idles_i),
        .gen_sep7_i(gen_sep7_i),
        .gen_sep_i(gen_sep_i),
        .pdu_ok_c(\tx_ll_control_sm_i/pdu_ok_c ),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk ),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .s_axi_tx_tkeep(s_axi_tx_tkeep),
        .s_axi_tx_tkeep_0_sp_1(tx_ll_i_n_63),
        .s_axi_tx_tkeep_2_sp_1(tx_ll_i_n_65),
        .s_axi_tx_tkeep_3_sp_1(tx_ll_i_n_66),
        .s_axi_tx_tkeep_5_sp_1(tx_ll_i_n_62),
        .s_axi_tx_tlast(s_axi_tx_tlast),
        .s_axi_tx_tready_reg(s_axi_tx_tready_reg),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .tlast_txdv_coincide_r0(\tx_ll_control_sm_i/tlast_txdv_coincide_r0 ),
        .txdatavalid_i(txdatavalid_i),
        .wait_for_lane_up_r_reg(tx_ll_i_n_72),
        .wait_for_lane_up_r_reg_0(tx_ll_i_n_73));
endmodule

(* CHECK_LICENSE_TYPE = "aurora_64b66b_SL_fifo_gen_master,fifo_generator_v13_2_7,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "fifo_generator_v13_2_7,Vivado 2022.1" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_fifo_gen_master
   (srst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    overflow,
    empty,
    underflow,
    prog_full,
    prog_empty,
    wr_rst_busy,
    rd_rst_busy);
  input srst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [71:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [71:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output overflow;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output underflow;
  output prog_full;
  output prog_empty;
  output wr_rst_busy;
  output rd_rst_busy;

  wire \<const0> ;
  wire [71:0]din;
  wire [68:0]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire rd_clk;
  wire rd_en;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [71:66]NLW_U0_dout_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_U0_wr_data_count_UNCONNECTED;

  assign dout[71] = \<const0> ;
  assign dout[70] = \<const0> ;
  assign dout[69] = \<const0> ;
  assign dout[68] = \^dout [68];
  assign dout[67] = \<const0> ;
  assign dout[66] = \<const0> ;
  assign dout[65:0] = \^dout [65:0];
  assign prog_full = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "72" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "72" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "1" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "1" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "6" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "4" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "2" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "12" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "13" *) 
  (* C_PROG_EMPTY_TYPE = "1" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "450" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "449" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "1" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* is_du_within_envelope = "true" *) 
  aurora_64b66b_SL_fifo_generator_v13_2_7 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout({NLW_U0_dout_UNCONNECTED[71:69],\^dout }),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(underflow),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "aurora_64b66b_SL_gt,aurora_64b66b_SL_gt_gtwizard_top,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "aurora_64b66b_SL_gt_gtwizard_top,Vivado 2022.1" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_gt
   (gtwiz_userclk_tx_reset_in,
    gtwiz_userclk_tx_active_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_userdata_tx_in,
    gtwiz_userdata_rx_out,
    drpaddr_in,
    drpclk_in,
    drpdi_in,
    drpen_in,
    drpwe_in,
    eyescanreset_in,
    eyescantrigger_in,
    gtrefclk0_in,
    gtyrxn_in,
    gtyrxp_in,
    loopback_in,
    pcsrsvdin_in,
    rxbufreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxdfelpmreset_in,
    rxgearboxslip_in,
    rxlpmen_in,
    rxpcsreset_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprbssel_in,
    rxusrclk_in,
    rxusrclk2_in,
    txdiffctrl_in,
    txheader_in,
    txinhibit_in,
    txpcsreset_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursor_in,
    txprbsforceerr_in,
    txprbssel_in,
    txprecursor_in,
    txsequence_in,
    txusrclk_in,
    txusrclk2_in,
    cplllock_out,
    dmonitorout_out,
    drpdo_out,
    drprdy_out,
    eyescandataerror_out,
    gtpowergood_out,
    gtytxn_out,
    gtytxp_out,
    rxbufstatus_out,
    rxdatavalid_out,
    rxheader_out,
    rxheadervalid_out,
    rxoutclk_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxresetdone_out,
    rxstartofseq_out,
    txbufstatus_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txpmaresetdone_out,
    txresetdone_out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  input [0:0]gtwiz_userclk_tx_reset_in;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  input [63:0]gtwiz_userdata_tx_in;
  output [63:0]gtwiz_userdata_rx_out;
  input [9:0]drpaddr_in;
  input [0:0]drpclk_in;
  input [15:0]drpdi_in;
  input [0:0]drpen_in;
  input [0:0]drpwe_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]gtrefclk0_in;
  input [0:0]gtyrxn_in;
  input [0:0]gtyrxp_in;
  input [2:0]loopback_in;
  input [15:0]pcsrsvdin_in;
  input [0:0]rxbufreset_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxcdrovrden_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxpcsreset_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input [3:0]rxprbssel_in;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [4:0]txdiffctrl_in;
  input [5:0]txheader_in;
  input [0:0]txinhibit_in;
  input [0:0]txpcsreset_in;
  input [0:0]txpmareset_in;
  input [0:0]txpolarity_in;
  input [4:0]txpostcursor_in;
  input [0:0]txprbsforceerr_in;
  input [3:0]txprbssel_in;
  input [4:0]txprecursor_in;
  input [6:0]txsequence_in;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  output [0:0]cplllock_out;
  output [15:0]dmonitorout_out;
  output [15:0]drpdo_out;
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output [0:0]gtpowergood_out;
  output [0:0]gtytxn_out;
  output [0:0]gtytxp_out;
  output [2:0]rxbufstatus_out;
  output [1:0]rxdatavalid_out;
  output [5:0]rxheader_out;
  output [1:0]rxheadervalid_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxresetdone_out;
  output [1:0]rxstartofseq_out;
  output [1:0]txbufstatus_out;
  output [0:0]txoutclk_out;
  output [0:0]txoutclkfabric_out;
  output [0:0]txoutclkpcs_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txresetdone_out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire \<const0> ;
  wire [0:0]cplllock_out;
  wire [9:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire [0:0]drpwe_in;
  wire [0:0]gtpowergood_out;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [0:0]gtwiz_userclk_tx_reset_in;
  wire [63:0]gtwiz_userdata_rx_out;
  wire [63:0]gtwiz_userdata_tx_in;
  wire [0:0]gtyrxn_in;
  wire [0:0]gtyrxp_in;
  wire [0:0]gtytxn_out;
  wire [0:0]gtytxp_out;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire [2:2]\^rxbufstatus_out ;
  wire [0:0]rxcdrovrden_in;
  wire [0:0]\^rxdatavalid_out ;
  wire [0:0]rxgearboxslip_in;
  wire [1:0]\^rxheader_out ;
  wire [0:0]\^rxheadervalid_out ;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [1:1]\^txbufstatus_out ;
  wire [5:0]txheader_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txpmaresetdone_out;
  wire [6:0]txsequence_in;
  wire [0:0]txusrclk_in;
  wire [0:0]NLW_inst_bufgtce_out_UNCONNECTED;
  wire [2:0]NLW_inst_bufgtcemask_out_UNCONNECTED;
  wire [8:0]NLW_inst_bufgtdiv_out_UNCONNECTED;
  wire [0:0]NLW_inst_bufgtreset_out_UNCONNECTED;
  wire [2:0]NLW_inst_bufgtrstmask_out_UNCONNECTED;
  wire [0:0]NLW_inst_cpllfbclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_cpllrefclklost_out_UNCONNECTED;
  wire [15:0]NLW_inst_dmonitorout_out_UNCONNECTED;
  wire [0:0]NLW_inst_dmonitoroutclk_out_UNCONNECTED;
  wire [15:0]NLW_inst_drpdo_common_out_UNCONNECTED;
  wire [0:0]NLW_inst_drprdy_common_out_UNCONNECTED;
  wire [0:0]NLW_inst_eyescandataerror_out_UNCONNECTED;
  wire [0:0]NLW_inst_gthtxn_out_UNCONNECTED;
  wire [0:0]NLW_inst_gthtxp_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtrefclkmonitor_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_rx_done_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_rx_error_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_tx_done_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_tx_error_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_qpll0reset_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_qpll1reset_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_active_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_srcclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_usrclk2_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_usrclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_active_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_srcclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_usrclk2_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_usrclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcierategen3_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcierateidle_out_UNCONNECTED;
  wire [1:0]NLW_inst_pcierateqpllpd_out_UNCONNECTED;
  wire [1:0]NLW_inst_pcierateqpllreset_out_UNCONNECTED;
  wire [0:0]NLW_inst_pciesynctxsyncdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcieusergen3rdy_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcieuserphystatusrst_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcieuserratestart_out_UNCONNECTED;
  wire [15:0]NLW_inst_pcsrsvdout_out_UNCONNECTED;
  wire [0:0]NLW_inst_phystatus_out_UNCONNECTED;
  wire [15:0]NLW_inst_pinrsrvdas_out_UNCONNECTED;
  wire [7:0]NLW_inst_pmarsvdout0_out_UNCONNECTED;
  wire [7:0]NLW_inst_pmarsvdout1_out_UNCONNECTED;
  wire [0:0]NLW_inst_powerpresent_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0fbclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0lock_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0outclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0outrefclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0refclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1fbclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1lock_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1outclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1outrefclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1refclklost_out_UNCONNECTED;
  wire [7:0]NLW_inst_qplldmonitor0_out_UNCONNECTED;
  wire [7:0]NLW_inst_qplldmonitor1_out_UNCONNECTED;
  wire [0:0]NLW_inst_refclkoutmonitor0_out_UNCONNECTED;
  wire [0:0]NLW_inst_refclkoutmonitor1_out_UNCONNECTED;
  wire [0:0]NLW_inst_resetexception_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxbufstatus_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxbyteisaligned_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxbyterealign_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcdrlock_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcdrphdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxchanbondseq_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxchanisaligned_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxchanrealign_out_UNCONNECTED;
  wire [4:0]NLW_inst_rxchbondo_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxckcaldone_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxclkcorcnt_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcominitdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcommadet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcomsasdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcomwakedet_out_UNCONNECTED;
  wire [15:0]NLW_inst_rxctrl0_out_UNCONNECTED;
  wire [15:0]NLW_inst_rxctrl1_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxctrl2_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxctrl3_out_UNCONNECTED;
  wire [127:0]NLW_inst_rxdata_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxdataextendrsvd_out_UNCONNECTED;
  wire [1:1]NLW_inst_rxdatavalid_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxdlysresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxelecidle_out_UNCONNECTED;
  wire [5:2]NLW_inst_rxheader_out_UNCONNECTED;
  wire [1:1]NLW_inst_rxheadervalid_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxlfpstresetdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxlfpsu2lpexitdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxlfpsu3wakedet_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxmonitorout_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxosintdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxosintstarted_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxosintstrobedone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxosintstrobestarted_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxoutclkfabric_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxoutclkpcs_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxphaligndone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxphalignerr_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxprbserr_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxprbslocked_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxprgdivresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxqpisenn_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxqpisenp_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxratedone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclk0_sel_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxrecclk0sel_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclk1_sel_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxrecclk1sel_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclkout_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxsliderdy_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxslipdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxslipoutclkrdy_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxslippmardy_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxstartofseq_out_UNCONNECTED;
  wire [2:0]NLW_inst_rxstatus_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxsyncdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxsyncout_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxvalid_out_UNCONNECTED;
  wire [3:0]NLW_inst_sdm0finalout_out_UNCONNECTED;
  wire [14:0]NLW_inst_sdm0testdata_out_UNCONNECTED;
  wire [3:0]NLW_inst_sdm1finalout_out_UNCONNECTED;
  wire [14:0]NLW_inst_sdm1testdata_out_UNCONNECTED;
  wire [0:0]NLW_inst_tcongpo_out_UNCONNECTED;
  wire [0:0]NLW_inst_tconrsvdout0_out_UNCONNECTED;
  wire [0:0]NLW_inst_txbufstatus_out_UNCONNECTED;
  wire [0:0]NLW_inst_txcomfinish_out_UNCONNECTED;
  wire [0:0]NLW_inst_txdccdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txdlysresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txoutclkfabric_out_UNCONNECTED;
  wire [0:0]NLW_inst_txoutclkpcs_out_UNCONNECTED;
  wire [0:0]NLW_inst_txphaligndone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txphinitdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txprgdivresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txqpisenn_out_UNCONNECTED;
  wire [0:0]NLW_inst_txqpisenp_out_UNCONNECTED;
  wire [0:0]NLW_inst_txratedone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txsyncdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txsyncout_out_UNCONNECTED;
  wire [15:0]NLW_inst_ubdaddr_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubden_out_UNCONNECTED;
  wire [15:0]NLW_inst_ubdi_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubdwe_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubmdmtdo_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubrsvdout_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubtxuart_out_UNCONNECTED;

  assign dmonitorout_out[15] = \<const0> ;
  assign dmonitorout_out[14] = \<const0> ;
  assign dmonitorout_out[13] = \<const0> ;
  assign dmonitorout_out[12] = \<const0> ;
  assign dmonitorout_out[11] = \<const0> ;
  assign dmonitorout_out[10] = \<const0> ;
  assign dmonitorout_out[9] = \<const0> ;
  assign dmonitorout_out[8] = \<const0> ;
  assign dmonitorout_out[7] = \<const0> ;
  assign dmonitorout_out[6] = \<const0> ;
  assign dmonitorout_out[5] = \<const0> ;
  assign dmonitorout_out[4] = \<const0> ;
  assign dmonitorout_out[3] = \<const0> ;
  assign dmonitorout_out[2] = \<const0> ;
  assign dmonitorout_out[1] = \<const0> ;
  assign dmonitorout_out[0] = \<const0> ;
  assign eyescandataerror_out[0] = \<const0> ;
  assign gtwiz_reset_rx_cdr_stable_out[0] = \<const0> ;
  assign rxbufstatus_out[2] = \^rxbufstatus_out [2];
  assign rxbufstatus_out[1] = \<const0> ;
  assign rxbufstatus_out[0] = \<const0> ;
  assign rxdatavalid_out[1] = \<const0> ;
  assign rxdatavalid_out[0] = \^rxdatavalid_out [0];
  assign rxheader_out[5] = \<const0> ;
  assign rxheader_out[4] = \<const0> ;
  assign rxheader_out[3] = \<const0> ;
  assign rxheader_out[2] = \<const0> ;
  assign rxheader_out[1:0] = \^rxheader_out [1:0];
  assign rxheadervalid_out[1] = \<const0> ;
  assign rxheadervalid_out[0] = \^rxheadervalid_out [0];
  assign rxprbserr_out[0] = \<const0> ;
  assign rxresetdone_out[0] = \<const0> ;
  assign rxstartofseq_out[1] = \<const0> ;
  assign rxstartofseq_out[0] = \<const0> ;
  assign txbufstatus_out[1] = \^txbufstatus_out [1];
  assign txbufstatus_out[0] = \<const0> ;
  assign txoutclkfabric_out[0] = \<const0> ;
  assign txoutclkpcs_out[0] = \<const0> ;
  assign txresetdone_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_CHANNEL_ENABLE = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000" *) 
  (* C_COMMON_SCALING_FACTOR = "1" *) 
  (* C_CPLL_VCO_FREQUENCY = "2500.000000" *) 
  (* C_ENABLE_COMMON_USRCLK = "0" *) 
  (* C_FORCE_COMMONS = "0" *) 
  (* C_FREERUN_FREQUENCY = "14.999500" *) 
  (* C_GT_REV = "67" *) 
  (* C_GT_TYPE = "3" *) 
  (* C_INCLUDE_CPLL_CAL = "2" *) 
  (* C_LOCATE_COMMON = "0" *) 
  (* C_LOCATE_IN_SYSTEM_IBERT_CORE = "2" *) 
  (* C_LOCATE_RESET_CONTROLLER = "0" *) 
  (* C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER = "0" *) 
  (* C_LOCATE_RX_USER_CLOCKING = "1" *) 
  (* C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER = "0" *) 
  (* C_LOCATE_TX_USER_CLOCKING = "1" *) 
  (* C_LOCATE_USER_DATA_WIDTH_SIZING = "0" *) 
  (* C_PCIE_CORECLK_FREQ = "250" *) 
  (* C_PCIE_ENABLE = "0" *) 
  (* C_RESET_CONTROLLER_INSTANCE_CTRL = "0" *) 
  (* C_RESET_SEQUENCE_INTERVAL = "0" *) 
  (* C_RX_BUFFBYPASS_MODE = "0" *) 
  (* C_RX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
  (* C_RX_BUFFER_MODE = "1" *) 
  (* C_RX_CB_DISP = "8'b00000000" *) 
  (* C_RX_CB_K = "8'b00000000" *) 
  (* C_RX_CB_LEN_SEQ = "1" *) 
  (* C_RX_CB_MAX_LEVEL = "1" *) 
  (* C_RX_CB_NUM_SEQ = "0" *) 
  (* C_RX_CB_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_CC_DISP = "8'b00000000" *) 
  (* C_RX_CC_ENABLE = "0" *) 
  (* C_RX_CC_K = "8'b00000000" *) 
  (* C_RX_CC_LEN_SEQ = "1" *) 
  (* C_RX_CC_NUM_SEQ = "0" *) 
  (* C_RX_CC_PERIODICITY = "5000" *) 
  (* C_RX_CC_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_COMMA_M_ENABLE = "0" *) 
  (* C_RX_COMMA_M_VAL = "10'b1010000011" *) 
  (* C_RX_COMMA_P_ENABLE = "0" *) 
  (* C_RX_COMMA_P_VAL = "10'b0101111100" *) 
  (* C_RX_DATA_DECODING = "2" *) 
  (* C_RX_ENABLE = "1" *) 
  (* C_RX_INT_DATA_WIDTH = "64" *) 
  (* C_RX_LINE_RATE = "1.250000" *) 
  (* C_RX_MASTER_CHANNEL_IDX = "8" *) 
  (* C_RX_OUTCLK_BUFG_GT_DIV = "1" *) 
  (* C_RX_OUTCLK_FREQUENCY = "19.531250" *) 
  (* C_RX_OUTCLK_SOURCE = "1" *) 
  (* C_RX_PLL_TYPE = "2" *) 
  (* C_RX_RECCLK_OUTPUT = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_REFCLK_FREQUENCY = "156.250000" *) 
  (* C_RX_SLIDE_MODE = "0" *) 
  (* C_RX_USER_CLOCKING_CONTENTS = "0" *) 
  (* C_RX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
  (* C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) 
  (* C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
  (* C_RX_USER_CLOCKING_SOURCE = "0" *) 
  (* C_RX_USER_DATA_WIDTH = "64" *) 
  (* C_RX_USRCLK2_FREQUENCY = "19.531250" *) 
  (* C_RX_USRCLK_FREQUENCY = "19.531250" *) 
  (* C_SECONDARY_QPLL_ENABLE = "0" *) 
  (* C_SECONDARY_QPLL_REFCLK_FREQUENCY = "257.812500" *) 
  (* C_SIM_CPLL_CAL_BYPASS = "1" *) 
  (* C_TOTAL_NUM_CHANNELS = "1" *) 
  (* C_TOTAL_NUM_COMMONS = "0" *) 
  (* C_TOTAL_NUM_COMMONS_EXAMPLE = "0" *) 
  (* C_TXPROGDIV_FREQ_ENABLE = "0" *) 
  (* C_TXPROGDIV_FREQ_SOURCE = "2" *) 
  (* C_TXPROGDIV_FREQ_VAL = "19.531250" *) 
  (* C_TX_BUFFBYPASS_MODE = "0" *) 
  (* C_TX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
  (* C_TX_BUFFER_MODE = "1" *) 
  (* C_TX_DATA_ENCODING = "2" *) 
  (* C_TX_ENABLE = "1" *) 
  (* C_TX_INT_DATA_WIDTH = "64" *) 
  (* C_TX_LINE_RATE = "1.250000" *) 
  (* C_TX_MASTER_CHANNEL_IDX = "8" *) 
  (* C_TX_OUTCLK_BUFG_GT_DIV = "1" *) 
  (* C_TX_OUTCLK_FREQUENCY = "19.531250" *) 
  (* C_TX_OUTCLK_SOURCE = "1" *) 
  (* C_TX_PLL_TYPE = "2" *) 
  (* C_TX_REFCLK_FREQUENCY = "156.250000" *) 
  (* C_TX_USER_CLOCKING_CONTENTS = "0" *) 
  (* C_TX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
  (* C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) 
  (* C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
  (* C_TX_USER_CLOCKING_SOURCE = "0" *) 
  (* C_TX_USER_DATA_WIDTH = "64" *) 
  (* C_TX_USRCLK2_FREQUENCY = "19.531250" *) 
  (* C_TX_USRCLK_FREQUENCY = "19.531250" *) 
  (* C_USER_GTPOWERGOOD_DELAY_EN = "1" *) 
  aurora_64b66b_SL_aurora_64b66b_SL_gt_gtwizard_top inst
       (.bgbypassb_in(1'b1),
        .bgmonitorenb_in(1'b1),
        .bgpdb_in(1'b1),
        .bgrcalovrd_in({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .bgrcalovrdenb_in(1'b1),
        .bufgtce_out(NLW_inst_bufgtce_out_UNCONNECTED[0]),
        .bufgtcemask_out(NLW_inst_bufgtcemask_out_UNCONNECTED[2:0]),
        .bufgtdiv_out(NLW_inst_bufgtdiv_out_UNCONNECTED[8:0]),
        .bufgtreset_out(NLW_inst_bufgtreset_out_UNCONNECTED[0]),
        .bufgtrstmask_out(NLW_inst_bufgtrstmask_out_UNCONNECTED[2:0]),
        .cdrstepdir_in(1'b0),
        .cdrstepsq_in(1'b0),
        .cdrstepsx_in(1'b0),
        .cfgreset_in(1'b0),
        .clkrsvd0_in(1'b0),
        .clkrsvd1_in(1'b0),
        .cpllfbclklost_out(NLW_inst_cpllfbclklost_out_UNCONNECTED[0]),
        .cpllfreqlock_in(1'b0),
        .cplllock_out(cplllock_out),
        .cplllockdetclk_in(1'b0),
        .cplllocken_in(1'b1),
        .cpllpd_in(1'b0),
        .cpllrefclklost_out(NLW_inst_cpllrefclklost_out_UNCONNECTED[0]),
        .cpllrefclksel_in({1'b0,1'b0,1'b1}),
        .cpllreset_in(1'b0),
        .dmonfiforeset_in(1'b0),
        .dmonitorclk_in(1'b0),
        .dmonitorout_out(NLW_inst_dmonitorout_out_UNCONNECTED[15:0]),
        .dmonitoroutclk_out(NLW_inst_dmonitoroutclk_out_UNCONNECTED[0]),
        .drpaddr_common_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpaddr_in(drpaddr_in),
        .drpclk_common_in(1'b0),
        .drpclk_in(drpclk_in),
        .drpdi_common_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpdi_in(drpdi_in),
        .drpdo_common_out(NLW_inst_drpdo_common_out_UNCONNECTED[15:0]),
        .drpdo_out(drpdo_out),
        .drpen_common_in(1'b0),
        .drpen_in(drpen_in),
        .drprdy_common_out(NLW_inst_drprdy_common_out_UNCONNECTED[0]),
        .drprdy_out(drprdy_out),
        .drprst_in(1'b0),
        .drpwe_common_in(1'b0),
        .drpwe_in(drpwe_in),
        .elpcaldvorwren_in(1'b0),
        .elpcalpaorwren_in(1'b0),
        .evoddphicaldone_in(1'b0),
        .evoddphicalstart_in(1'b0),
        .evoddphidrden_in(1'b0),
        .evoddphidwren_in(1'b0),
        .evoddphixrden_in(1'b0),
        .evoddphixwren_in(1'b0),
        .eyescandataerror_out(NLW_inst_eyescandataerror_out_UNCONNECTED[0]),
        .eyescanmode_in(1'b0),
        .eyescanreset_in(1'b0),
        .eyescantrigger_in(1'b0),
        .freqos_in(1'b0),
        .gtgrefclk0_in(1'b0),
        .gtgrefclk1_in(1'b0),
        .gtgrefclk_in(1'b0),
        .gthrxn_in(1'b0),
        .gthrxp_in(1'b0),
        .gthtxn_out(NLW_inst_gthtxn_out_UNCONNECTED[0]),
        .gthtxp_out(NLW_inst_gthtxp_out_UNCONNECTED[0]),
        .gtnorthrefclk00_in(1'b0),
        .gtnorthrefclk01_in(1'b0),
        .gtnorthrefclk0_in(1'b0),
        .gtnorthrefclk10_in(1'b0),
        .gtnorthrefclk11_in(1'b0),
        .gtnorthrefclk1_in(1'b0),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk00_in(1'b0),
        .gtrefclk01_in(1'b0),
        .gtrefclk0_in(gtrefclk0_in),
        .gtrefclk10_in(1'b0),
        .gtrefclk11_in(1'b0),
        .gtrefclk1_in(1'b0),
        .gtrefclkmonitor_out(NLW_inst_gtrefclkmonitor_out_UNCONNECTED[0]),
        .gtresetsel_in(1'b0),
        .gtrsvd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtrxreset_in(1'b0),
        .gtrxresetsel_in(1'b0),
        .gtsouthrefclk00_in(1'b0),
        .gtsouthrefclk01_in(1'b0),
        .gtsouthrefclk0_in(1'b0),
        .gtsouthrefclk10_in(1'b0),
        .gtsouthrefclk11_in(1'b0),
        .gtsouthrefclk1_in(1'b0),
        .gttxreset_in(1'b0),
        .gttxresetsel_in(1'b0),
        .gtwiz_buffbypass_rx_done_out(NLW_inst_gtwiz_buffbypass_rx_done_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_rx_error_out(NLW_inst_gtwiz_buffbypass_rx_error_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_rx_reset_in(1'b0),
        .gtwiz_buffbypass_rx_start_user_in(1'b0),
        .gtwiz_buffbypass_tx_done_out(NLW_inst_gtwiz_buffbypass_tx_done_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_tx_error_out(NLW_inst_gtwiz_buffbypass_tx_error_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_tx_reset_in(1'b0),
        .gtwiz_buffbypass_tx_start_user_in(1'b0),
        .gtwiz_gthe3_cpll_cal_bufg_ce_in(1'b0),
        .gtwiz_gthe3_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe3_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe4_cpll_cal_bufg_ce_in(1'b0),
        .gtwiz_gthe4_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe4_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gtye4_cpll_cal_bufg_ce_in(1'b0),
        .gtwiz_gtye4_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gtye4_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_reset_all_in(1'b0),
        .gtwiz_reset_clk_freerun_in(1'b0),
        .gtwiz_reset_qpll0lock_in(1'b0),
        .gtwiz_reset_qpll0reset_out(NLW_inst_gtwiz_reset_qpll0reset_out_UNCONNECTED[0]),
        .gtwiz_reset_qpll1lock_in(1'b0),
        .gtwiz_reset_qpll1reset_out(NLW_inst_gtwiz_reset_qpll1reset_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_cdr_stable_out(NLW_inst_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_in(1'b0),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_datapath_in(1'b0),
        .gtwiz_reset_tx_done_in(1'b0),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(1'b0),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_rx_active_out(NLW_inst_gtwiz_userclk_rx_active_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_reset_in(1'b0),
        .gtwiz_userclk_rx_srcclk_out(NLW_inst_gtwiz_userclk_rx_srcclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_usrclk2_out(NLW_inst_gtwiz_userclk_rx_usrclk2_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_usrclk_out(NLW_inst_gtwiz_userclk_rx_usrclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .gtwiz_userclk_tx_active_out(NLW_inst_gtwiz_userclk_tx_active_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_reset_in(gtwiz_userclk_tx_reset_in),
        .gtwiz_userclk_tx_srcclk_out(NLW_inst_gtwiz_userclk_tx_srcclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_usrclk2_out(NLW_inst_gtwiz_userclk_tx_usrclk2_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_usrclk_out(NLW_inst_gtwiz_userclk_tx_usrclk_out_UNCONNECTED[0]),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .incpctrl_in(1'b0),
        .loopback_in(loopback_in),
        .looprsvd_in(1'b0),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lpbkrxtxseren_in(1'b0),
        .lpbktxrxseren_in(1'b0),
        .pcieeqrxeqadaptdone_in(1'b0),
        .pcierategen3_out(NLW_inst_pcierategen3_out_UNCONNECTED[0]),
        .pcierateidle_out(NLW_inst_pcierateidle_out_UNCONNECTED[0]),
        .pcierateqpll0_in({1'b0,1'b0,1'b0}),
        .pcierateqpll1_in({1'b0,1'b0,1'b0}),
        .pcierateqpllpd_out(NLW_inst_pcierateqpllpd_out_UNCONNECTED[1:0]),
        .pcierateqpllreset_out(NLW_inst_pcierateqpllreset_out_UNCONNECTED[1:0]),
        .pcierstidle_in(1'b0),
        .pciersttxsyncstart_in(1'b0),
        .pciesynctxsyncdone_out(NLW_inst_pciesynctxsyncdone_out_UNCONNECTED[0]),
        .pcieusergen3rdy_out(NLW_inst_pcieusergen3rdy_out_UNCONNECTED[0]),
        .pcieuserphystatusrst_out(NLW_inst_pcieuserphystatusrst_out_UNCONNECTED[0]),
        .pcieuserratedone_in(1'b0),
        .pcieuserratestart_out(NLW_inst_pcieuserratestart_out_UNCONNECTED[0]),
        .pcsrsvdin2_in(1'b0),
        .pcsrsvdin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pcsrsvdout_out(NLW_inst_pcsrsvdout_out_UNCONNECTED[15:0]),
        .phystatus_out(NLW_inst_phystatus_out_UNCONNECTED[0]),
        .pinrsrvdas_out(NLW_inst_pinrsrvdas_out_UNCONNECTED[15:0]),
        .pmarsvd0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pmarsvd1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pmarsvdin_in(1'b0),
        .pmarsvdout0_out(NLW_inst_pmarsvdout0_out_UNCONNECTED[7:0]),
        .pmarsvdout1_out(NLW_inst_pmarsvdout1_out_UNCONNECTED[7:0]),
        .powerpresent_out(NLW_inst_powerpresent_out_UNCONNECTED[0]),
        .qpll0clk_in(1'b0),
        .qpll0clkrsvd0_in(1'b0),
        .qpll0clkrsvd1_in(1'b0),
        .qpll0fbclklost_out(NLW_inst_qpll0fbclklost_out_UNCONNECTED[0]),
        .qpll0fbdiv_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll0freqlock_in(1'b0),
        .qpll0lock_out(NLW_inst_qpll0lock_out_UNCONNECTED[0]),
        .qpll0lockdetclk_in(1'b0),
        .qpll0locken_in(1'b0),
        .qpll0outclk_out(NLW_inst_qpll0outclk_out_UNCONNECTED[0]),
        .qpll0outrefclk_out(NLW_inst_qpll0outrefclk_out_UNCONNECTED[0]),
        .qpll0pd_in(1'b1),
        .qpll0refclk_in(1'b0),
        .qpll0refclklost_out(NLW_inst_qpll0refclklost_out_UNCONNECTED[0]),
        .qpll0refclksel_in({1'b0,1'b0,1'b1}),
        .qpll0reset_in(1'b1),
        .qpll1clk_in(1'b0),
        .qpll1clkrsvd0_in(1'b0),
        .qpll1clkrsvd1_in(1'b0),
        .qpll1fbclklost_out(NLW_inst_qpll1fbclklost_out_UNCONNECTED[0]),
        .qpll1fbdiv_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll1freqlock_in(1'b0),
        .qpll1lock_out(NLW_inst_qpll1lock_out_UNCONNECTED[0]),
        .qpll1lockdetclk_in(1'b0),
        .qpll1locken_in(1'b0),
        .qpll1outclk_out(NLW_inst_qpll1outclk_out_UNCONNECTED[0]),
        .qpll1outrefclk_out(NLW_inst_qpll1outrefclk_out_UNCONNECTED[0]),
        .qpll1pd_in(1'b1),
        .qpll1refclk_in(1'b0),
        .qpll1refclklost_out(NLW_inst_qpll1refclklost_out_UNCONNECTED[0]),
        .qpll1refclksel_in({1'b0,1'b0,1'b1}),
        .qpll1reset_in(1'b1),
        .qplldmonitor0_out(NLW_inst_qplldmonitor0_out_UNCONNECTED[7:0]),
        .qplldmonitor1_out(NLW_inst_qplldmonitor1_out_UNCONNECTED[7:0]),
        .qpllrsvd1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd2_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd3_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd4_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rcalenb_in(1'b1),
        .refclkoutmonitor0_out(NLW_inst_refclkoutmonitor0_out_UNCONNECTED[0]),
        .refclkoutmonitor1_out(NLW_inst_refclkoutmonitor1_out_UNCONNECTED[0]),
        .resetexception_out(NLW_inst_resetexception_out_UNCONNECTED[0]),
        .resetovrd_in(1'b0),
        .rstclkentx_in(1'b0),
        .rx8b10ben_in(1'b0),
        .rxafecfoken_in(1'b1),
        .rxbufreset_in(1'b0),
        .rxbufstatus_out({\^rxbufstatus_out ,NLW_inst_rxbufstatus_out_UNCONNECTED[1:0]}),
        .rxbyteisaligned_out(NLW_inst_rxbyteisaligned_out_UNCONNECTED[0]),
        .rxbyterealign_out(NLW_inst_rxbyterealign_out_UNCONNECTED[0]),
        .rxcdrfreqreset_in(1'b0),
        .rxcdrhold_in(1'b0),
        .rxcdrlock_out(NLW_inst_rxcdrlock_out_UNCONNECTED[0]),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxcdrphdone_out(NLW_inst_rxcdrphdone_out_UNCONNECTED[0]),
        .rxcdrreset_in(1'b0),
        .rxcdrresetrsv_in(1'b0),
        .rxchanbondseq_out(NLW_inst_rxchanbondseq_out_UNCONNECTED[0]),
        .rxchanisaligned_out(NLW_inst_rxchanisaligned_out_UNCONNECTED[0]),
        .rxchanrealign_out(NLW_inst_rxchanrealign_out_UNCONNECTED[0]),
        .rxchbonden_in(1'b0),
        .rxchbondi_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxchbondlevel_in({1'b0,1'b0,1'b0}),
        .rxchbondmaster_in(1'b0),
        .rxchbondo_out(NLW_inst_rxchbondo_out_UNCONNECTED[4:0]),
        .rxchbondslave_in(1'b0),
        .rxckcaldone_out(NLW_inst_rxckcaldone_out_UNCONNECTED[0]),
        .rxckcalreset_in(1'b0),
        .rxckcalstart_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxclkcorcnt_out(NLW_inst_rxclkcorcnt_out_UNCONNECTED[1:0]),
        .rxcominitdet_out(NLW_inst_rxcominitdet_out_UNCONNECTED[0]),
        .rxcommadet_out(NLW_inst_rxcommadet_out_UNCONNECTED[0]),
        .rxcommadeten_in(1'b0),
        .rxcomsasdet_out(NLW_inst_rxcomsasdet_out_UNCONNECTED[0]),
        .rxcomwakedet_out(NLW_inst_rxcomwakedet_out_UNCONNECTED[0]),
        .rxctrl0_out(NLW_inst_rxctrl0_out_UNCONNECTED[15:0]),
        .rxctrl1_out(NLW_inst_rxctrl1_out_UNCONNECTED[15:0]),
        .rxctrl2_out(NLW_inst_rxctrl2_out_UNCONNECTED[7:0]),
        .rxctrl3_out(NLW_inst_rxctrl3_out_UNCONNECTED[7:0]),
        .rxdata_out(NLW_inst_rxdata_out_UNCONNECTED[127:0]),
        .rxdataextendrsvd_out(NLW_inst_rxdataextendrsvd_out_UNCONNECTED[7:0]),
        .rxdatavalid_out({NLW_inst_rxdatavalid_out_UNCONNECTED[1],\^rxdatavalid_out }),
        .rxdccforcestart_in(1'b0),
        .rxdfeagcctrl_in(1'b0),
        .rxdfeagchold_in(1'b0),
        .rxdfeagcovrden_in(1'b0),
        .rxdfecfokfcnum_in({1'b1,1'b1,1'b0,1'b1}),
        .rxdfecfokfen_in(1'b0),
        .rxdfecfokfpulse_in(1'b0),
        .rxdfecfokhold_in(1'b0),
        .rxdfecfokovren_in(1'b0),
        .rxdfekhhold_in(1'b0),
        .rxdfekhovrden_in(1'b0),
        .rxdfelfhold_in(1'b0),
        .rxdfelfovrden_in(1'b0),
        .rxdfelpmreset_in(1'b0),
        .rxdfetap10hold_in(1'b0),
        .rxdfetap10ovrden_in(1'b0),
        .rxdfetap11hold_in(1'b0),
        .rxdfetap11ovrden_in(1'b0),
        .rxdfetap12hold_in(1'b0),
        .rxdfetap12ovrden_in(1'b0),
        .rxdfetap13hold_in(1'b0),
        .rxdfetap13ovrden_in(1'b0),
        .rxdfetap14hold_in(1'b0),
        .rxdfetap14ovrden_in(1'b0),
        .rxdfetap15hold_in(1'b0),
        .rxdfetap15ovrden_in(1'b0),
        .rxdfetap2hold_in(1'b0),
        .rxdfetap2ovrden_in(1'b0),
        .rxdfetap3hold_in(1'b0),
        .rxdfetap3ovrden_in(1'b0),
        .rxdfetap4hold_in(1'b0),
        .rxdfetap4ovrden_in(1'b0),
        .rxdfetap5hold_in(1'b0),
        .rxdfetap5ovrden_in(1'b0),
        .rxdfetap6hold_in(1'b0),
        .rxdfetap6ovrden_in(1'b0),
        .rxdfetap7hold_in(1'b0),
        .rxdfetap7ovrden_in(1'b0),
        .rxdfetap8hold_in(1'b0),
        .rxdfetap8ovrden_in(1'b0),
        .rxdfetap9hold_in(1'b0),
        .rxdfetap9ovrden_in(1'b0),
        .rxdfeuthold_in(1'b0),
        .rxdfeutovrden_in(1'b0),
        .rxdfevphold_in(1'b0),
        .rxdfevpovrden_in(1'b0),
        .rxdfevsen_in(1'b0),
        .rxdfexyden_in(1'b1),
        .rxdlybypass_in(1'b1),
        .rxdlyen_in(1'b0),
        .rxdlyovrden_in(1'b0),
        .rxdlysreset_in(1'b0),
        .rxdlysresetdone_out(NLW_inst_rxdlysresetdone_out_UNCONNECTED[0]),
        .rxelecidle_out(NLW_inst_rxelecidle_out_UNCONNECTED[0]),
        .rxelecidlemode_in({1'b1,1'b1}),
        .rxeqtraining_in(1'b0),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out({NLW_inst_rxheader_out_UNCONNECTED[5:2],\^rxheader_out }),
        .rxheadervalid_out({NLW_inst_rxheadervalid_out_UNCONNECTED[1],\^rxheadervalid_out }),
        .rxlatclk_in(1'b0),
        .rxlfpstresetdet_out(NLW_inst_rxlfpstresetdet_out_UNCONNECTED[0]),
        .rxlfpsu2lpexitdet_out(NLW_inst_rxlfpsu2lpexitdet_out_UNCONNECTED[0]),
        .rxlfpsu3wakedet_out(NLW_inst_rxlfpsu3wakedet_out_UNCONNECTED[0]),
        .rxlpmen_in(1'b0),
        .rxlpmgchold_in(1'b0),
        .rxlpmgcovrden_in(1'b0),
        .rxlpmhfhold_in(1'b0),
        .rxlpmhfovrden_in(1'b0),
        .rxlpmlfhold_in(1'b0),
        .rxlpmlfklovrden_in(1'b0),
        .rxlpmoshold_in(1'b0),
        .rxlpmosovrden_in(1'b0),
        .rxmcommaalignen_in(1'b0),
        .rxmonitorout_out(NLW_inst_rxmonitorout_out_UNCONNECTED[7:0]),
        .rxmonitorsel_in({1'b0,1'b0}),
        .rxoobreset_in(1'b0),
        .rxoscalreset_in(1'b0),
        .rxoshold_in(1'b0),
        .rxosintcfg_in(1'b0),
        .rxosintdone_out(NLW_inst_rxosintdone_out_UNCONNECTED[0]),
        .rxosinten_in(1'b0),
        .rxosinthold_in(1'b0),
        .rxosintovrden_in(1'b0),
        .rxosintstarted_out(NLW_inst_rxosintstarted_out_UNCONNECTED[0]),
        .rxosintstrobe_in(1'b0),
        .rxosintstrobedone_out(NLW_inst_rxosintstrobedone_out_UNCONNECTED[0]),
        .rxosintstrobestarted_out(NLW_inst_rxosintstrobestarted_out_UNCONNECTED[0]),
        .rxosinttestovrden_in(1'b0),
        .rxosovrden_in(1'b0),
        .rxoutclk_out(rxoutclk_out),
        .rxoutclkfabric_out(NLW_inst_rxoutclkfabric_out_UNCONNECTED[0]),
        .rxoutclkpcs_out(NLW_inst_rxoutclkpcs_out_UNCONNECTED[0]),
        .rxoutclksel_in({1'b0,1'b1,1'b0}),
        .rxpcommaalignen_in(1'b0),
        .rxpcsreset_in(1'b0),
        .rxpd_in({1'b0,1'b0}),
        .rxphalign_in(1'b0),
        .rxphaligndone_out(NLW_inst_rxphaligndone_out_UNCONNECTED[0]),
        .rxphalignen_in(1'b0),
        .rxphalignerr_out(NLW_inst_rxphalignerr_out_UNCONNECTED[0]),
        .rxphdlypd_in(1'b1),
        .rxphdlyreset_in(1'b0),
        .rxphovrden_in(1'b0),
        .rxpllclksel_in({1'b0,1'b0}),
        .rxpmareset_in(1'b0),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in(1'b0),
        .rxprbserr_out(NLW_inst_rxprbserr_out_UNCONNECTED[0]),
        .rxprbslocked_out(NLW_inst_rxprbslocked_out_UNCONNECTED[0]),
        .rxprbssel_in({1'b0,1'b0,1'b0,1'b0}),
        .rxprgdivresetdone_out(NLW_inst_rxprgdivresetdone_out_UNCONNECTED[0]),
        .rxprogdivreset_in(1'b0),
        .rxqpien_in(1'b0),
        .rxqpisenn_out(NLW_inst_rxqpisenn_out_UNCONNECTED[0]),
        .rxqpisenp_out(NLW_inst_rxqpisenp_out_UNCONNECTED[0]),
        .rxrate_in({1'b0,1'b0,1'b0}),
        .rxratedone_out(NLW_inst_rxratedone_out_UNCONNECTED[0]),
        .rxratemode_in(1'b0),
        .rxrecclk0_sel_out(NLW_inst_rxrecclk0_sel_out_UNCONNECTED[0]),
        .rxrecclk0sel_out(NLW_inst_rxrecclk0sel_out_UNCONNECTED[1:0]),
        .rxrecclk1_sel_out(NLW_inst_rxrecclk1_sel_out_UNCONNECTED[0]),
        .rxrecclk1sel_out(NLW_inst_rxrecclk1sel_out_UNCONNECTED[1:0]),
        .rxrecclkout_out(NLW_inst_rxrecclkout_out_UNCONNECTED[0]),
        .rxresetdone_out(NLW_inst_rxresetdone_out_UNCONNECTED[0]),
        .rxslide_in(1'b0),
        .rxsliderdy_out(NLW_inst_rxsliderdy_out_UNCONNECTED[0]),
        .rxslipdone_out(NLW_inst_rxslipdone_out_UNCONNECTED[0]),
        .rxslipoutclk_in(1'b0),
        .rxslipoutclkrdy_out(NLW_inst_rxslipoutclkrdy_out_UNCONNECTED[0]),
        .rxslippma_in(1'b0),
        .rxslippmardy_out(NLW_inst_rxslippmardy_out_UNCONNECTED[0]),
        .rxstartofseq_out(NLW_inst_rxstartofseq_out_UNCONNECTED[1:0]),
        .rxstatus_out(NLW_inst_rxstatus_out_UNCONNECTED[2:0]),
        .rxsyncallin_in(1'b0),
        .rxsyncdone_out(NLW_inst_rxsyncdone_out_UNCONNECTED[0]),
        .rxsyncin_in(1'b0),
        .rxsyncmode_in(1'b0),
        .rxsyncout_out(NLW_inst_rxsyncout_out_UNCONNECTED[0]),
        .rxsysclksel_in({1'b0,1'b0}),
        .rxtermination_in(1'b0),
        .rxuserrdy_in(1'b1),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .rxvalid_out(NLW_inst_rxvalid_out_UNCONNECTED[0]),
        .sdm0data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sdm0finalout_out(NLW_inst_sdm0finalout_out_UNCONNECTED[3:0]),
        .sdm0reset_in(1'b0),
        .sdm0testdata_out(NLW_inst_sdm0testdata_out_UNCONNECTED[14:0]),
        .sdm0toggle_in(1'b0),
        .sdm0width_in({1'b0,1'b0}),
        .sdm1data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sdm1finalout_out(NLW_inst_sdm1finalout_out_UNCONNECTED[3:0]),
        .sdm1reset_in(1'b0),
        .sdm1testdata_out(NLW_inst_sdm1testdata_out_UNCONNECTED[14:0]),
        .sdm1toggle_in(1'b0),
        .sdm1width_in({1'b0,1'b0}),
        .sigvalidclk_in(1'b0),
        .tcongpi_in(1'b0),
        .tcongpo_out(NLW_inst_tcongpo_out_UNCONNECTED[0]),
        .tconpowerup_in(1'b0),
        .tconreset_in(1'b0),
        .tconrsvdin1_in(1'b0),
        .tconrsvdout0_out(NLW_inst_tconrsvdout0_out_UNCONNECTED[0]),
        .tstin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx8b10bbypass_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx8b10ben_in(1'b0),
        .txbufdiffctrl_in(1'b0),
        .txbufstatus_out({\^txbufstatus_out ,NLW_inst_txbufstatus_out_UNCONNECTED[0]}),
        .txcomfinish_out(NLW_inst_txcomfinish_out_UNCONNECTED[0]),
        .txcominit_in(1'b0),
        .txcomsas_in(1'b0),
        .txcomwake_in(1'b0),
        .txctrl0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txctrl1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txctrl2_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdata_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdataextendrsvd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdccdone_out(NLW_inst_txdccdone_out_UNCONNECTED[0]),
        .txdccforcestart_in(1'b0),
        .txdccreset_in(1'b0),
        .txdeemph_in({1'b0,1'b0}),
        .txdetectrx_in(1'b0),
        .txdiffctrl_in({1'b0,1'b1,1'b0,1'b0,1'b0}),
        .txdiffpd_in(1'b0),
        .txdlybypass_in(1'b1),
        .txdlyen_in(1'b0),
        .txdlyhold_in(1'b0),
        .txdlyovrden_in(1'b0),
        .txdlysreset_in(1'b0),
        .txdlysresetdone_out(NLW_inst_txdlysresetdone_out_UNCONNECTED[0]),
        .txdlyupdown_in(1'b0),
        .txelecidle_in(1'b0),
        .txelforcestart_in(1'b0),
        .txheader_in({1'b0,1'b0,1'b0,1'b0,txheader_in[1:0]}),
        .txinhibit_in(1'b0),
        .txlatclk_in(1'b0),
        .txlfpstreset_in(1'b0),
        .txlfpsu2lpexit_in(1'b0),
        .txlfpsu3wake_in(1'b0),
        .txmaincursor_in({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .txmargin_in({1'b0,1'b0,1'b0}),
        .txmuxdcdexhold_in(1'b0),
        .txmuxdcdorwren_in(1'b0),
        .txoneszeros_in(1'b0),
        .txoutclk_out(txoutclk_out),
        .txoutclkfabric_out(NLW_inst_txoutclkfabric_out_UNCONNECTED[0]),
        .txoutclkpcs_out(NLW_inst_txoutclkpcs_out_UNCONNECTED[0]),
        .txoutclksel_in({1'b0,1'b1,1'b0}),
        .txpcsreset_in(1'b0),
        .txpd_in({1'b0,1'b0}),
        .txpdelecidlemode_in(1'b0),
        .txphalign_in(1'b0),
        .txphaligndone_out(NLW_inst_txphaligndone_out_UNCONNECTED[0]),
        .txphalignen_in(1'b0),
        .txphdlypd_in(1'b1),
        .txphdlyreset_in(1'b0),
        .txphdlytstclk_in(1'b0),
        .txphinit_in(1'b0),
        .txphinitdone_out(NLW_inst_txphinitdone_out_UNCONNECTED[0]),
        .txphovrden_in(1'b0),
        .txpippmen_in(1'b0),
        .txpippmovrden_in(1'b0),
        .txpippmpd_in(1'b0),
        .txpippmsel_in(1'b1),
        .txpippmstepsize_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpisopd_in(1'b0),
        .txpllclksel_in({1'b0,1'b0}),
        .txpmareset_in(1'b0),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(1'b0),
        .txpostcursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpostcursorinv_in(1'b0),
        .txprbsforceerr_in(1'b0),
        .txprbssel_in({1'b0,1'b0,1'b0,1'b0}),
        .txprecursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprecursorinv_in(1'b0),
        .txprgdivresetdone_out(NLW_inst_txprgdivresetdone_out_UNCONNECTED[0]),
        .txprogdivreset_in(1'b0),
        .txqpibiasen_in(1'b0),
        .txqpisenn_out(NLW_inst_txqpisenn_out_UNCONNECTED[0]),
        .txqpisenp_out(NLW_inst_txqpisenp_out_UNCONNECTED[0]),
        .txqpistrongpdown_in(1'b0),
        .txqpiweakpup_in(1'b0),
        .txrate_in({1'b0,1'b0,1'b0}),
        .txratedone_out(NLW_inst_txratedone_out_UNCONNECTED[0]),
        .txratemode_in(1'b0),
        .txresetdone_out(NLW_inst_txresetdone_out_UNCONNECTED[0]),
        .txsequence_in(txsequence_in),
        .txswing_in(1'b0),
        .txsyncallin_in(1'b0),
        .txsyncdone_out(NLW_inst_txsyncdone_out_UNCONNECTED[0]),
        .txsyncin_in(1'b0),
        .txsyncmode_in(1'b0),
        .txsyncout_out(NLW_inst_txsyncout_out_UNCONNECTED[0]),
        .txsysclksel_in({1'b0,1'b0}),
        .txuserrdy_in(1'b1),
        .txusrclk2_in(1'b0),
        .txusrclk_in(txusrclk_in),
        .ubcfgstreamen_in(1'b0),
        .ubdaddr_out(NLW_inst_ubdaddr_out_UNCONNECTED[15:0]),
        .ubden_out(NLW_inst_ubden_out_UNCONNECTED[0]),
        .ubdi_out(NLW_inst_ubdi_out_UNCONNECTED[15:0]),
        .ubdo_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ubdrdy_in(1'b0),
        .ubdwe_out(NLW_inst_ubdwe_out_UNCONNECTED[0]),
        .ubenable_in(1'b0),
        .ubgpi_in({1'b0,1'b0}),
        .ubintr_in({1'b0,1'b0}),
        .ubiolmbrst_in(1'b0),
        .ubmbrst_in(1'b0),
        .ubmdmcapture_in(1'b0),
        .ubmdmdbgrst_in(1'b0),
        .ubmdmdbgupdate_in(1'b0),
        .ubmdmregen_in({1'b0,1'b0,1'b0,1'b0}),
        .ubmdmshift_in(1'b0),
        .ubmdmsysrst_in(1'b0),
        .ubmdmtck_in(1'b0),
        .ubmdmtdi_in(1'b0),
        .ubmdmtdo_out(NLW_inst_ubmdmtdo_out_UNCONNECTED[0]),
        .ubrsvdout_out(NLW_inst_ubrsvdout_out_UNCONNECTED[0]),
        .ubtxuart_out(NLW_inst_ubtxuart_out_UNCONNECTED[0]));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_gt_gtwizard_gtye4
   (gtytxn_out,
    gtytxp_out,
    rxoutclk_out,
    rxpmaresetdone_out,
    txoutclk_out,
    txpmaresetdone_out,
    gtwiz_userdata_rx_out,
    rxdatavalid_out,
    rxheadervalid_out,
    txbufstatus_out,
    rxbufstatus_out,
    rxheader_out,
    drpdo_out,
    drprdy_out,
    gtpowergood_out,
    cplllock_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    drpaddr_in,
    drpdi_in,
    drpclk_in,
    gtrefclk0_in,
    gtyrxn_in,
    gtyrxp_in,
    rxcdrovrden_in,
    rxgearboxslip_in,
    rxpolarity_in,
    rxusrclk_in,
    rxusrclk2_in,
    txusrclk_in,
    gtwiz_userdata_tx_in,
    loopback_in,
    txheader_in,
    txsequence_in,
    gtwiz_userclk_tx_reset_in,
    drpen_in,
    gtwiz_userclk_tx_active_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    drpwe_in,
    gtwiz_reset_rx_datapath_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  output [0:0]gtytxn_out;
  output [0:0]gtytxp_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]txoutclk_out;
  output [0:0]txpmaresetdone_out;
  output [63:0]gtwiz_userdata_rx_out;
  output [0:0]rxdatavalid_out;
  output [0:0]rxheadervalid_out;
  output [0:0]txbufstatus_out;
  output [0:0]rxbufstatus_out;
  output [1:0]rxheader_out;
  output [15:0]drpdo_out;
  output [0:0]drprdy_out;
  output [0:0]gtpowergood_out;
  output [0:0]cplllock_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  input [9:0]drpaddr_in;
  input [15:0]drpdi_in;
  input [0:0]drpclk_in;
  input [0:0]gtrefclk0_in;
  input [0:0]gtyrxn_in;
  input [0:0]gtyrxp_in;
  input [0:0]rxcdrovrden_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]txusrclk_in;
  input [63:0]gtwiz_userdata_tx_in;
  input [2:0]loopback_in;
  input [1:0]txheader_in;
  input [6:0]txsequence_in;
  input [0:0]gtwiz_userclk_tx_reset_in;
  input [0:0]drpen_in;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]drpwe_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire [0:0]cplllock_out;
  wire [9:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire [0:0]drpwe_in;
  wire \gen_gtwizard_gtye4.cplllock_ch_int ;
  wire [15:0]\gen_gtwizard_gtye4.drpdo_int ;
  wire \gen_gtwizard_gtye4.drpen_ch_int ;
  wire \gen_gtwizard_gtye4.drprdy_int ;
  wire \gen_gtwizard_gtye4.drpwe_ch_int ;
  wire \gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_10 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_100 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_13 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_5 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_8 ;
  wire \gen_gtwizard_gtye4.gen_cpll_cal_gtye4.cpll_cal_reset_int ;
  wire [9:0]\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.drpaddr_cpll_cal_int ;
  wire [15:0]\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.drpdi_cpll_cal_int ;
  wire \gen_gtwizard_gtye4.gen_cpll_cal_gtye4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_inst_n_3 ;
  wire \gen_gtwizard_gtye4.gen_cpll_cal_gtye4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_inst_n_4 ;
  wire [2:0]\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.txoutclksel_cpll_cal_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire \gen_gtwizard_gtye4.gtpowergood_int ;
  wire \gen_gtwizard_gtye4.gtrxreset_int ;
  wire \gen_gtwizard_gtye4.gttxreset_ch_int ;
  wire \gen_gtwizard_gtye4.rxprogdivreset_int ;
  wire \gen_gtwizard_gtye4.rxuserrdy_int ;
  wire \gen_gtwizard_gtye4.txpisopd_ch_int ;
  wire \gen_gtwizard_gtye4.txprgdivresetdone_int ;
  wire \gen_gtwizard_gtye4.txprogdivreset_ch_int ;
  wire \gen_gtwizard_gtye4.txprogdivreset_int ;
  wire \gen_gtwizard_gtye4.txuserrdy_int ;
  wire [0:0]gtpowergood_out;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [0:0]gtwiz_userclk_tx_reset_in;
  wire [63:0]gtwiz_userdata_rx_out;
  wire [63:0]gtwiz_userdata_tx_in;
  wire [0:0]gtyrxn_in;
  wire [0:0]gtyrxp_in;
  wire [0:0]gtytxn_out;
  wire [0:0]gtytxp_out;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire rst_in0;
  wire [0:0]rxbufstatus_out;
  wire [0:0]rxcdrovrden_in;
  wire [0:0]rxdatavalid_out;
  wire [0:0]rxgearboxslip_in;
  wire [1:0]rxheader_out;
  wire [0:0]rxheadervalid_out;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [0:0]txbufstatus_out;
  wire [1:0]txheader_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txpmaresetdone_out;
  wire [6:0]txsequence_in;
  wire [0:0]txusrclk_in;

  aurora_64b66b_SL_aurora_64b66b_SL_gt_gtye4_channel_wrapper \gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst 
       (.D(\gen_gtwizard_gtye4.drpdo_int ),
        .Q(\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.drpdi_cpll_cal_int ),
        .TXRATE(\gen_gtwizard_gtye4.txpisopd_ch_int ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.drpen_ch_int (\gen_gtwizard_gtye4.drpen_ch_int ),
        .\gen_gtwizard_gtye4.drprdy_int (\gen_gtwizard_gtye4.drprdy_int ),
        .\gen_gtwizard_gtye4.drpwe_ch_int (\gen_gtwizard_gtye4.drpwe_ch_int ),
        .\gen_gtwizard_gtye4.gtpowergood_int (\gen_gtwizard_gtye4.gtpowergood_int ),
        .\gen_gtwizard_gtye4.gtrxreset_int (\gen_gtwizard_gtye4.gtrxreset_int ),
        .\gen_gtwizard_gtye4.gttxreset_ch_int (\gen_gtwizard_gtye4.gttxreset_ch_int ),
        .\gen_gtwizard_gtye4.rxprogdivreset_int (\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .\gen_gtwizard_gtye4.rxuserrdy_int (\gen_gtwizard_gtye4.rxuserrdy_int ),
        .\gen_gtwizard_gtye4.txprogdivreset_ch_int (\gen_gtwizard_gtye4.txprogdivreset_ch_int ),
        .\gen_gtwizard_gtye4.txuserrdy_int (\gen_gtwizard_gtye4.txuserrdy_int ),
        .gtrefclk0_in(gtrefclk0_in),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST (\gen_gtwizard_gtye4.txprgdivresetdone_int ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 (\gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_100 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 (\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_inst_n_3 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 (\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_inst_n_4 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_3 (\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.txoutclksel_cpll_cal_int ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_4 (\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.drpaddr_cpll_cal_int ),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .in0(\gen_gtwizard_gtye4.cplllock_ch_int ),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .rxbufstatus_out(rxbufstatus_out),
        .rxcdrlock_out(\gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_5 ),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxdatavalid_out(rxdatavalid_out),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxoutclk_out(rxoutclk_out),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxresetdone_out(\gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_8 ),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(txbufstatus_out),
        .txheader_in(txheader_in),
        .txoutclk_out(txoutclk_out),
        .txoutclkpcs_out(\gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_10 ),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txresetdone_out(\gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_13 ),
        .txsequence_in(txsequence_in),
        .txusrclk_in(txusrclk_in));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal \gen_gtwizard_gtye4.gen_cpll_cal_gtye4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_inst 
       (.D(\gen_gtwizard_gtye4.drpdo_int ),
        .\DADDR_O_reg[9] (\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.drpaddr_cpll_cal_int ),
        .\DI_O_reg[15] (\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.drpdi_cpll_cal_int ),
        .Q(\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.txoutclksel_cpll_cal_int ),
        .RESET_IN(\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.cpll_cal_reset_int ),
        .USER_CPLLLOCK_OUT_reg(cplllock_out),
        .cpllpd_int_reg(\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_inst_n_3 ),
        .cpllreset_int_reg(\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.gen_cpll_cal_inst[0].gen_inst_cpll_cal.gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_inst_n_4 ),
        .drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drpwe_in(drpwe_in),
        .\gen_gtwizard_gtye4.drpen_ch_int (\gen_gtwizard_gtye4.drpen_ch_int ),
        .\gen_gtwizard_gtye4.drprdy_int (\gen_gtwizard_gtye4.drprdy_int ),
        .\gen_gtwizard_gtye4.drpwe_ch_int (\gen_gtwizard_gtye4.drpwe_ch_int ),
        .\gen_gtwizard_gtye4.txprogdivreset_ch_int (\gen_gtwizard_gtye4.txprogdivreset_ch_int ),
        .gtwiz_userclk_tx_reset_in(gtwiz_userclk_tx_reset_in),
        .i_in_meta_reg(\gen_gtwizard_gtye4.txprogdivreset_int ),
        .i_in_meta_reg_0(\gen_gtwizard_gtye4.txprgdivresetdone_int ),
        .in0(\gen_gtwizard_gtye4.cplllock_ch_int ),
        .lopt(lopt_2),
        .lopt_1(lopt_3),
        .rst_in0(rst_in0),
        .txoutclk_out(txoutclk_out));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gtye4_delay_powergood \gen_gtwizard_gtye4.gen_pwrgood_delay_inst[0].delay_powergood_inst 
       (.TXRATE(\gen_gtwizard_gtye4.txpisopd_ch_int ),
        .\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 (\gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_100 ),
        .out(gtpowergood_out),
        .txoutclkpcs_out(\gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_10 ));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[0].bit_synchronizer_rxresetdone_inst 
       (.drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .rxresetdone_out(\gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_8 ));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_30 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[0].bit_synchronizer_txresetdone_inst 
       (.drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .txresetdone_out(\gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_13 ));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gtwiz_reset \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_inst 
       (.RESET_IN(\gen_gtwizard_gtye4.gen_cpll_cal_gtye4.cpll_cal_reset_int ),
        .cplllock_out(cplllock_out),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .\gen_gtwizard_gtye4.gtpowergood_int (\gen_gtwizard_gtye4.gtpowergood_int ),
        .\gen_gtwizard_gtye4.gtrxreset_int (\gen_gtwizard_gtye4.gtrxreset_int ),
        .\gen_gtwizard_gtye4.gttxreset_ch_int (\gen_gtwizard_gtye4.gttxreset_ch_int ),
        .\gen_gtwizard_gtye4.rxprogdivreset_int (\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .\gen_gtwizard_gtye4.rxuserrdy_int (\gen_gtwizard_gtye4.rxuserrdy_int ),
        .\gen_gtwizard_gtye4.txuserrdy_int (\gen_gtwizard_gtye4.txuserrdy_int ),
        .gtpowergood_out(gtpowergood_out),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .rst_in0(rst_in0),
        .rst_in_out_reg(\gen_gtwizard_gtye4.txprogdivreset_int ),
        .rxcdrlock_out(\gen_gtwizard_gtye4.gen_channel_container[2].gen_enabled_channel.gtye4_channel_wrapper_inst_n_5 ),
        .rxusrclk2_in(rxusrclk2_in),
        .txusrclk_in(txusrclk_in));
endmodule

(* C_CHANNEL_ENABLE = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000" *) (* C_COMMON_SCALING_FACTOR = "1" *) (* C_CPLL_VCO_FREQUENCY = "2500.000000" *) 
(* C_ENABLE_COMMON_USRCLK = "0" *) (* C_FORCE_COMMONS = "0" *) (* C_FREERUN_FREQUENCY = "14.999500" *) 
(* C_GT_REV = "67" *) (* C_GT_TYPE = "3" *) (* C_INCLUDE_CPLL_CAL = "2" *) 
(* C_LOCATE_COMMON = "0" *) (* C_LOCATE_IN_SYSTEM_IBERT_CORE = "2" *) (* C_LOCATE_RESET_CONTROLLER = "0" *) 
(* C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER = "0" *) (* C_LOCATE_RX_USER_CLOCKING = "1" *) (* C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER = "0" *) 
(* C_LOCATE_TX_USER_CLOCKING = "1" *) (* C_LOCATE_USER_DATA_WIDTH_SIZING = "0" *) (* C_PCIE_CORECLK_FREQ = "250" *) 
(* C_PCIE_ENABLE = "0" *) (* C_RESET_CONTROLLER_INSTANCE_CTRL = "0" *) (* C_RESET_SEQUENCE_INTERVAL = "0" *) 
(* C_RX_BUFFBYPASS_MODE = "0" *) (* C_RX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) (* C_RX_BUFFER_MODE = "1" *) 
(* C_RX_CB_DISP = "8'b00000000" *) (* C_RX_CB_K = "8'b00000000" *) (* C_RX_CB_LEN_SEQ = "1" *) 
(* C_RX_CB_MAX_LEVEL = "1" *) (* C_RX_CB_NUM_SEQ = "0" *) (* C_RX_CB_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_RX_CC_DISP = "8'b00000000" *) (* C_RX_CC_ENABLE = "0" *) (* C_RX_CC_K = "8'b00000000" *) 
(* C_RX_CC_LEN_SEQ = "1" *) (* C_RX_CC_NUM_SEQ = "0" *) (* C_RX_CC_PERIODICITY = "5000" *) 
(* C_RX_CC_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_RX_COMMA_M_ENABLE = "0" *) (* C_RX_COMMA_M_VAL = "10'b1010000011" *) 
(* C_RX_COMMA_P_ENABLE = "0" *) (* C_RX_COMMA_P_VAL = "10'b0101111100" *) (* C_RX_DATA_DECODING = "2" *) 
(* C_RX_ENABLE = "1" *) (* C_RX_INT_DATA_WIDTH = "64" *) (* C_RX_LINE_RATE = "1.250000" *) 
(* C_RX_MASTER_CHANNEL_IDX = "8" *) (* C_RX_OUTCLK_BUFG_GT_DIV = "1" *) (* C_RX_OUTCLK_FREQUENCY = "19.531250" *) 
(* C_RX_OUTCLK_SOURCE = "1" *) (* C_RX_PLL_TYPE = "2" *) (* C_RX_RECCLK_OUTPUT = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_RX_REFCLK_FREQUENCY = "156.250000" *) (* C_RX_SLIDE_MODE = "0" *) (* C_RX_USER_CLOCKING_CONTENTS = "0" *) 
(* C_RX_USER_CLOCKING_INSTANCE_CTRL = "0" *) (* C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) (* C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
(* C_RX_USER_CLOCKING_SOURCE = "0" *) (* C_RX_USER_DATA_WIDTH = "64" *) (* C_RX_USRCLK2_FREQUENCY = "19.531250" *) 
(* C_RX_USRCLK_FREQUENCY = "19.531250" *) (* C_SECONDARY_QPLL_ENABLE = "0" *) (* C_SECONDARY_QPLL_REFCLK_FREQUENCY = "257.812500" *) 
(* C_SIM_CPLL_CAL_BYPASS = "1" *) (* C_TOTAL_NUM_CHANNELS = "1" *) (* C_TOTAL_NUM_COMMONS = "0" *) 
(* C_TOTAL_NUM_COMMONS_EXAMPLE = "0" *) (* C_TXPROGDIV_FREQ_ENABLE = "0" *) (* C_TXPROGDIV_FREQ_SOURCE = "2" *) 
(* C_TXPROGDIV_FREQ_VAL = "19.531250" *) (* C_TX_BUFFBYPASS_MODE = "0" *) (* C_TX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
(* C_TX_BUFFER_MODE = "1" *) (* C_TX_DATA_ENCODING = "2" *) (* C_TX_ENABLE = "1" *) 
(* C_TX_INT_DATA_WIDTH = "64" *) (* C_TX_LINE_RATE = "1.250000" *) (* C_TX_MASTER_CHANNEL_IDX = "8" *) 
(* C_TX_OUTCLK_BUFG_GT_DIV = "1" *) (* C_TX_OUTCLK_FREQUENCY = "19.531250" *) (* C_TX_OUTCLK_SOURCE = "1" *) 
(* C_TX_PLL_TYPE = "2" *) (* C_TX_REFCLK_FREQUENCY = "156.250000" *) (* C_TX_USER_CLOCKING_CONTENTS = "0" *) 
(* C_TX_USER_CLOCKING_INSTANCE_CTRL = "0" *) (* C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) (* C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
(* C_TX_USER_CLOCKING_SOURCE = "0" *) (* C_TX_USER_DATA_WIDTH = "64" *) (* C_TX_USRCLK2_FREQUENCY = "19.531250" *) 
(* C_TX_USRCLK_FREQUENCY = "19.531250" *) (* C_USER_GTPOWERGOOD_DELAY_EN = "1" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_gt_gtwizard_top
   (gtwiz_userclk_tx_reset_in,
    gtwiz_userclk_tx_active_in,
    gtwiz_userclk_tx_srcclk_out,
    gtwiz_userclk_tx_usrclk_out,
    gtwiz_userclk_tx_usrclk2_out,
    gtwiz_userclk_tx_active_out,
    gtwiz_userclk_rx_reset_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_userclk_rx_srcclk_out,
    gtwiz_userclk_rx_usrclk_out,
    gtwiz_userclk_rx_usrclk2_out,
    gtwiz_userclk_rx_active_out,
    gtwiz_buffbypass_tx_reset_in,
    gtwiz_buffbypass_tx_start_user_in,
    gtwiz_buffbypass_tx_done_out,
    gtwiz_buffbypass_tx_error_out,
    gtwiz_buffbypass_rx_reset_in,
    gtwiz_buffbypass_rx_start_user_in,
    gtwiz_buffbypass_rx_done_out,
    gtwiz_buffbypass_rx_error_out,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_tx_done_in,
    gtwiz_reset_rx_done_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_qpll1lock_in,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    gtwiz_reset_qpll1reset_out,
    gtwiz_gthe3_cpll_cal_txoutclk_period_in,
    gtwiz_gthe3_cpll_cal_cnt_tol_in,
    gtwiz_gthe3_cpll_cal_bufg_ce_in,
    gtwiz_gthe4_cpll_cal_txoutclk_period_in,
    gtwiz_gthe4_cpll_cal_cnt_tol_in,
    gtwiz_gthe4_cpll_cal_bufg_ce_in,
    gtwiz_gtye4_cpll_cal_txoutclk_period_in,
    gtwiz_gtye4_cpll_cal_cnt_tol_in,
    gtwiz_gtye4_cpll_cal_bufg_ce_in,
    gtwiz_userdata_tx_in,
    gtwiz_userdata_rx_out,
    bgbypassb_in,
    bgmonitorenb_in,
    bgpdb_in,
    bgrcalovrd_in,
    bgrcalovrdenb_in,
    drpaddr_common_in,
    drpclk_common_in,
    drpdi_common_in,
    drpen_common_in,
    drpwe_common_in,
    gtgrefclk0_in,
    gtgrefclk1_in,
    gtnorthrefclk00_in,
    gtnorthrefclk01_in,
    gtnorthrefclk10_in,
    gtnorthrefclk11_in,
    gtrefclk00_in,
    gtrefclk01_in,
    gtrefclk10_in,
    gtrefclk11_in,
    gtsouthrefclk00_in,
    gtsouthrefclk01_in,
    gtsouthrefclk10_in,
    gtsouthrefclk11_in,
    pcierateqpll0_in,
    pcierateqpll1_in,
    pmarsvd0_in,
    pmarsvd1_in,
    qpll0clkrsvd0_in,
    qpll0clkrsvd1_in,
    qpll0fbdiv_in,
    qpll0lockdetclk_in,
    qpll0locken_in,
    qpll0pd_in,
    qpll0refclksel_in,
    qpll0reset_in,
    qpll1clkrsvd0_in,
    qpll1clkrsvd1_in,
    qpll1fbdiv_in,
    qpll1lockdetclk_in,
    qpll1locken_in,
    qpll1pd_in,
    qpll1refclksel_in,
    qpll1reset_in,
    qpllrsvd1_in,
    qpllrsvd2_in,
    qpllrsvd3_in,
    qpllrsvd4_in,
    rcalenb_in,
    sdm0data_in,
    sdm0reset_in,
    sdm0toggle_in,
    sdm0width_in,
    sdm1data_in,
    sdm1reset_in,
    sdm1toggle_in,
    sdm1width_in,
    tcongpi_in,
    tconpowerup_in,
    tconreset_in,
    tconrsvdin1_in,
    ubcfgstreamen_in,
    ubdo_in,
    ubdrdy_in,
    ubenable_in,
    ubgpi_in,
    ubintr_in,
    ubiolmbrst_in,
    ubmbrst_in,
    ubmdmcapture_in,
    ubmdmdbgrst_in,
    ubmdmdbgupdate_in,
    ubmdmregen_in,
    ubmdmshift_in,
    ubmdmsysrst_in,
    ubmdmtck_in,
    ubmdmtdi_in,
    drpdo_common_out,
    drprdy_common_out,
    pmarsvdout0_out,
    pmarsvdout1_out,
    qpll0fbclklost_out,
    qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll0refclklost_out,
    qpll1fbclklost_out,
    qpll1lock_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    qpll1refclklost_out,
    qplldmonitor0_out,
    qplldmonitor1_out,
    refclkoutmonitor0_out,
    refclkoutmonitor1_out,
    rxrecclk0_sel_out,
    rxrecclk1_sel_out,
    rxrecclk0sel_out,
    rxrecclk1sel_out,
    sdm0finalout_out,
    sdm0testdata_out,
    sdm1finalout_out,
    sdm1testdata_out,
    tcongpo_out,
    tconrsvdout0_out,
    ubdaddr_out,
    ubden_out,
    ubdi_out,
    ubdwe_out,
    ubmdmtdo_out,
    ubrsvdout_out,
    ubtxuart_out,
    cdrstepdir_in,
    cdrstepsq_in,
    cdrstepsx_in,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cpllfreqlock_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllrefclksel_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpaddr_in,
    drpclk_in,
    drpdi_in,
    drpen_in,
    drprst_in,
    drpwe_in,
    elpcaldvorwren_in,
    elpcalpaorwren_in,
    evoddphicaldone_in,
    evoddphicalstart_in,
    evoddphidrden_in,
    evoddphidwren_in,
    evoddphixrden_in,
    evoddphixwren_in,
    eyescanmode_in,
    eyescanreset_in,
    eyescantrigger_in,
    freqos_in,
    gtgrefclk_in,
    gthrxn_in,
    gthrxp_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    gtresetsel_in,
    gtrsvd_in,
    gtrxreset_in,
    gtrxresetsel_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    gttxreset_in,
    gttxresetsel_in,
    incpctrl_in,
    gtyrxn_in,
    gtyrxp_in,
    loopback_in,
    looprsvd_in,
    lpbkrxtxseren_in,
    lpbktxrxseren_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    pcsrsvdin_in,
    pcsrsvdin2_in,
    pmarsvdin_in,
    qpll0clk_in,
    qpll0freqlock_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1freqlock_in,
    qpll1refclk_in,
    resetovrd_in,
    rstclkentx_in,
    rx8b10ben_in,
    rxafecfoken_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxcdrresetrsv_in,
    rxchbonden_in,
    rxchbondi_in,
    rxchbondlevel_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxckcalreset_in,
    rxckcalstart_in,
    rxcommadeten_in,
    rxdfeagcctrl_in,
    rxdccforcestart_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfecfokfcnum_in,
    rxdfecfokfen_in,
    rxdfecfokfpulse_in,
    rxdfecfokhold_in,
    rxdfecfokovren_in,
    rxdfekhhold_in,
    rxdfekhovrden_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfevsen_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxelecidlemode_in,
    rxeqtraining_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxmonitorsel_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosintcfg_in,
    rxosinten_in,
    rxosinthold_in,
    rxosintovrden_in,
    rxosintstrobe_in,
    rxosinttestovrden_in,
    rxosovrden_in,
    rxoutclksel_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxpd_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxphovrden_in,
    rxpllclksel_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprbssel_in,
    rxprogdivreset_in,
    rxqpien_in,
    rxrate_in,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxsysclksel_in,
    rxtermination_in,
    rxuserrdy_in,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tstin_in,
    tx8b10bbypass_in,
    tx8b10ben_in,
    txbufdiffctrl_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txctrl0_in,
    txctrl1_in,
    txctrl2_in,
    txdata_in,
    txdataextendrsvd_in,
    txdccforcestart_in,
    txdccreset_in,
    txdeemph_in,
    txdetectrx_in,
    txdiffctrl_in,
    txdiffpd_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txelforcestart_in,
    txheader_in,
    txinhibit_in,
    txlatclk_in,
    txlfpstreset_in,
    txlfpsu2lpexit_in,
    txlfpsu3wake_in,
    txmaincursor_in,
    txmargin_in,
    txmuxdcdexhold_in,
    txmuxdcdorwren_in,
    txoneszeros_in,
    txoutclksel_in,
    txpcsreset_in,
    txpd_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    txpippmstepsize_in,
    txpisopd_in,
    txpllclksel_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursor_in,
    txpostcursorinv_in,
    txprbsforceerr_in,
    txprbssel_in,
    txprecursor_in,
    txprecursorinv_in,
    txprogdivreset_in,
    txqpibiasen_in,
    txqpistrongpdown_in,
    txqpiweakpup_in,
    txrate_in,
    txratemode_in,
    txsequence_in,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    txsysclksel_in,
    txuserrdy_in,
    txusrclk_in,
    txusrclk2_in,
    bufgtce_out,
    bufgtcemask_out,
    bufgtdiv_out,
    bufgtreset_out,
    bufgtrstmask_out,
    cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    dmonitorout_out,
    dmonitoroutclk_out,
    drpdo_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    gtrefclkmonitor_out,
    gtytxn_out,
    gtytxp_out,
    pcierategen3_out,
    pcierateidle_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    pcsrsvdout_out,
    phystatus_out,
    pinrsrvdas_out,
    powerpresent_out,
    resetexception_out,
    rxbufstatus_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxchbondo_out,
    rxckcaldone_out,
    rxclkcorcnt_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxctrl0_out,
    rxctrl1_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdata_out,
    rxdataextendrsvd_out,
    rxdatavalid_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxheader_out,
    rxheadervalid_out,
    rxlfpstresetdet_out,
    rxlfpsu2lpexitdet_out,
    rxlfpsu3wakedet_out,
    rxmonitorout_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxqpisenn_out,
    rxqpisenp_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxstartofseq_out,
    rxstatus_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txbufstatus_out,
    txcomfinish_out,
    txdccdone_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txqpisenn_out,
    txqpisenp_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  input [0:0]gtwiz_userclk_tx_reset_in;
  input [0:0]gtwiz_userclk_tx_active_in;
  output [0:0]gtwiz_userclk_tx_srcclk_out;
  output [0:0]gtwiz_userclk_tx_usrclk_out;
  output [0:0]gtwiz_userclk_tx_usrclk2_out;
  output [0:0]gtwiz_userclk_tx_active_out;
  input [0:0]gtwiz_userclk_rx_reset_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  output [0:0]gtwiz_userclk_rx_srcclk_out;
  output [0:0]gtwiz_userclk_rx_usrclk_out;
  output [0:0]gtwiz_userclk_rx_usrclk2_out;
  output [0:0]gtwiz_userclk_rx_active_out;
  input [0:0]gtwiz_buffbypass_tx_reset_in;
  input [0:0]gtwiz_buffbypass_tx_start_user_in;
  output [0:0]gtwiz_buffbypass_tx_done_out;
  output [0:0]gtwiz_buffbypass_tx_error_out;
  input [0:0]gtwiz_buffbypass_rx_reset_in;
  input [0:0]gtwiz_buffbypass_rx_start_user_in;
  output [0:0]gtwiz_buffbypass_rx_done_out;
  output [0:0]gtwiz_buffbypass_rx_error_out;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_tx_done_in;
  input [0:0]gtwiz_reset_rx_done_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_reset_qpll1lock_in;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  output [0:0]gtwiz_reset_qpll1reset_out;
  input [17:0]gtwiz_gthe3_cpll_cal_txoutclk_period_in;
  input [17:0]gtwiz_gthe3_cpll_cal_cnt_tol_in;
  input [0:0]gtwiz_gthe3_cpll_cal_bufg_ce_in;
  input [17:0]gtwiz_gthe4_cpll_cal_txoutclk_period_in;
  input [17:0]gtwiz_gthe4_cpll_cal_cnt_tol_in;
  input [0:0]gtwiz_gthe4_cpll_cal_bufg_ce_in;
  input [17:0]gtwiz_gtye4_cpll_cal_txoutclk_period_in;
  input [17:0]gtwiz_gtye4_cpll_cal_cnt_tol_in;
  input [0:0]gtwiz_gtye4_cpll_cal_bufg_ce_in;
  input [63:0]gtwiz_userdata_tx_in;
  output [63:0]gtwiz_userdata_rx_out;
  input [0:0]bgbypassb_in;
  input [0:0]bgmonitorenb_in;
  input [0:0]bgpdb_in;
  input [4:0]bgrcalovrd_in;
  input [0:0]bgrcalovrdenb_in;
  input [15:0]drpaddr_common_in;
  input [0:0]drpclk_common_in;
  input [15:0]drpdi_common_in;
  input [0:0]drpen_common_in;
  input [0:0]drpwe_common_in;
  input [0:0]gtgrefclk0_in;
  input [0:0]gtgrefclk1_in;
  input [0:0]gtnorthrefclk00_in;
  input [0:0]gtnorthrefclk01_in;
  input [0:0]gtnorthrefclk10_in;
  input [0:0]gtnorthrefclk11_in;
  input [0:0]gtrefclk00_in;
  input [0:0]gtrefclk01_in;
  input [0:0]gtrefclk10_in;
  input [0:0]gtrefclk11_in;
  input [0:0]gtsouthrefclk00_in;
  input [0:0]gtsouthrefclk01_in;
  input [0:0]gtsouthrefclk10_in;
  input [0:0]gtsouthrefclk11_in;
  input [2:0]pcierateqpll0_in;
  input [2:0]pcierateqpll1_in;
  input [7:0]pmarsvd0_in;
  input [7:0]pmarsvd1_in;
  input [0:0]qpll0clkrsvd0_in;
  input [0:0]qpll0clkrsvd1_in;
  input [7:0]qpll0fbdiv_in;
  input [0:0]qpll0lockdetclk_in;
  input [0:0]qpll0locken_in;
  input [0:0]qpll0pd_in;
  input [2:0]qpll0refclksel_in;
  input [0:0]qpll0reset_in;
  input [0:0]qpll1clkrsvd0_in;
  input [0:0]qpll1clkrsvd1_in;
  input [7:0]qpll1fbdiv_in;
  input [0:0]qpll1lockdetclk_in;
  input [0:0]qpll1locken_in;
  input [0:0]qpll1pd_in;
  input [2:0]qpll1refclksel_in;
  input [0:0]qpll1reset_in;
  input [7:0]qpllrsvd1_in;
  input [4:0]qpllrsvd2_in;
  input [4:0]qpllrsvd3_in;
  input [7:0]qpllrsvd4_in;
  input [0:0]rcalenb_in;
  input [24:0]sdm0data_in;
  input [0:0]sdm0reset_in;
  input [0:0]sdm0toggle_in;
  input [1:0]sdm0width_in;
  input [24:0]sdm1data_in;
  input [0:0]sdm1reset_in;
  input [0:0]sdm1toggle_in;
  input [1:0]sdm1width_in;
  input [0:0]tcongpi_in;
  input [0:0]tconpowerup_in;
  input [0:0]tconreset_in;
  input [0:0]tconrsvdin1_in;
  input [0:0]ubcfgstreamen_in;
  input [15:0]ubdo_in;
  input [0:0]ubdrdy_in;
  input [0:0]ubenable_in;
  input [1:0]ubgpi_in;
  input [1:0]ubintr_in;
  input [0:0]ubiolmbrst_in;
  input [0:0]ubmbrst_in;
  input [0:0]ubmdmcapture_in;
  input [0:0]ubmdmdbgrst_in;
  input [0:0]ubmdmdbgupdate_in;
  input [3:0]ubmdmregen_in;
  input [0:0]ubmdmshift_in;
  input [0:0]ubmdmsysrst_in;
  input [0:0]ubmdmtck_in;
  input [0:0]ubmdmtdi_in;
  output [15:0]drpdo_common_out;
  output [0:0]drprdy_common_out;
  output [7:0]pmarsvdout0_out;
  output [7:0]pmarsvdout1_out;
  output [0:0]qpll0fbclklost_out;
  output [0:0]qpll0lock_out;
  output [0:0]qpll0outclk_out;
  output [0:0]qpll0outrefclk_out;
  output [0:0]qpll0refclklost_out;
  output [0:0]qpll1fbclklost_out;
  output [0:0]qpll1lock_out;
  output [0:0]qpll1outclk_out;
  output [0:0]qpll1outrefclk_out;
  output [0:0]qpll1refclklost_out;
  output [7:0]qplldmonitor0_out;
  output [7:0]qplldmonitor1_out;
  output [0:0]refclkoutmonitor0_out;
  output [0:0]refclkoutmonitor1_out;
  output [0:0]rxrecclk0_sel_out;
  output [0:0]rxrecclk1_sel_out;
  output [1:0]rxrecclk0sel_out;
  output [1:0]rxrecclk1sel_out;
  output [3:0]sdm0finalout_out;
  output [14:0]sdm0testdata_out;
  output [3:0]sdm1finalout_out;
  output [14:0]sdm1testdata_out;
  output [0:0]tcongpo_out;
  output [0:0]tconrsvdout0_out;
  output [15:0]ubdaddr_out;
  output [0:0]ubden_out;
  output [15:0]ubdi_out;
  output [0:0]ubdwe_out;
  output [0:0]ubmdmtdo_out;
  output [0:0]ubrsvdout_out;
  output [0:0]ubtxuart_out;
  input [0:0]cdrstepdir_in;
  input [0:0]cdrstepsq_in;
  input [0:0]cdrstepsx_in;
  input [0:0]cfgreset_in;
  input [0:0]clkrsvd0_in;
  input [0:0]clkrsvd1_in;
  input [0:0]cpllfreqlock_in;
  input [0:0]cplllockdetclk_in;
  input [0:0]cplllocken_in;
  input [0:0]cpllpd_in;
  input [2:0]cpllrefclksel_in;
  input [0:0]cpllreset_in;
  input [0:0]dmonfiforeset_in;
  input [0:0]dmonitorclk_in;
  input [9:0]drpaddr_in;
  input [0:0]drpclk_in;
  input [15:0]drpdi_in;
  input [0:0]drpen_in;
  input [0:0]drprst_in;
  input [0:0]drpwe_in;
  input [0:0]elpcaldvorwren_in;
  input [0:0]elpcalpaorwren_in;
  input [0:0]evoddphicaldone_in;
  input [0:0]evoddphicalstart_in;
  input [0:0]evoddphidrden_in;
  input [0:0]evoddphidwren_in;
  input [0:0]evoddphixrden_in;
  input [0:0]evoddphixwren_in;
  input [0:0]eyescanmode_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]freqos_in;
  input [0:0]gtgrefclk_in;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input [0:0]gtnorthrefclk0_in;
  input [0:0]gtnorthrefclk1_in;
  input [0:0]gtrefclk0_in;
  input [0:0]gtrefclk1_in;
  input [0:0]gtresetsel_in;
  input [15:0]gtrsvd_in;
  input [0:0]gtrxreset_in;
  input [0:0]gtrxresetsel_in;
  input [0:0]gtsouthrefclk0_in;
  input [0:0]gtsouthrefclk1_in;
  input [0:0]gttxreset_in;
  input [0:0]gttxresetsel_in;
  input [0:0]incpctrl_in;
  input [0:0]gtyrxn_in;
  input [0:0]gtyrxp_in;
  input [2:0]loopback_in;
  input [0:0]looprsvd_in;
  input [0:0]lpbkrxtxseren_in;
  input [0:0]lpbktxrxseren_in;
  input [0:0]pcieeqrxeqadaptdone_in;
  input [0:0]pcierstidle_in;
  input [0:0]pciersttxsyncstart_in;
  input [0:0]pcieuserratedone_in;
  input [15:0]pcsrsvdin_in;
  input [0:0]pcsrsvdin2_in;
  input [0:0]pmarsvdin_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0freqlock_in;
  input [0:0]qpll0refclk_in;
  input [0:0]qpll1clk_in;
  input [0:0]qpll1freqlock_in;
  input [0:0]qpll1refclk_in;
  input [0:0]resetovrd_in;
  input [0:0]rstclkentx_in;
  input [0:0]rx8b10ben_in;
  input [0:0]rxafecfoken_in;
  input [0:0]rxbufreset_in;
  input [0:0]rxcdrfreqreset_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxcdrovrden_in;
  input [0:0]rxcdrreset_in;
  input [0:0]rxcdrresetrsv_in;
  input [0:0]rxchbonden_in;
  input [4:0]rxchbondi_in;
  input [2:0]rxchbondlevel_in;
  input [0:0]rxchbondmaster_in;
  input [0:0]rxchbondslave_in;
  input [0:0]rxckcalreset_in;
  input [6:0]rxckcalstart_in;
  input [0:0]rxcommadeten_in;
  input [0:0]rxdfeagcctrl_in;
  input [0:0]rxdccforcestart_in;
  input [0:0]rxdfeagchold_in;
  input [0:0]rxdfeagcovrden_in;
  input [3:0]rxdfecfokfcnum_in;
  input [0:0]rxdfecfokfen_in;
  input [0:0]rxdfecfokfpulse_in;
  input [0:0]rxdfecfokhold_in;
  input [0:0]rxdfecfokovren_in;
  input [0:0]rxdfekhhold_in;
  input [0:0]rxdfekhovrden_in;
  input [0:0]rxdfelfhold_in;
  input [0:0]rxdfelfovrden_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxdfetap10hold_in;
  input [0:0]rxdfetap10ovrden_in;
  input [0:0]rxdfetap11hold_in;
  input [0:0]rxdfetap11ovrden_in;
  input [0:0]rxdfetap12hold_in;
  input [0:0]rxdfetap12ovrden_in;
  input [0:0]rxdfetap13hold_in;
  input [0:0]rxdfetap13ovrden_in;
  input [0:0]rxdfetap14hold_in;
  input [0:0]rxdfetap14ovrden_in;
  input [0:0]rxdfetap15hold_in;
  input [0:0]rxdfetap15ovrden_in;
  input [0:0]rxdfetap2hold_in;
  input [0:0]rxdfetap2ovrden_in;
  input [0:0]rxdfetap3hold_in;
  input [0:0]rxdfetap3ovrden_in;
  input [0:0]rxdfetap4hold_in;
  input [0:0]rxdfetap4ovrden_in;
  input [0:0]rxdfetap5hold_in;
  input [0:0]rxdfetap5ovrden_in;
  input [0:0]rxdfetap6hold_in;
  input [0:0]rxdfetap6ovrden_in;
  input [0:0]rxdfetap7hold_in;
  input [0:0]rxdfetap7ovrden_in;
  input [0:0]rxdfetap8hold_in;
  input [0:0]rxdfetap8ovrden_in;
  input [0:0]rxdfetap9hold_in;
  input [0:0]rxdfetap9ovrden_in;
  input [0:0]rxdfeuthold_in;
  input [0:0]rxdfeutovrden_in;
  input [0:0]rxdfevphold_in;
  input [0:0]rxdfevpovrden_in;
  input [0:0]rxdfevsen_in;
  input [0:0]rxdfexyden_in;
  input [0:0]rxdlybypass_in;
  input [0:0]rxdlyen_in;
  input [0:0]rxdlyovrden_in;
  input [0:0]rxdlysreset_in;
  input [1:0]rxelecidlemode_in;
  input [0:0]rxeqtraining_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxlatclk_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxlpmgchold_in;
  input [0:0]rxlpmgcovrden_in;
  input [0:0]rxlpmhfhold_in;
  input [0:0]rxlpmhfovrden_in;
  input [0:0]rxlpmlfhold_in;
  input [0:0]rxlpmlfklovrden_in;
  input [0:0]rxlpmoshold_in;
  input [0:0]rxlpmosovrden_in;
  input [0:0]rxmcommaalignen_in;
  input [1:0]rxmonitorsel_in;
  input [0:0]rxoobreset_in;
  input [0:0]rxoscalreset_in;
  input [0:0]rxoshold_in;
  input [0:0]rxosintcfg_in;
  input [0:0]rxosinten_in;
  input [0:0]rxosinthold_in;
  input [0:0]rxosintovrden_in;
  input [0:0]rxosintstrobe_in;
  input [0:0]rxosinttestovrden_in;
  input [0:0]rxosovrden_in;
  input [2:0]rxoutclksel_in;
  input [0:0]rxpcommaalignen_in;
  input [0:0]rxpcsreset_in;
  input [1:0]rxpd_in;
  input [0:0]rxphalign_in;
  input [0:0]rxphalignen_in;
  input [0:0]rxphdlypd_in;
  input [0:0]rxphdlyreset_in;
  input [0:0]rxphovrden_in;
  input [1:0]rxpllclksel_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input [3:0]rxprbssel_in;
  input [0:0]rxprogdivreset_in;
  input [0:0]rxqpien_in;
  input [2:0]rxrate_in;
  input [0:0]rxratemode_in;
  input [0:0]rxslide_in;
  input [0:0]rxslipoutclk_in;
  input [0:0]rxslippma_in;
  input [0:0]rxsyncallin_in;
  input [0:0]rxsyncin_in;
  input [0:0]rxsyncmode_in;
  input [1:0]rxsysclksel_in;
  input [0:0]rxtermination_in;
  input [0:0]rxuserrdy_in;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]sigvalidclk_in;
  input [19:0]tstin_in;
  input [7:0]tx8b10bbypass_in;
  input [0:0]tx8b10ben_in;
  input [0:0]txbufdiffctrl_in;
  input [0:0]txcominit_in;
  input [0:0]txcomsas_in;
  input [0:0]txcomwake_in;
  input [15:0]txctrl0_in;
  input [15:0]txctrl1_in;
  input [7:0]txctrl2_in;
  input [127:0]txdata_in;
  input [7:0]txdataextendrsvd_in;
  input [0:0]txdccforcestart_in;
  input [0:0]txdccreset_in;
  input [1:0]txdeemph_in;
  input [0:0]txdetectrx_in;
  input [4:0]txdiffctrl_in;
  input [0:0]txdiffpd_in;
  input [0:0]txdlybypass_in;
  input [0:0]txdlyen_in;
  input [0:0]txdlyhold_in;
  input [0:0]txdlyovrden_in;
  input [0:0]txdlysreset_in;
  input [0:0]txdlyupdown_in;
  input [0:0]txelecidle_in;
  input [0:0]txelforcestart_in;
  input [5:0]txheader_in;
  input [0:0]txinhibit_in;
  input [0:0]txlatclk_in;
  input [0:0]txlfpstreset_in;
  input [0:0]txlfpsu2lpexit_in;
  input [0:0]txlfpsu3wake_in;
  input [6:0]txmaincursor_in;
  input [2:0]txmargin_in;
  input [0:0]txmuxdcdexhold_in;
  input [0:0]txmuxdcdorwren_in;
  input [0:0]txoneszeros_in;
  input [2:0]txoutclksel_in;
  input [0:0]txpcsreset_in;
  input [1:0]txpd_in;
  input [0:0]txpdelecidlemode_in;
  input [0:0]txphalign_in;
  input [0:0]txphalignen_in;
  input [0:0]txphdlypd_in;
  input [0:0]txphdlyreset_in;
  input [0:0]txphdlytstclk_in;
  input [0:0]txphinit_in;
  input [0:0]txphovrden_in;
  input [0:0]txpippmen_in;
  input [0:0]txpippmovrden_in;
  input [0:0]txpippmpd_in;
  input [0:0]txpippmsel_in;
  input [4:0]txpippmstepsize_in;
  input [0:0]txpisopd_in;
  input [1:0]txpllclksel_in;
  input [0:0]txpmareset_in;
  input [0:0]txpolarity_in;
  input [4:0]txpostcursor_in;
  input [0:0]txpostcursorinv_in;
  input [0:0]txprbsforceerr_in;
  input [3:0]txprbssel_in;
  input [4:0]txprecursor_in;
  input [0:0]txprecursorinv_in;
  input [0:0]txprogdivreset_in;
  input [0:0]txqpibiasen_in;
  input [0:0]txqpistrongpdown_in;
  input [0:0]txqpiweakpup_in;
  input [2:0]txrate_in;
  input [0:0]txratemode_in;
  input [6:0]txsequence_in;
  input [0:0]txswing_in;
  input [0:0]txsyncallin_in;
  input [0:0]txsyncin_in;
  input [0:0]txsyncmode_in;
  input [1:0]txsysclksel_in;
  input [0:0]txuserrdy_in;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  output [0:0]bufgtce_out;
  output [2:0]bufgtcemask_out;
  output [8:0]bufgtdiv_out;
  output [0:0]bufgtreset_out;
  output [2:0]bufgtrstmask_out;
  output [0:0]cpllfbclklost_out;
  output [0:0]cplllock_out;
  output [0:0]cpllrefclklost_out;
  output [15:0]dmonitorout_out;
  output [0:0]dmonitoroutclk_out;
  output [15:0]drpdo_out;
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output [0:0]gtpowergood_out;
  output [0:0]gtrefclkmonitor_out;
  output [0:0]gtytxn_out;
  output [0:0]gtytxp_out;
  output [0:0]pcierategen3_out;
  output [0:0]pcierateidle_out;
  output [1:0]pcierateqpllpd_out;
  output [1:0]pcierateqpllreset_out;
  output [0:0]pciesynctxsyncdone_out;
  output [0:0]pcieusergen3rdy_out;
  output [0:0]pcieuserphystatusrst_out;
  output [0:0]pcieuserratestart_out;
  output [15:0]pcsrsvdout_out;
  output [0:0]phystatus_out;
  output [15:0]pinrsrvdas_out;
  output [0:0]powerpresent_out;
  output [0:0]resetexception_out;
  output [2:0]rxbufstatus_out;
  output [0:0]rxbyteisaligned_out;
  output [0:0]rxbyterealign_out;
  output [0:0]rxcdrlock_out;
  output [0:0]rxcdrphdone_out;
  output [0:0]rxchanbondseq_out;
  output [0:0]rxchanisaligned_out;
  output [0:0]rxchanrealign_out;
  output [4:0]rxchbondo_out;
  output [0:0]rxckcaldone_out;
  output [1:0]rxclkcorcnt_out;
  output [0:0]rxcominitdet_out;
  output [0:0]rxcommadet_out;
  output [0:0]rxcomsasdet_out;
  output [0:0]rxcomwakedet_out;
  output [15:0]rxctrl0_out;
  output [15:0]rxctrl1_out;
  output [7:0]rxctrl2_out;
  output [7:0]rxctrl3_out;
  output [127:0]rxdata_out;
  output [7:0]rxdataextendrsvd_out;
  output [1:0]rxdatavalid_out;
  output [0:0]rxdlysresetdone_out;
  output [0:0]rxelecidle_out;
  output [5:0]rxheader_out;
  output [1:0]rxheadervalid_out;
  output [0:0]rxlfpstresetdet_out;
  output [0:0]rxlfpsu2lpexitdet_out;
  output [0:0]rxlfpsu3wakedet_out;
  output [7:0]rxmonitorout_out;
  output [0:0]rxosintdone_out;
  output [0:0]rxosintstarted_out;
  output [0:0]rxosintstrobedone_out;
  output [0:0]rxosintstrobestarted_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxoutclkfabric_out;
  output [0:0]rxoutclkpcs_out;
  output [0:0]rxphaligndone_out;
  output [0:0]rxphalignerr_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxprbslocked_out;
  output [0:0]rxprgdivresetdone_out;
  output [0:0]rxqpisenn_out;
  output [0:0]rxqpisenp_out;
  output [0:0]rxratedone_out;
  output [0:0]rxrecclkout_out;
  output [0:0]rxresetdone_out;
  output [0:0]rxsliderdy_out;
  output [0:0]rxslipdone_out;
  output [0:0]rxslipoutclkrdy_out;
  output [0:0]rxslippmardy_out;
  output [1:0]rxstartofseq_out;
  output [2:0]rxstatus_out;
  output [0:0]rxsyncdone_out;
  output [0:0]rxsyncout_out;
  output [0:0]rxvalid_out;
  output [1:0]txbufstatus_out;
  output [0:0]txcomfinish_out;
  output [0:0]txdccdone_out;
  output [0:0]txdlysresetdone_out;
  output [0:0]txoutclk_out;
  output [0:0]txoutclkfabric_out;
  output [0:0]txoutclkpcs_out;
  output [0:0]txphaligndone_out;
  output [0:0]txphinitdone_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txprgdivresetdone_out;
  output [0:0]txqpisenn_out;
  output [0:0]txqpisenp_out;
  output [0:0]txratedone_out;
  output [0:0]txresetdone_out;
  output [0:0]txsyncdone_out;
  output [0:0]txsyncout_out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire \<const0> ;
  wire [0:0]cplllock_out;
  wire [9:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire [0:0]drpwe_in;
  wire [0:0]gtpowergood_out;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [0:0]gtwiz_userclk_tx_reset_in;
  wire [63:0]gtwiz_userdata_rx_out;
  wire [63:0]gtwiz_userdata_tx_in;
  wire [0:0]gtyrxn_in;
  wire [0:0]gtyrxp_in;
  wire [0:0]gtytxn_out;
  wire [0:0]gtytxp_out;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire [2:2]\^rxbufstatus_out ;
  wire [0:0]rxcdrovrden_in;
  wire [0:0]\^rxdatavalid_out ;
  wire [0:0]rxgearboxslip_in;
  wire [1:0]\^rxheader_out ;
  wire [0:0]\^rxheadervalid_out ;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [1:1]\^txbufstatus_out ;
  wire [5:0]txheader_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txpmaresetdone_out;
  wire [6:0]txsequence_in;
  wire [0:0]txusrclk_in;

  assign bufgtce_out[0] = \<const0> ;
  assign bufgtcemask_out[2] = \<const0> ;
  assign bufgtcemask_out[1] = \<const0> ;
  assign bufgtcemask_out[0] = \<const0> ;
  assign bufgtdiv_out[8] = \<const0> ;
  assign bufgtdiv_out[7] = \<const0> ;
  assign bufgtdiv_out[6] = \<const0> ;
  assign bufgtdiv_out[5] = \<const0> ;
  assign bufgtdiv_out[4] = \<const0> ;
  assign bufgtdiv_out[3] = \<const0> ;
  assign bufgtdiv_out[2] = \<const0> ;
  assign bufgtdiv_out[1] = \<const0> ;
  assign bufgtdiv_out[0] = \<const0> ;
  assign bufgtreset_out[0] = \<const0> ;
  assign bufgtrstmask_out[2] = \<const0> ;
  assign bufgtrstmask_out[1] = \<const0> ;
  assign bufgtrstmask_out[0] = \<const0> ;
  assign cpllfbclklost_out[0] = \<const0> ;
  assign cpllrefclklost_out[0] = \<const0> ;
  assign dmonitorout_out[15] = \<const0> ;
  assign dmonitorout_out[14] = \<const0> ;
  assign dmonitorout_out[13] = \<const0> ;
  assign dmonitorout_out[12] = \<const0> ;
  assign dmonitorout_out[11] = \<const0> ;
  assign dmonitorout_out[10] = \<const0> ;
  assign dmonitorout_out[9] = \<const0> ;
  assign dmonitorout_out[8] = \<const0> ;
  assign dmonitorout_out[7] = \<const0> ;
  assign dmonitorout_out[6] = \<const0> ;
  assign dmonitorout_out[5] = \<const0> ;
  assign dmonitorout_out[4] = \<const0> ;
  assign dmonitorout_out[3] = \<const0> ;
  assign dmonitorout_out[2] = \<const0> ;
  assign dmonitorout_out[1] = \<const0> ;
  assign dmonitorout_out[0] = \<const0> ;
  assign dmonitoroutclk_out[0] = \<const0> ;
  assign drpdo_common_out[15] = \<const0> ;
  assign drpdo_common_out[14] = \<const0> ;
  assign drpdo_common_out[13] = \<const0> ;
  assign drpdo_common_out[12] = \<const0> ;
  assign drpdo_common_out[11] = \<const0> ;
  assign drpdo_common_out[10] = \<const0> ;
  assign drpdo_common_out[9] = \<const0> ;
  assign drpdo_common_out[8] = \<const0> ;
  assign drpdo_common_out[7] = \<const0> ;
  assign drpdo_common_out[6] = \<const0> ;
  assign drpdo_common_out[5] = \<const0> ;
  assign drpdo_common_out[4] = \<const0> ;
  assign drpdo_common_out[3] = \<const0> ;
  assign drpdo_common_out[2] = \<const0> ;
  assign drpdo_common_out[1] = \<const0> ;
  assign drpdo_common_out[0] = \<const0> ;
  assign drprdy_common_out[0] = \<const0> ;
  assign eyescandataerror_out[0] = \<const0> ;
  assign gthtxn_out[0] = \<const0> ;
  assign gthtxp_out[0] = \<const0> ;
  assign gtrefclkmonitor_out[0] = \<const0> ;
  assign gtwiz_buffbypass_rx_done_out[0] = \<const0> ;
  assign gtwiz_buffbypass_rx_error_out[0] = \<const0> ;
  assign gtwiz_buffbypass_tx_done_out[0] = \<const0> ;
  assign gtwiz_buffbypass_tx_error_out[0] = \<const0> ;
  assign gtwiz_reset_qpll0reset_out[0] = \<const0> ;
  assign gtwiz_reset_qpll1reset_out[0] = \<const0> ;
  assign gtwiz_reset_rx_cdr_stable_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_active_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_srcclk_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_usrclk2_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_usrclk_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_active_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_srcclk_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_usrclk2_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_usrclk_out[0] = \<const0> ;
  assign pcierategen3_out[0] = \<const0> ;
  assign pcierateidle_out[0] = \<const0> ;
  assign pcierateqpllpd_out[1] = \<const0> ;
  assign pcierateqpllpd_out[0] = \<const0> ;
  assign pcierateqpllreset_out[1] = \<const0> ;
  assign pcierateqpllreset_out[0] = \<const0> ;
  assign pciesynctxsyncdone_out[0] = \<const0> ;
  assign pcieusergen3rdy_out[0] = \<const0> ;
  assign pcieuserphystatusrst_out[0] = \<const0> ;
  assign pcieuserratestart_out[0] = \<const0> ;
  assign pcsrsvdout_out[15] = \<const0> ;
  assign pcsrsvdout_out[14] = \<const0> ;
  assign pcsrsvdout_out[13] = \<const0> ;
  assign pcsrsvdout_out[12] = \<const0> ;
  assign pcsrsvdout_out[11] = \<const0> ;
  assign pcsrsvdout_out[10] = \<const0> ;
  assign pcsrsvdout_out[9] = \<const0> ;
  assign pcsrsvdout_out[8] = \<const0> ;
  assign pcsrsvdout_out[7] = \<const0> ;
  assign pcsrsvdout_out[6] = \<const0> ;
  assign pcsrsvdout_out[5] = \<const0> ;
  assign pcsrsvdout_out[4] = \<const0> ;
  assign pcsrsvdout_out[3] = \<const0> ;
  assign pcsrsvdout_out[2] = \<const0> ;
  assign pcsrsvdout_out[1] = \<const0> ;
  assign pcsrsvdout_out[0] = \<const0> ;
  assign phystatus_out[0] = \<const0> ;
  assign pinrsrvdas_out[15] = \<const0> ;
  assign pinrsrvdas_out[14] = \<const0> ;
  assign pinrsrvdas_out[13] = \<const0> ;
  assign pinrsrvdas_out[12] = \<const0> ;
  assign pinrsrvdas_out[11] = \<const0> ;
  assign pinrsrvdas_out[10] = \<const0> ;
  assign pinrsrvdas_out[9] = \<const0> ;
  assign pinrsrvdas_out[8] = \<const0> ;
  assign pinrsrvdas_out[7] = \<const0> ;
  assign pinrsrvdas_out[6] = \<const0> ;
  assign pinrsrvdas_out[5] = \<const0> ;
  assign pinrsrvdas_out[4] = \<const0> ;
  assign pinrsrvdas_out[3] = \<const0> ;
  assign pinrsrvdas_out[2] = \<const0> ;
  assign pinrsrvdas_out[1] = \<const0> ;
  assign pinrsrvdas_out[0] = \<const0> ;
  assign pmarsvdout0_out[7] = \<const0> ;
  assign pmarsvdout0_out[6] = \<const0> ;
  assign pmarsvdout0_out[5] = \<const0> ;
  assign pmarsvdout0_out[4] = \<const0> ;
  assign pmarsvdout0_out[3] = \<const0> ;
  assign pmarsvdout0_out[2] = \<const0> ;
  assign pmarsvdout0_out[1] = \<const0> ;
  assign pmarsvdout0_out[0] = \<const0> ;
  assign pmarsvdout1_out[7] = \<const0> ;
  assign pmarsvdout1_out[6] = \<const0> ;
  assign pmarsvdout1_out[5] = \<const0> ;
  assign pmarsvdout1_out[4] = \<const0> ;
  assign pmarsvdout1_out[3] = \<const0> ;
  assign pmarsvdout1_out[2] = \<const0> ;
  assign pmarsvdout1_out[1] = \<const0> ;
  assign pmarsvdout1_out[0] = \<const0> ;
  assign powerpresent_out[0] = \<const0> ;
  assign qpll0fbclklost_out[0] = \<const0> ;
  assign qpll0lock_out[0] = \<const0> ;
  assign qpll0outclk_out[0] = \<const0> ;
  assign qpll0outrefclk_out[0] = \<const0> ;
  assign qpll0refclklost_out[0] = \<const0> ;
  assign qpll1fbclklost_out[0] = \<const0> ;
  assign qpll1lock_out[0] = \<const0> ;
  assign qpll1outclk_out[0] = \<const0> ;
  assign qpll1outrefclk_out[0] = \<const0> ;
  assign qpll1refclklost_out[0] = \<const0> ;
  assign qplldmonitor0_out[7] = \<const0> ;
  assign qplldmonitor0_out[6] = \<const0> ;
  assign qplldmonitor0_out[5] = \<const0> ;
  assign qplldmonitor0_out[4] = \<const0> ;
  assign qplldmonitor0_out[3] = \<const0> ;
  assign qplldmonitor0_out[2] = \<const0> ;
  assign qplldmonitor0_out[1] = \<const0> ;
  assign qplldmonitor0_out[0] = \<const0> ;
  assign qplldmonitor1_out[7] = \<const0> ;
  assign qplldmonitor1_out[6] = \<const0> ;
  assign qplldmonitor1_out[5] = \<const0> ;
  assign qplldmonitor1_out[4] = \<const0> ;
  assign qplldmonitor1_out[3] = \<const0> ;
  assign qplldmonitor1_out[2] = \<const0> ;
  assign qplldmonitor1_out[1] = \<const0> ;
  assign qplldmonitor1_out[0] = \<const0> ;
  assign refclkoutmonitor0_out[0] = \<const0> ;
  assign refclkoutmonitor1_out[0] = \<const0> ;
  assign resetexception_out[0] = \<const0> ;
  assign rxbufstatus_out[2] = \^rxbufstatus_out [2];
  assign rxbufstatus_out[1] = \<const0> ;
  assign rxbufstatus_out[0] = \<const0> ;
  assign rxbyteisaligned_out[0] = \<const0> ;
  assign rxbyterealign_out[0] = \<const0> ;
  assign rxcdrlock_out[0] = \<const0> ;
  assign rxcdrphdone_out[0] = \<const0> ;
  assign rxchanbondseq_out[0] = \<const0> ;
  assign rxchanisaligned_out[0] = \<const0> ;
  assign rxchanrealign_out[0] = \<const0> ;
  assign rxchbondo_out[4] = \<const0> ;
  assign rxchbondo_out[3] = \<const0> ;
  assign rxchbondo_out[2] = \<const0> ;
  assign rxchbondo_out[1] = \<const0> ;
  assign rxchbondo_out[0] = \<const0> ;
  assign rxckcaldone_out[0] = \<const0> ;
  assign rxclkcorcnt_out[1] = \<const0> ;
  assign rxclkcorcnt_out[0] = \<const0> ;
  assign rxcominitdet_out[0] = \<const0> ;
  assign rxcommadet_out[0] = \<const0> ;
  assign rxcomsasdet_out[0] = \<const0> ;
  assign rxcomwakedet_out[0] = \<const0> ;
  assign rxctrl0_out[15] = \<const0> ;
  assign rxctrl0_out[14] = \<const0> ;
  assign rxctrl0_out[13] = \<const0> ;
  assign rxctrl0_out[12] = \<const0> ;
  assign rxctrl0_out[11] = \<const0> ;
  assign rxctrl0_out[10] = \<const0> ;
  assign rxctrl0_out[9] = \<const0> ;
  assign rxctrl0_out[8] = \<const0> ;
  assign rxctrl0_out[7] = \<const0> ;
  assign rxctrl0_out[6] = \<const0> ;
  assign rxctrl0_out[5] = \<const0> ;
  assign rxctrl0_out[4] = \<const0> ;
  assign rxctrl0_out[3] = \<const0> ;
  assign rxctrl0_out[2] = \<const0> ;
  assign rxctrl0_out[1] = \<const0> ;
  assign rxctrl0_out[0] = \<const0> ;
  assign rxctrl1_out[15] = \<const0> ;
  assign rxctrl1_out[14] = \<const0> ;
  assign rxctrl1_out[13] = \<const0> ;
  assign rxctrl1_out[12] = \<const0> ;
  assign rxctrl1_out[11] = \<const0> ;
  assign rxctrl1_out[10] = \<const0> ;
  assign rxctrl1_out[9] = \<const0> ;
  assign rxctrl1_out[8] = \<const0> ;
  assign rxctrl1_out[7] = \<const0> ;
  assign rxctrl1_out[6] = \<const0> ;
  assign rxctrl1_out[5] = \<const0> ;
  assign rxctrl1_out[4] = \<const0> ;
  assign rxctrl1_out[3] = \<const0> ;
  assign rxctrl1_out[2] = \<const0> ;
  assign rxctrl1_out[1] = \<const0> ;
  assign rxctrl1_out[0] = \<const0> ;
  assign rxctrl2_out[7] = \<const0> ;
  assign rxctrl2_out[6] = \<const0> ;
  assign rxctrl2_out[5] = \<const0> ;
  assign rxctrl2_out[4] = \<const0> ;
  assign rxctrl2_out[3] = \<const0> ;
  assign rxctrl2_out[2] = \<const0> ;
  assign rxctrl2_out[1] = \<const0> ;
  assign rxctrl2_out[0] = \<const0> ;
  assign rxctrl3_out[7] = \<const0> ;
  assign rxctrl3_out[6] = \<const0> ;
  assign rxctrl3_out[5] = \<const0> ;
  assign rxctrl3_out[4] = \<const0> ;
  assign rxctrl3_out[3] = \<const0> ;
  assign rxctrl3_out[2] = \<const0> ;
  assign rxctrl3_out[1] = \<const0> ;
  assign rxctrl3_out[0] = \<const0> ;
  assign rxdata_out[127] = \<const0> ;
  assign rxdata_out[126] = \<const0> ;
  assign rxdata_out[125] = \<const0> ;
  assign rxdata_out[124] = \<const0> ;
  assign rxdata_out[123] = \<const0> ;
  assign rxdata_out[122] = \<const0> ;
  assign rxdata_out[121] = \<const0> ;
  assign rxdata_out[120] = \<const0> ;
  assign rxdata_out[119] = \<const0> ;
  assign rxdata_out[118] = \<const0> ;
  assign rxdata_out[117] = \<const0> ;
  assign rxdata_out[116] = \<const0> ;
  assign rxdata_out[115] = \<const0> ;
  assign rxdata_out[114] = \<const0> ;
  assign rxdata_out[113] = \<const0> ;
  assign rxdata_out[112] = \<const0> ;
  assign rxdata_out[111] = \<const0> ;
  assign rxdata_out[110] = \<const0> ;
  assign rxdata_out[109] = \<const0> ;
  assign rxdata_out[108] = \<const0> ;
  assign rxdata_out[107] = \<const0> ;
  assign rxdata_out[106] = \<const0> ;
  assign rxdata_out[105] = \<const0> ;
  assign rxdata_out[104] = \<const0> ;
  assign rxdata_out[103] = \<const0> ;
  assign rxdata_out[102] = \<const0> ;
  assign rxdata_out[101] = \<const0> ;
  assign rxdata_out[100] = \<const0> ;
  assign rxdata_out[99] = \<const0> ;
  assign rxdata_out[98] = \<const0> ;
  assign rxdata_out[97] = \<const0> ;
  assign rxdata_out[96] = \<const0> ;
  assign rxdata_out[95] = \<const0> ;
  assign rxdata_out[94] = \<const0> ;
  assign rxdata_out[93] = \<const0> ;
  assign rxdata_out[92] = \<const0> ;
  assign rxdata_out[91] = \<const0> ;
  assign rxdata_out[90] = \<const0> ;
  assign rxdata_out[89] = \<const0> ;
  assign rxdata_out[88] = \<const0> ;
  assign rxdata_out[87] = \<const0> ;
  assign rxdata_out[86] = \<const0> ;
  assign rxdata_out[85] = \<const0> ;
  assign rxdata_out[84] = \<const0> ;
  assign rxdata_out[83] = \<const0> ;
  assign rxdata_out[82] = \<const0> ;
  assign rxdata_out[81] = \<const0> ;
  assign rxdata_out[80] = \<const0> ;
  assign rxdata_out[79] = \<const0> ;
  assign rxdata_out[78] = \<const0> ;
  assign rxdata_out[77] = \<const0> ;
  assign rxdata_out[76] = \<const0> ;
  assign rxdata_out[75] = \<const0> ;
  assign rxdata_out[74] = \<const0> ;
  assign rxdata_out[73] = \<const0> ;
  assign rxdata_out[72] = \<const0> ;
  assign rxdata_out[71] = \<const0> ;
  assign rxdata_out[70] = \<const0> ;
  assign rxdata_out[69] = \<const0> ;
  assign rxdata_out[68] = \<const0> ;
  assign rxdata_out[67] = \<const0> ;
  assign rxdata_out[66] = \<const0> ;
  assign rxdata_out[65] = \<const0> ;
  assign rxdata_out[64] = \<const0> ;
  assign rxdata_out[63] = \<const0> ;
  assign rxdata_out[62] = \<const0> ;
  assign rxdata_out[61] = \<const0> ;
  assign rxdata_out[60] = \<const0> ;
  assign rxdata_out[59] = \<const0> ;
  assign rxdata_out[58] = \<const0> ;
  assign rxdata_out[57] = \<const0> ;
  assign rxdata_out[56] = \<const0> ;
  assign rxdata_out[55] = \<const0> ;
  assign rxdata_out[54] = \<const0> ;
  assign rxdata_out[53] = \<const0> ;
  assign rxdata_out[52] = \<const0> ;
  assign rxdata_out[51] = \<const0> ;
  assign rxdata_out[50] = \<const0> ;
  assign rxdata_out[49] = \<const0> ;
  assign rxdata_out[48] = \<const0> ;
  assign rxdata_out[47] = \<const0> ;
  assign rxdata_out[46] = \<const0> ;
  assign rxdata_out[45] = \<const0> ;
  assign rxdata_out[44] = \<const0> ;
  assign rxdata_out[43] = \<const0> ;
  assign rxdata_out[42] = \<const0> ;
  assign rxdata_out[41] = \<const0> ;
  assign rxdata_out[40] = \<const0> ;
  assign rxdata_out[39] = \<const0> ;
  assign rxdata_out[38] = \<const0> ;
  assign rxdata_out[37] = \<const0> ;
  assign rxdata_out[36] = \<const0> ;
  assign rxdata_out[35] = \<const0> ;
  assign rxdata_out[34] = \<const0> ;
  assign rxdata_out[33] = \<const0> ;
  assign rxdata_out[32] = \<const0> ;
  assign rxdata_out[31] = \<const0> ;
  assign rxdata_out[30] = \<const0> ;
  assign rxdata_out[29] = \<const0> ;
  assign rxdata_out[28] = \<const0> ;
  assign rxdata_out[27] = \<const0> ;
  assign rxdata_out[26] = \<const0> ;
  assign rxdata_out[25] = \<const0> ;
  assign rxdata_out[24] = \<const0> ;
  assign rxdata_out[23] = \<const0> ;
  assign rxdata_out[22] = \<const0> ;
  assign rxdata_out[21] = \<const0> ;
  assign rxdata_out[20] = \<const0> ;
  assign rxdata_out[19] = \<const0> ;
  assign rxdata_out[18] = \<const0> ;
  assign rxdata_out[17] = \<const0> ;
  assign rxdata_out[16] = \<const0> ;
  assign rxdata_out[15] = \<const0> ;
  assign rxdata_out[14] = \<const0> ;
  assign rxdata_out[13] = \<const0> ;
  assign rxdata_out[12] = \<const0> ;
  assign rxdata_out[11] = \<const0> ;
  assign rxdata_out[10] = \<const0> ;
  assign rxdata_out[9] = \<const0> ;
  assign rxdata_out[8] = \<const0> ;
  assign rxdata_out[7] = \<const0> ;
  assign rxdata_out[6] = \<const0> ;
  assign rxdata_out[5] = \<const0> ;
  assign rxdata_out[4] = \<const0> ;
  assign rxdata_out[3] = \<const0> ;
  assign rxdata_out[2] = \<const0> ;
  assign rxdata_out[1] = \<const0> ;
  assign rxdata_out[0] = \<const0> ;
  assign rxdataextendrsvd_out[7] = \<const0> ;
  assign rxdataextendrsvd_out[6] = \<const0> ;
  assign rxdataextendrsvd_out[5] = \<const0> ;
  assign rxdataextendrsvd_out[4] = \<const0> ;
  assign rxdataextendrsvd_out[3] = \<const0> ;
  assign rxdataextendrsvd_out[2] = \<const0> ;
  assign rxdataextendrsvd_out[1] = \<const0> ;
  assign rxdataextendrsvd_out[0] = \<const0> ;
  assign rxdatavalid_out[1] = \<const0> ;
  assign rxdatavalid_out[0] = \^rxdatavalid_out [0];
  assign rxdlysresetdone_out[0] = \<const0> ;
  assign rxelecidle_out[0] = \<const0> ;
  assign rxheader_out[5] = \<const0> ;
  assign rxheader_out[4] = \<const0> ;
  assign rxheader_out[3] = \<const0> ;
  assign rxheader_out[2] = \<const0> ;
  assign rxheader_out[1:0] = \^rxheader_out [1:0];
  assign rxheadervalid_out[1] = \<const0> ;
  assign rxheadervalid_out[0] = \^rxheadervalid_out [0];
  assign rxlfpstresetdet_out[0] = \<const0> ;
  assign rxlfpsu2lpexitdet_out[0] = \<const0> ;
  assign rxlfpsu3wakedet_out[0] = \<const0> ;
  assign rxmonitorout_out[7] = \<const0> ;
  assign rxmonitorout_out[6] = \<const0> ;
  assign rxmonitorout_out[5] = \<const0> ;
  assign rxmonitorout_out[4] = \<const0> ;
  assign rxmonitorout_out[3] = \<const0> ;
  assign rxmonitorout_out[2] = \<const0> ;
  assign rxmonitorout_out[1] = \<const0> ;
  assign rxmonitorout_out[0] = \<const0> ;
  assign rxosintdone_out[0] = \<const0> ;
  assign rxosintstarted_out[0] = \<const0> ;
  assign rxosintstrobedone_out[0] = \<const0> ;
  assign rxosintstrobestarted_out[0] = \<const0> ;
  assign rxoutclkfabric_out[0] = \<const0> ;
  assign rxoutclkpcs_out[0] = \<const0> ;
  assign rxphaligndone_out[0] = \<const0> ;
  assign rxphalignerr_out[0] = \<const0> ;
  assign rxprbserr_out[0] = \<const0> ;
  assign rxprbslocked_out[0] = \<const0> ;
  assign rxprgdivresetdone_out[0] = \<const0> ;
  assign rxqpisenn_out[0] = \<const0> ;
  assign rxqpisenp_out[0] = \<const0> ;
  assign rxratedone_out[0] = \<const0> ;
  assign rxrecclk0_sel_out[0] = \<const0> ;
  assign rxrecclk0sel_out[1] = \<const0> ;
  assign rxrecclk0sel_out[0] = \<const0> ;
  assign rxrecclk1_sel_out[0] = \<const0> ;
  assign rxrecclk1sel_out[1] = \<const0> ;
  assign rxrecclk1sel_out[0] = \<const0> ;
  assign rxrecclkout_out[0] = \<const0> ;
  assign rxresetdone_out[0] = \<const0> ;
  assign rxsliderdy_out[0] = \<const0> ;
  assign rxslipdone_out[0] = \<const0> ;
  assign rxslipoutclkrdy_out[0] = \<const0> ;
  assign rxslippmardy_out[0] = \<const0> ;
  assign rxstartofseq_out[1] = \<const0> ;
  assign rxstartofseq_out[0] = \<const0> ;
  assign rxstatus_out[2] = \<const0> ;
  assign rxstatus_out[1] = \<const0> ;
  assign rxstatus_out[0] = \<const0> ;
  assign rxsyncdone_out[0] = \<const0> ;
  assign rxsyncout_out[0] = \<const0> ;
  assign rxvalid_out[0] = \<const0> ;
  assign sdm0finalout_out[3] = \<const0> ;
  assign sdm0finalout_out[2] = \<const0> ;
  assign sdm0finalout_out[1] = \<const0> ;
  assign sdm0finalout_out[0] = \<const0> ;
  assign sdm0testdata_out[14] = \<const0> ;
  assign sdm0testdata_out[13] = \<const0> ;
  assign sdm0testdata_out[12] = \<const0> ;
  assign sdm0testdata_out[11] = \<const0> ;
  assign sdm0testdata_out[10] = \<const0> ;
  assign sdm0testdata_out[9] = \<const0> ;
  assign sdm0testdata_out[8] = \<const0> ;
  assign sdm0testdata_out[7] = \<const0> ;
  assign sdm0testdata_out[6] = \<const0> ;
  assign sdm0testdata_out[5] = \<const0> ;
  assign sdm0testdata_out[4] = \<const0> ;
  assign sdm0testdata_out[3] = \<const0> ;
  assign sdm0testdata_out[2] = \<const0> ;
  assign sdm0testdata_out[1] = \<const0> ;
  assign sdm0testdata_out[0] = \<const0> ;
  assign sdm1finalout_out[3] = \<const0> ;
  assign sdm1finalout_out[2] = \<const0> ;
  assign sdm1finalout_out[1] = \<const0> ;
  assign sdm1finalout_out[0] = \<const0> ;
  assign sdm1testdata_out[14] = \<const0> ;
  assign sdm1testdata_out[13] = \<const0> ;
  assign sdm1testdata_out[12] = \<const0> ;
  assign sdm1testdata_out[11] = \<const0> ;
  assign sdm1testdata_out[10] = \<const0> ;
  assign sdm1testdata_out[9] = \<const0> ;
  assign sdm1testdata_out[8] = \<const0> ;
  assign sdm1testdata_out[7] = \<const0> ;
  assign sdm1testdata_out[6] = \<const0> ;
  assign sdm1testdata_out[5] = \<const0> ;
  assign sdm1testdata_out[4] = \<const0> ;
  assign sdm1testdata_out[3] = \<const0> ;
  assign sdm1testdata_out[2] = \<const0> ;
  assign sdm1testdata_out[1] = \<const0> ;
  assign sdm1testdata_out[0] = \<const0> ;
  assign tcongpo_out[0] = \<const0> ;
  assign tconrsvdout0_out[0] = \<const0> ;
  assign txbufstatus_out[1] = \^txbufstatus_out [1];
  assign txbufstatus_out[0] = \<const0> ;
  assign txcomfinish_out[0] = \<const0> ;
  assign txdccdone_out[0] = \<const0> ;
  assign txdlysresetdone_out[0] = \<const0> ;
  assign txoutclkfabric_out[0] = \<const0> ;
  assign txoutclkpcs_out[0] = \<const0> ;
  assign txphaligndone_out[0] = \<const0> ;
  assign txphinitdone_out[0] = \<const0> ;
  assign txprgdivresetdone_out[0] = \<const0> ;
  assign txqpisenn_out[0] = \<const0> ;
  assign txqpisenp_out[0] = \<const0> ;
  assign txratedone_out[0] = \<const0> ;
  assign txresetdone_out[0] = \<const0> ;
  assign txsyncdone_out[0] = \<const0> ;
  assign txsyncout_out[0] = \<const0> ;
  assign ubdaddr_out[15] = \<const0> ;
  assign ubdaddr_out[14] = \<const0> ;
  assign ubdaddr_out[13] = \<const0> ;
  assign ubdaddr_out[12] = \<const0> ;
  assign ubdaddr_out[11] = \<const0> ;
  assign ubdaddr_out[10] = \<const0> ;
  assign ubdaddr_out[9] = \<const0> ;
  assign ubdaddr_out[8] = \<const0> ;
  assign ubdaddr_out[7] = \<const0> ;
  assign ubdaddr_out[6] = \<const0> ;
  assign ubdaddr_out[5] = \<const0> ;
  assign ubdaddr_out[4] = \<const0> ;
  assign ubdaddr_out[3] = \<const0> ;
  assign ubdaddr_out[2] = \<const0> ;
  assign ubdaddr_out[1] = \<const0> ;
  assign ubdaddr_out[0] = \<const0> ;
  assign ubden_out[0] = \<const0> ;
  assign ubdi_out[15] = \<const0> ;
  assign ubdi_out[14] = \<const0> ;
  assign ubdi_out[13] = \<const0> ;
  assign ubdi_out[12] = \<const0> ;
  assign ubdi_out[11] = \<const0> ;
  assign ubdi_out[10] = \<const0> ;
  assign ubdi_out[9] = \<const0> ;
  assign ubdi_out[8] = \<const0> ;
  assign ubdi_out[7] = \<const0> ;
  assign ubdi_out[6] = \<const0> ;
  assign ubdi_out[5] = \<const0> ;
  assign ubdi_out[4] = \<const0> ;
  assign ubdi_out[3] = \<const0> ;
  assign ubdi_out[2] = \<const0> ;
  assign ubdi_out[1] = \<const0> ;
  assign ubdi_out[0] = \<const0> ;
  assign ubdwe_out[0] = \<const0> ;
  assign ubmdmtdo_out[0] = \<const0> ;
  assign ubrsvdout_out[0] = \<const0> ;
  assign ubtxuart_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  aurora_64b66b_SL_aurora_64b66b_SL_gt_gtwizard_gtye4 \gen_gtwizard_gtye4_top.aurora_64b66b_SL_gt_gtwizard_gtye4_inst 
       (.cplllock_out(cplllock_out),
        .drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drpwe_in(drpwe_in),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk0_in(gtrefclk0_in),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .gtwiz_userclk_tx_reset_in(gtwiz_userclk_tx_reset_in),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .rxbufstatus_out(\^rxbufstatus_out ),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxdatavalid_out(\^rxdatavalid_out ),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(\^rxheader_out ),
        .rxheadervalid_out(\^rxheadervalid_out ),
        .rxoutclk_out(rxoutclk_out),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(\^txbufstatus_out ),
        .txheader_in(txheader_in[1:0]),
        .txoutclk_out(txoutclk_out),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txsequence_in(txsequence_in),
        .txusrclk_in(txusrclk_in));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_gt_gtye4_channel_wrapper
   (in0,
    \gen_gtwizard_gtye4.drprdy_int ,
    \gen_gtwizard_gtye4.gtpowergood_int ,
    gtytxn_out,
    gtytxp_out,
    rxcdrlock_out,
    rxoutclk_out,
    rxpmaresetdone_out,
    rxresetdone_out,
    txoutclk_out,
    txoutclkpcs_out,
    txpmaresetdone_out,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ,
    txresetdone_out,
    gtwiz_userdata_rx_out,
    D,
    rxdatavalid_out,
    rxheadervalid_out,
    txbufstatus_out,
    rxbufstatus_out,
    rxheader_out,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 ,
    drpclk_in,
    \gen_gtwizard_gtye4.drpen_ch_int ,
    \gen_gtwizard_gtye4.drpwe_ch_int ,
    gtrefclk0_in,
    \gen_gtwizard_gtye4.gtrxreset_int ,
    \gen_gtwizard_gtye4.gttxreset_ch_int ,
    gtyrxn_in,
    gtyrxp_in,
    rxcdrovrden_in,
    rxgearboxslip_in,
    rxpolarity_in,
    \gen_gtwizard_gtye4.rxprogdivreset_int ,
    \gen_gtwizard_gtye4.rxuserrdy_int ,
    rxusrclk_in,
    rxusrclk2_in,
    TXRATE,
    \gen_gtwizard_gtye4.txprogdivreset_ch_int ,
    \gen_gtwizard_gtye4.txuserrdy_int ,
    txusrclk_in,
    gtwiz_userdata_tx_in,
    Q,
    loopback_in,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_3 ,
    txheader_in,
    txsequence_in,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_4 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  output in0;
  output \gen_gtwizard_gtye4.drprdy_int ;
  output \gen_gtwizard_gtye4.gtpowergood_int ;
  output [0:0]gtytxn_out;
  output [0:0]gtytxp_out;
  output [0:0]rxcdrlock_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxresetdone_out;
  output [0:0]txoutclk_out;
  output [0:0]txoutclkpcs_out;
  output [0:0]txpmaresetdone_out;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ;
  output [0:0]txresetdone_out;
  output [63:0]gtwiz_userdata_rx_out;
  output [15:0]D;
  output [0:0]rxdatavalid_out;
  output [0:0]rxheadervalid_out;
  output [0:0]txbufstatus_out;
  output [0:0]rxbufstatus_out;
  output [1:0]rxheader_out;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ;
  input \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 ;
  input \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 ;
  input [0:0]drpclk_in;
  input \gen_gtwizard_gtye4.drpen_ch_int ;
  input \gen_gtwizard_gtye4.drpwe_ch_int ;
  input [0:0]gtrefclk0_in;
  input \gen_gtwizard_gtye4.gtrxreset_int ;
  input \gen_gtwizard_gtye4.gttxreset_ch_int ;
  input [0:0]gtyrxn_in;
  input [0:0]gtyrxp_in;
  input [0:0]rxcdrovrden_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxpolarity_in;
  input \gen_gtwizard_gtye4.rxprogdivreset_int ;
  input \gen_gtwizard_gtye4.rxuserrdy_int ;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]TXRATE;
  input \gen_gtwizard_gtye4.txprogdivreset_ch_int ;
  input \gen_gtwizard_gtye4.txuserrdy_int ;
  input [0:0]txusrclk_in;
  input [63:0]gtwiz_userdata_tx_in;
  input [15:0]Q;
  input [2:0]loopback_in;
  input [2:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_3 ;
  input [1:0]txheader_in;
  input [6:0]txsequence_in;
  input [9:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_4 ;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire [15:0]D;
  wire [15:0]Q;
  wire [0:0]TXRATE;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.drpen_ch_int ;
  wire \gen_gtwizard_gtye4.drprdy_int ;
  wire \gen_gtwizard_gtye4.drpwe_ch_int ;
  wire \gen_gtwizard_gtye4.gtpowergood_int ;
  wire \gen_gtwizard_gtye4.gtrxreset_int ;
  wire \gen_gtwizard_gtye4.gttxreset_ch_int ;
  wire \gen_gtwizard_gtye4.rxprogdivreset_int ;
  wire \gen_gtwizard_gtye4.rxuserrdy_int ;
  wire \gen_gtwizard_gtye4.txprogdivreset_ch_int ;
  wire \gen_gtwizard_gtye4.txuserrdy_int ;
  wire [0:0]gtrefclk0_in;
  wire [63:0]gtwiz_userdata_rx_out;
  wire [63:0]gtwiz_userdata_tx_in;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 ;
  wire [2:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_3 ;
  wire [9:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_4 ;
  wire [0:0]gtyrxn_in;
  wire [0:0]gtyrxp_in;
  wire [0:0]gtytxn_out;
  wire [0:0]gtytxp_out;
  wire in0;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire [0:0]rxbufstatus_out;
  wire [0:0]rxcdrlock_out;
  wire [0:0]rxcdrovrden_in;
  wire [0:0]rxdatavalid_out;
  wire [0:0]rxgearboxslip_in;
  wire [1:0]rxheader_out;
  wire [0:0]rxheadervalid_out;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxresetdone_out;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [0:0]txbufstatus_out;
  wire [1:0]txheader_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txoutclkpcs_out;
  wire [0:0]txpmaresetdone_out;
  wire [0:0]txresetdone_out;
  wire [6:0]txsequence_in;
  wire [0:0]txusrclk_in;

  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gtye4_channel channel_inst
       (.D(D),
        .Q(Q),
        .TXRATE(TXRATE),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.drpen_ch_int (\gen_gtwizard_gtye4.drpen_ch_int ),
        .\gen_gtwizard_gtye4.drprdy_int (\gen_gtwizard_gtye4.drprdy_int ),
        .\gen_gtwizard_gtye4.drpwe_ch_int (\gen_gtwizard_gtye4.drpwe_ch_int ),
        .\gen_gtwizard_gtye4.gtpowergood_int (\gen_gtwizard_gtye4.gtpowergood_int ),
        .\gen_gtwizard_gtye4.gtrxreset_int (\gen_gtwizard_gtye4.gtrxreset_int ),
        .\gen_gtwizard_gtye4.gttxreset_ch_int (\gen_gtwizard_gtye4.gttxreset_ch_int ),
        .\gen_gtwizard_gtye4.rxprogdivreset_int (\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .\gen_gtwizard_gtye4.rxuserrdy_int (\gen_gtwizard_gtye4.rxuserrdy_int ),
        .\gen_gtwizard_gtye4.txprogdivreset_ch_int (\gen_gtwizard_gtye4.txprogdivreset_ch_int ),
        .\gen_gtwizard_gtye4.txuserrdy_int (\gen_gtwizard_gtye4.txuserrdy_int ),
        .gtrefclk0_in(gtrefclk0_in),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 (\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 (\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 (\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_3 (\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_4 (\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_3 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_5 (\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_4 ),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .in0(in0),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .rxbufstatus_out(rxbufstatus_out),
        .rxcdrlock_out(rxcdrlock_out),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxdatavalid_out(rxdatavalid_out),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxoutclk_out(rxoutclk_out),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxresetdone_out(rxresetdone_out),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(txbufstatus_out),
        .txheader_in(txheader_in),
        .txoutclk_out(txoutclk_out),
        .txoutclkpcs_out(txoutclkpcs_out),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txresetdone_out(txresetdone_out),
        .txsequence_in(txsequence_in),
        .txusrclk_in(txusrclk_in));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync
   (D,
    pma_init,
    init_clk);
  output [0:0]D;
  input pma_init;
  input init_clk;

  wire [0:0]D;
  wire init_clk;
  wire pma_init;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(pma_init),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(D),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync_0
   (D,
    reset_pb,
    CLK);
  output [0:0]D;
  input reset_pb;
  input CLK;

  wire CLK;
  wire [0:0]D;
  wire reset_pb;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reset_pb),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(CLK),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(CLK),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(CLK),
        .CE(1'b1),
        .D(stg4),
        .Q(D),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync_1
   (SS,
    in0,
    CLK);
  output [0:0]SS;
  input in0;
  input CLK;

  wire CLK;
  wire [0:0]SS;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(CLK),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(CLK),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(CLK),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(CLK),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(SS),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync_2
   (link_reset_sync,
    link_reset_out,
    stg5_reg_0);
  output link_reset_sync;
  input link_reset_out;
  input stg5_reg_0;

  wire link_reset_out;
  wire link_reset_sync;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(link_reset_out),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(link_reset_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync_3
   (power_down_sync,
    power_down,
    stg4_reg_0);
  output power_down_sync;
  input power_down;
  input stg4_reg_0;

  wire power_down;
  wire power_down_sync;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_0;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(power_down),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(power_down_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync_4
   (fsm_resetdone_sync,
    stg1_aurora_64b66b_SL_cdc_to_reg_0,
    stg4_reg_0);
  output fsm_resetdone_sync;
  input stg1_aurora_64b66b_SL_cdc_to_reg_0;
  input stg4_reg_0;

  wire fsm_resetdone_sync;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  wire stg1_aurora_64b66b_SL_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire stg4_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to_reg_0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg4),
        .Q(fsm_resetdone_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync_5
   (rst_pma_init_usrclk,
    TX_HEADER_1_reg,
    stg5_reg_0,
    stg1_aurora_64b66b_SL_cdc_to_reg_0,
    stg5_reg_1,
    TX_HEADER_1_reg_0,
    txdatavalid_symgen_i,
    channel_up_tx_if,
    TX_HEADER_1_reg_1,
    TX_HEADER_1_reg_2,
    gen_cc_i,
    gen_ch_bond_i);
  output rst_pma_init_usrclk;
  output TX_HEADER_1_reg;
  output stg5_reg_0;
  input stg1_aurora_64b66b_SL_cdc_to_reg_0;
  input stg5_reg_1;
  input [0:0]TX_HEADER_1_reg_0;
  input txdatavalid_symgen_i;
  input channel_up_tx_if;
  input TX_HEADER_1_reg_1;
  input TX_HEADER_1_reg_2;
  input gen_cc_i;
  input gen_ch_bond_i;

  wire TX_HEADER_1_reg;
  wire [0:0]TX_HEADER_1_reg_0;
  wire TX_HEADER_1_reg_1;
  wire TX_HEADER_1_reg_2;
  wire channel_up_tx_if;
  wire gen_cc_i;
  wire gen_ch_bond_i;
  wire rst_pma_init_usrclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  wire stg1_aurora_64b66b_SL_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire stg5_reg_0;
  wire stg5_reg_1;
  wire txdatavalid_symgen_i;

  LUT3 #(
    .INIT(8'h01)) 
    \TX_DATA[53]_i_2 
       (.I0(rst_pma_init_usrclk),
        .I1(gen_cc_i),
        .I2(gen_ch_bond_i),
        .O(stg5_reg_0));
  LUT6 #(
    .INIT(64'h00000000EEEE22E2)) 
    TX_HEADER_1_i_1
       (.I0(TX_HEADER_1_reg_0),
        .I1(txdatavalid_symgen_i),
        .I2(channel_up_tx_if),
        .I3(TX_HEADER_1_reg_1),
        .I4(TX_HEADER_1_reg_2),
        .I5(rst_pma_init_usrclk),
        .O(TX_HEADER_1_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to_reg_0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg4),
        .Q(rst_pma_init_usrclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized0
   (stg3_reg_0,
    out,
    stg2_reg_0);
  output stg3_reg_0;
  input out;
  input stg2_reg_0;

  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  wire stg2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  assign stg3_reg_0 = stg3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(stg2_reg_0),
        .CE(1'b1),
        .D(out),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg2_reg_0),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg2_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized0_10
   (out,
    gtwiz_userclk_rx_usrclk_out);
  input out;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(out),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized0_11
   (stg3_reg_0,
    out,
    stg3_reg_1,
    FSM_RESETDONE_j_reg);
  output stg3_reg_0;
  input out;
  input stg3_reg_1;
  input FSM_RESETDONE_j_reg;

  wire FSM_RESETDONE_j_reg;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;
  wire stg3_reg_1;

  LUT2 #(
    .INIT(4'h8)) 
    prmry_in_inferred_i_1__0
       (.I0(stg3),
        .I1(FSM_RESETDONE_j_reg),
        .O(stg3_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(stg3_reg_1),
        .CE(1'b1),
        .D(out),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg3_reg_1),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg3_reg_1),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized0_12
   (out,
    gtwiz_userclk_rx_usrclk_out);
  input out;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(out),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1
   (E,
    in0,
    init_clk,
    Q,
    \FSM_onehot_cdr_reset_fsm_r_reg[0] );
  output [0:0]E;
  input in0;
  input init_clk;
  input [2:0]Q;
  input \FSM_onehot_cdr_reset_fsm_r_reg[0] ;

  wire [0:0]E;
  wire \FSM_onehot_cdr_reset_fsm_r_reg[0] ;
  wire [2:0]Q;
  wire blocksync_all_lanes_instableclk;
  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \FSM_onehot_cdr_reset_fsm_r[2]_i_2 
       (.I0(Q[1]),
        .I1(\FSM_onehot_cdr_reset_fsm_r_reg[0] ),
        .I2(blocksync_all_lanes_instableclk),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(blocksync_all_lanes_instableclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_13
   (rxlossofsync_out_i,
    in0,
    gtwiz_userclk_rx_usrclk_out,
    blocksync_out_i);
  output rxlossofsync_out_i;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;
  input blocksync_out_i;

  wire allow_block_sync_propagation_inrxclk;
  wire blocksync_out_i;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire rxlossofsync_out_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  LUT2 #(
    .INIT(4'h8)) 
    rxlossofsync_out_q_i_1
       (.I0(allow_block_sync_propagation_inrxclk),
        .I1(blocksync_out_i),
        .O(rxlossofsync_out_i));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(allow_block_sync_propagation_inrxclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_14
   (stg5_reg_0,
    in0,
    gtwiz_userclk_rx_usrclk_out,
    fsm_resetdone_to_rxreset_in,
    out);
  output stg5_reg_0;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;
  input fsm_resetdone_to_rxreset_in;
  input [0:0]out;

  wire fsm_resetdone_to_new_gtx_rx_comb;
  wire fsm_resetdone_to_rxreset_in;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire [0:0]out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;

  LUT3 #(
    .INIT(8'hDF)) 
    new_gtx_rx_pcsreset_comb_i_1
       (.I0(fsm_resetdone_to_new_gtx_rx_comb),
        .I1(fsm_resetdone_to_rxreset_in),
        .I2(out),
        .O(stg5_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_to_new_gtx_rx_comb),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_15
   (fsm_resetdone_initclk,
    \dly_gt_rst_r_reg[18] ,
    in0,
    init_clk,
    \count_for_reset_r_reg[23] ,
    \count_for_reset_r_reg[23]_0 ,
    reset_initclk,
    out,
    valid_btf_detect_dlyd1);
  output fsm_resetdone_initclk;
  output \dly_gt_rst_r_reg[18] ;
  input in0;
  input init_clk;
  input \count_for_reset_r_reg[23] ;
  input \count_for_reset_r_reg[23]_0 ;
  input reset_initclk;
  input out;
  input valid_btf_detect_dlyd1;

  wire \count_for_reset_r_reg[23] ;
  wire \count_for_reset_r_reg[23]_0 ;
  wire \dly_gt_rst_r_reg[18] ;
  wire fsm_resetdone_initclk;
  wire in0;
  wire init_clk;
  wire out;
  wire reset_initclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire valid_btf_detect_dlyd1;

  LUT6 #(
    .INIT(64'hFFFFFFFFEEEEFFEF)) 
    \count_for_reset_r[0]_i_1 
       (.I0(\count_for_reset_r_reg[23] ),
        .I1(\count_for_reset_r_reg[23]_0 ),
        .I2(fsm_resetdone_initclk),
        .I3(reset_initclk),
        .I4(out),
        .I5(valid_btf_detect_dlyd1),
        .O(\dly_gt_rst_r_reg[18] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_initclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_16
   (SR,
    in0,
    stg4_reg_0);
  output [0:0]SR;
  input in0;
  input stg4_reg_0;

  wire [0:0]SR;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_0;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(SR),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_17
   (reset_initclk,
    SR,
    sys_reset_out,
    init_clk,
    out,
    fsm_resetdone_initclk,
    \hard_err_cntr_r_reg[7] ,
    \hard_err_cntr_r_reg[7]_0 );
  output reset_initclk;
  output [0:0]SR;
  input sys_reset_out;
  input init_clk;
  input out;
  input fsm_resetdone_initclk;
  input \hard_err_cntr_r_reg[7] ;
  input \hard_err_cntr_r_reg[7]_0 ;

  wire [0:0]SR;
  wire fsm_resetdone_initclk;
  wire \hard_err_cntr_r_reg[7] ;
  wire \hard_err_cntr_r_reg[7]_0 ;
  wire init_clk;
  wire out;
  wire reset_initclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire sys_reset_out;

  LUT5 #(
    .INIT(32'hFFFFFF45)) 
    \hard_err_cntr_r[7]_i_1 
       (.I0(out),
        .I1(reset_initclk),
        .I2(fsm_resetdone_initclk),
        .I3(\hard_err_cntr_r_reg[7] ),
        .I4(\hard_err_cntr_r_reg[7]_0 ),
        .O(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(sys_reset_out),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(reset_initclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_18
   (fsm_resetdone_to_rxreset_in,
    in0,
    gtwiz_userclk_rx_usrclk_out);
  output fsm_resetdone_to_rxreset_in;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;

  wire fsm_resetdone_to_rxreset_in;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_to_rxreset_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_19
   (in0,
    E,
    init_clk);
  output in0;
  input [0:0]E;
  input init_clk;

  wire [0:0]E;
  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(E),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_21
   (stg5_reg_0,
    in0,
    stg4_reg_0);
  output stg5_reg_0;
  input in0;
  input stg4_reg_0;

  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_0;
  wire stg4_reg_n_0;
  wire stg5_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg5_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_22
   (stg5,
    stg1_aurora_64b66b_SL_cdc_to_reg_0,
    stg4_reg_0);
  output stg5;
  input [0:0]stg1_aurora_64b66b_SL_cdc_to_reg_0;
  input stg4_reg_0;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  wire [0:0]stg1_aurora_64b66b_SL_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_0;
  wire stg4_reg_n_0;
  wire stg5;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to_reg_0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg5),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_23
   (stg5_reg_0,
    in0,
    gtwiz_userclk_rx_usrclk_out,
    stg1_aurora_64b66b_SL_cdc_to_reg_0);
  output stg5_reg_0;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;
  input stg1_aurora_64b66b_SL_cdc_to_reg_0;

  wire fifo_reset_wr_sync3;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  wire stg1_aurora_64b66b_SL_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;

  LUT2 #(
    .INIT(4'hE)) 
    prmry_in_inferred_i_1
       (.I0(fifo_reset_wr_sync3),
        .I1(stg1_aurora_64b66b_SL_cdc_to_reg_0),
        .O(stg5_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fifo_reset_wr_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_24
   (stg3_reg_0,
    in0,
    stg2_reg_0);
  output stg3_reg_0;
  input in0;
  input stg2_reg_0;

  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  wire stg2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(stg2_reg_0),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg2_reg_0),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg2_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_rd_clk/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(stg2_reg_0),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_25
   (stg3_reg_0,
    in0,
    gtwiz_userclk_rx_usrclk_out);
  output stg3_reg_0;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_wr_clk/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_26
   (stg5_reg_0,
    rd_stg1_reg,
    stg1_aurora_64b66b_SL_cdc_to_reg_0,
    stg5_reg_1,
    rd_stg1);
  output stg5_reg_0;
  output rd_stg1_reg;
  input stg1_aurora_64b66b_SL_cdc_to_reg_0;
  input stg5_reg_1;
  input rd_stg1;

  wire rd_stg1;
  wire rd_stg1_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  wire stg1_aurora_64b66b_SL_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;
  wire stg5_reg_1;

  LUT2 #(
    .INIT(4'hE)) 
    cbcc_reset_cbstg2_rd_clk_i_1
       (.I0(rd_stg1),
        .I1(stg5_reg_0),
        .O(rd_stg1_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to_reg_0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg5_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized1_29
   (stg3_reg_0,
    in0,
    init_clk);
  output stg3_reg_0;
  input in0;
  input init_clk;

  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/cbcc_gtx0_i/u_rst_sync_btf_sync/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(init_clk),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized2
   (stg11_reg_0,
    in0,
    gtwiz_userclk_rx_usrclk_out);
  output stg11_reg_0;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire stg10_reg_srl7_n_0;
  wire stg11_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/common_reset_cbcc_i/u_rst_sync_fifo_reset_user_clk/stg10_reg_srl7 " *) 
  SRL16E #(
    .INIT(16'h007F)) 
    stg10_reg_srl7
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(stg3),
        .Q(stg10_reg_srl7_n_0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg11_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg10_reg_srl7_n_0),
        .Q(stg11_reg_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized3
   (fifo_reset_comb_user_clk_int,
    dbg_srst_assert0,
    in0,
    gtwiz_userclk_rx_usrclk_out,
    dbg_srst_assert_reg);
  output fifo_reset_comb_user_clk_int;
  output dbg_srst_assert0;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;
  input dbg_srst_assert_reg;

  wire dbg_srst_assert0;
  wire dbg_srst_assert_reg;
  wire fifo_reset_comb_user_clk_int;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  wire stg20_reg_srl17_n_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire NLW_stg20_reg_srl17_Q31_UNCONNECTED;

  LUT2 #(
    .INIT(4'h2)) 
    dbg_srst_assert_i_1
       (.I0(dbg_srst_assert_reg),
        .I1(fifo_reset_comb_user_clk_int),
        .O(dbg_srst_assert0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/common_reset_cbcc_i/u_rst_sync_fifo_reset_comb_user_clk_in/stg20_reg_srl17 " *) 
  SRLC32E #(
    .INIT(32'h0001FFFF)) 
    stg20_reg_srl17
       (.A({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(stg3),
        .Q(stg20_reg_srl17_n_0),
        .Q31(NLW_stg20_reg_srl17_Q31_UNCONNECTED));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg21_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg20_reg_srl17_n_0),
        .Q(fifo_reset_comb_user_clk_int),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized4
   (stg9_reg_0,
    stg1_aurora_64b66b_SL_cdc_to_reg_0,
    gtwiz_userclk_rx_usrclk_out);
  output [0:0]stg9_reg_0;
  input stg1_aurora_64b66b_SL_cdc_to_reg_0;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  wire stg1_aurora_64b66b_SL_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg8_reg_srl5_n_0;
  wire [0:0]stg9_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to_reg_0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_to_fifo_wr_clk/stg8_reg_srl5 " *) 
  SRL16E #(
    .INIT(16'h001F)) 
    stg8_reg_srl5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(stg3),
        .Q(stg8_reg_srl5_n_0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg9_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg8_reg_srl5_n_0),
        .Q(stg9_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_SL_rst_sync" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_rst_sync__parameterized5
   (cbcc_fifo_reset_to_fifo_rd_clk,
    stg1_aurora_64b66b_SL_cdc_to_reg_0,
    stg31_reg_0);
  output cbcc_fifo_reset_to_fifo_rd_clk;
  input stg1_aurora_64b66b_SL_cdc_to_reg_0;
  input stg31_reg_0;

  wire cbcc_fifo_reset_to_fifo_rd_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_SL_cdc_to;
  wire stg1_aurora_64b66b_SL_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg30_reg_srl27_n_0;
  wire stg31_reg_0;
  wire NLW_stg30_reg_srl27_Q31_UNCONNECTED;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_SL_cdc_to_reg
       (.C(stg31_reg_0),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to_reg_0),
        .Q(stg1_aurora_64b66b_SL_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg31_reg_0),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_SL_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_SL_core_i/aurora_64b66b_SL_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_to_fifo_rd_clk/stg30_reg_srl27 " *) 
  SRLC32E #(
    .INIT(32'h07FFFFFF)) 
    stg30_reg_srl27
       (.A({1'b1,1'b1,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(stg31_reg_0),
        .D(stg3),
        .Q(stg30_reg_srl27_n_0),
        .Q31(NLW_stg30_reg_srl27_Q31_UNCONNECTED));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg31_reg
       (.C(stg31_reg_0),
        .CE(1'b1),
        .D(stg30_reg_srl27_n_0),
        .Q(cbcc_fifo_reset_to_fifo_rd_clk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg31_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_support
   (s_axi_tx_tdata,
    s_axi_tx_tkeep,
    s_axi_tx_tlast,
    s_axi_tx_tvalid,
    s_axi_tx_tready,
    m_axi_rx_tdata,
    m_axi_rx_tkeep,
    m_axi_rx_tlast,
    m_axi_rx_tvalid,
    rxp,
    rxn,
    txp,
    txn,
    hard_err,
    soft_err,
    channel_up,
    lane_up,
    user_clk_out,
    sync_clk_out,
    reset_pb,
    gt_rxcdrovrden_in,
    power_down,
    loopback,
    pma_init,
    gt0_drpdo,
    gt0_drprdy,
    gt0_drpaddr,
    gt0_drpdi,
    gt0_drpen,
    gt0_drpwe,
    init_clk,
    link_reset_out,
    gt_pll_lock,
    sys_reset_out,
    gt_reset_out,
    gt_refclk1_p,
    gt_refclk1_n,
    gt_refclk1_out,
    gt_powergood,
    mmcm_not_locked_out,
    mmcm_not_locked_out2,
    tx_out_clk);
  input [0:63]s_axi_tx_tdata;
  input [0:7]s_axi_tx_tkeep;
  input s_axi_tx_tlast;
  input s_axi_tx_tvalid;
  output s_axi_tx_tready;
  output [0:63]m_axi_rx_tdata;
  output [0:7]m_axi_rx_tkeep;
  output m_axi_rx_tlast;
  output m_axi_rx_tvalid;
  input rxp;
  input rxn;
  output txp;
  output txn;
  output hard_err;
  output soft_err;
  output channel_up;
  output lane_up;
  output user_clk_out;
  output sync_clk_out;
  input reset_pb;
  input gt_rxcdrovrden_in;
  input power_down;
  input [2:0]loopback;
  input pma_init;
  output [15:0]gt0_drpdo;
  output gt0_drprdy;
  input [9:0]gt0_drpaddr;
  input [15:0]gt0_drpdi;
  input gt0_drpen;
  input gt0_drpwe;
  input init_clk;
  output link_reset_out;
  output gt_pll_lock;
  output sys_reset_out;
  output gt_reset_out;
  input gt_refclk1_p;
  input gt_refclk1_n;
  output gt_refclk1_out;
  output [0:0]gt_powergood;
  output mmcm_not_locked_out;
  output mmcm_not_locked_out2;
  output tx_out_clk;

  wire bufg_gt_clr_out;
  wire channel_up;
  wire [9:0]gt0_drpaddr;
  wire [15:0]gt0_drpdi;
  wire [15:0]gt0_drpdo;
  wire gt0_drpen;
  wire gt0_drprdy;
  wire gt0_drpwe;
  wire gt_pll_lock;
  wire [0:0]gt_powergood;
  wire gt_refclk1_n;
  wire gt_refclk1_out;
  wire gt_refclk1_p;
  wire gt_reset_out;
  wire gt_reset_sync_n_0;
  wire gt_rxcdrovrden_in;
  wire hard_err;
  wire init_clk;
  wire lane_up;
  wire link_reset_out;
  wire [2:0]loopback;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire [0:63]m_axi_rx_tdata;
  wire [0:7]m_axi_rx_tkeep;
  wire m_axi_rx_tlast;
  wire m_axi_rx_tvalid;
  wire mmcm_not_locked_out;
  wire mmcm_not_locked_out2;
  wire pma_init;
  wire power_down;
  wire reset_pb;
  wire rxn;
  wire rxp;
  wire [0:63]s_axi_tx_tdata;
  wire [0:7]s_axi_tx_tkeep;
  wire s_axi_tx_tlast;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire soft_err;
  wire stg5;
  wire sys_reset_out;
  wire sysreset_from_support;
  wire tx_out_clk;
  wire txn;
  wire txp;
  wire user_clk_out;
  wire NLW_IBUFDS_GTE4_refclk1_ODIV2_UNCONNECTED;

  assign sync_clk_out = user_clk_out;
  (* BOX_TYPE = "PRIMITIVE" *) 
  IBUFDS_GTE4 #(
    .REFCLK_EN_TX_PATH(1'b0),
    .REFCLK_HROW_CK_SEL(2'b00),
    .REFCLK_ICNTL_RX(2'b00)) 
    IBUFDS_GTE4_refclk1
       (.CEB(1'b0),
        .I(gt_refclk1_p),
        .IB(gt_refclk1_n),
        .O(gt_refclk1_out),
        .ODIV2(NLW_IBUFDS_GTE4_refclk1_ODIV2_UNCONNECTED));
  aurora_64b66b_SL_aurora_64b66b_SL_core aurora_64b66b_SL_core_i
       (.CHANNEL_UP_RX_IF_reg(channel_up),
        .\TX_PE_DATA_reg[0] (user_clk_out),
        .bufg_gt_clr_out(bufg_gt_clr_out),
        .gt0_drpaddr(gt0_drpaddr),
        .gt0_drpdi(gt0_drpdi),
        .gt0_drpdo(gt0_drpdo),
        .gt0_drpen(gt0_drpen),
        .gt0_drprdy(gt0_drprdy),
        .gt0_drpwe(gt0_drpwe),
        .gt_pll_lock(gt_pll_lock),
        .gt_powergood(gt_powergood),
        .gt_refclk1_out(gt_refclk1_out),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .hard_err(hard_err),
        .init_clk(init_clk),
        .lane_up_flop_i(lane_up),
        .link_reset_out(link_reset_out),
        .loopback(loopback),
        .lopt(lopt),
        .lopt_1(bufg_gt_clr_out),
        .lopt_2(lopt_1),
        .lopt_3(lopt_2),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .m_axi_rx_tkeep(m_axi_rx_tkeep),
        .m_axi_rx_tlast(m_axi_rx_tlast),
        .m_axi_rx_tvalid(m_axi_rx_tvalid),
        .mmcm_not_locked_out2(mmcm_not_locked_out2),
        .power_down(power_down),
        .rxn(rxn),
        .rxp(rxp),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .s_axi_tx_tkeep(s_axi_tx_tkeep),
        .s_axi_tx_tlast(s_axi_tx_tlast),
        .s_axi_tx_tready_reg(s_axi_tx_tready),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .soft_err(soft_err),
        .stg1_aurora_64b66b_SL_cdc_to_reg(gt_reset_out),
        .sys_reset_out(sys_reset_out),
        .sysreset_from_support(sysreset_from_support),
        .tx_out_clk(tx_out_clk),
        .txn(txn),
        .txp(txp));
  aurora_64b66b_SL_aurora_64b66b_SL_CLOCK_MODULE clock_module_i
       (.CLK(user_clk_out),
        .bufg_gt_clr_out(bufg_gt_clr_out),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mmcm_not_locked_out(mmcm_not_locked_out),
        .mmcm_not_locked_out2(mmcm_not_locked_out2),
        .tx_out_clk(tx_out_clk));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync gt_reset_sync
       (.D(gt_reset_sync_n_0),
        .init_clk(init_clk),
        .pma_init(pma_init));
  aurora_64b66b_SL_aurora_64b66b_SL_rst_sync_0 reset_pb_sync
       (.CLK(user_clk_out),
        .D(stg5),
        .reset_pb(reset_pb));
  aurora_64b66b_SL_aurora_64b66b_SL_SUPPORT_RESET_LOGIC support_reset_logic_i
       (.CLK(user_clk_out),
        .D(stg5),
        .\debounce_gt_rst_r_reg[0]_0 (gt_reset_sync_n_0),
        .gt_reset_out(gt_reset_out),
        .init_clk(init_clk),
        .sysreset_from_support(sysreset_from_support));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* P_CONTENTS = "0" *) (* P_FREQ_RATIO_SOURCE_TO_USRCLK = "1" *) 
(* P_FREQ_RATIO_USRCLK_TO_USRCLK2 = "1" *) (* P_USRCLK2_DIV = "3'b000" *) (* P_USRCLK2_INT_DIV = "0" *) 
(* P_USRCLK_DIV = "3'b000" *) (* P_USRCLK_INT_DIV = "0" *) (* keep_hierarchy = "soft" *) 
module aurora_64b66b_SL_aurora_64b66b_SL_ultrascale_rx_userclk
   (gtwiz_reset_clk_freerun_in,
    gtwiz_userclk_rx_srcclk_in,
    gtwiz_userclk_rx_reset_in,
    gtwiz_userclk_rx_usrclk_out,
    gtwiz_userclk_rx_usrclk2_out,
    gtwiz_userclk_rx_active_out,
    lopt,
    lopt_1,
    lopt_2);
  input gtwiz_reset_clk_freerun_in;
  input gtwiz_userclk_rx_srcclk_in;
  input gtwiz_userclk_rx_reset_in;
  output gtwiz_userclk_rx_usrclk_out;
  output gtwiz_userclk_rx_usrclk2_out;
  output gtwiz_userclk_rx_active_out;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire \<const1> ;
  (* async_reg = "true" *) wire \gen_gtwiz_userclk_rx_main.rx_active_aurora_64b66b_SL_cdc_to ;
  (* async_reg = "true" *) wire \gen_gtwiz_userclk_rx_main.rx_active_cdc_to_stg2 ;
  wire gtwiz_userclk_rx_active_out;
  wire gtwiz_userclk_rx_reset_in;
  wire gtwiz_userclk_rx_srcclk_in;
  wire gtwiz_userclk_rx_usrclk2_out;
  wire \^lopt ;
  wire \^lopt_1 ;

  assign \^lopt  = lopt_1;
  assign \^lopt_1  = lopt_2;
  assign gtwiz_userclk_rx_usrclk_out = gtwiz_userclk_rx_usrclk2_out;
  assign lopt = \<const1> ;
  VCC VCC
       (.P(\<const1> ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  BUFG_GT #(
    .SIM_DEVICE("ULTRASCALE"),
    .STARTUP_SYNC("FALSE")) 
    \gen_gtwiz_userclk_rx_main.bufg_gt_usrclk_inst 
       (.CE(\^lopt ),
        .CEMASK(1'b0),
        .CLR(\^lopt_1 ),
        .CLRMASK(1'b0),
        .DIV({1'b0,1'b0,1'b0}),
        .I(gtwiz_userclk_rx_srcclk_in),
        .O(gtwiz_userclk_rx_usrclk2_out));
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_rx_main.gtwiz_userclk_rx_active_out_reg 
       (.C(gtwiz_userclk_rx_usrclk2_out),
        .CE(1'b1),
        .CLR(gtwiz_userclk_rx_reset_in),
        .D(\gen_gtwiz_userclk_rx_main.rx_active_cdc_to_stg2 ),
        .Q(gtwiz_userclk_rx_active_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_rx_main.rx_active_aurora_64b66b_SL_cdc_to_reg 
       (.C(gtwiz_userclk_rx_usrclk2_out),
        .CE(1'b1),
        .CLR(gtwiz_userclk_rx_reset_in),
        .D(1'b1),
        .Q(\gen_gtwiz_userclk_rx_main.rx_active_aurora_64b66b_SL_cdc_to ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_rx_main.rx_active_cdc_to_stg2_reg 
       (.C(gtwiz_userclk_rx_usrclk2_out),
        .CE(1'b1),
        .CLR(gtwiz_userclk_rx_reset_in),
        .D(\gen_gtwiz_userclk_rx_main.rx_active_aurora_64b66b_SL_cdc_to ),
        .Q(\gen_gtwiz_userclk_rx_main.rx_active_cdc_to_stg2 ));
endmodule

module aurora_64b66b_SL_aurora_64b66b_SL_ultrascale_tx_userclk
   (\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ,
    mmcm_not_locked_out,
    mmcm_not_locked_out2,
    tx_out_clk,
    bufg_gt_clr_out,
    lopt,
    lopt_1,
    lopt_2);
  output \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ;
  output mmcm_not_locked_out;
  output mmcm_not_locked_out2;
  input tx_out_clk;
  input bufg_gt_clr_out;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire \<const1> ;
  wire bufg_gt_clr_out;
  wire \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ;
  (* async_reg = "true" *) wire \gen_gtwiz_userclk_tx_main.tx_active_aurora_64b66b_SL_cdc_to ;
  (* async_reg = "true" *) wire \gen_gtwiz_userclk_tx_main.tx_active_cdc_to_stg2 ;
  wire \^lopt ;
  wire \^lopt_1 ;
  (* async_reg = "true" *) wire mmcm_not_locked_out;
  wire mmcm_not_locked_out2;
  wire tx_out_clk;

  assign \^lopt  = lopt_1;
  assign \^lopt_1  = lopt_2;
  assign lopt = \<const1> ;
  VCC VCC
       (.P(\<const1> ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  BUFG_GT #(
    .SIM_DEVICE("ULTRASCALE"),
    .STARTUP_SYNC("FALSE")) 
    \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst 
       (.CE(\^lopt ),
        .CEMASK(1'b0),
        .CLR(\^lopt_1 ),
        .CLRMASK(1'b0),
        .DIV({1'b0,1'b0,1'b0}),
        .I(tx_out_clk),
        .O(\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_tx_main.gtwiz_userclk_tx_active_out_reg 
       (.C(\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ),
        .CE(1'b1),
        .CLR(bufg_gt_clr_out),
        .D(\gen_gtwiz_userclk_tx_main.tx_active_cdc_to_stg2 ),
        .Q(mmcm_not_locked_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_tx_main.tx_active_aurora_64b66b_SL_cdc_to_reg 
       (.C(\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ),
        .CE(1'b1),
        .CLR(bufg_gt_clr_out),
        .D(1'b1),
        .Q(\gen_gtwiz_userclk_tx_main.tx_active_aurora_64b66b_SL_cdc_to ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_tx_main.tx_active_cdc_to_stg2_reg 
       (.C(\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ),
        .CE(1'b1),
        .CLR(bufg_gt_clr_out),
        .D(\gen_gtwiz_userclk_tx_main.tx_active_aurora_64b66b_SL_cdc_to ),
        .Q(\gen_gtwiz_userclk_tx_main.tx_active_cdc_to_stg2 ));
  LUT1 #(
    .INIT(2'h1)) 
    mmcm_not_locked_out2_INST_0
       (.I0(mmcm_not_locked_out),
        .O(mmcm_not_locked_out2));
endmodule

module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    rxresetdone_out,
    drpclk_in);
  output \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input [0:0]rxresetdone_out;
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [0:0]rxresetdone_out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rxresetdone_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_30
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    txresetdone_out,
    drpclk_in);
  output \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [0:0]txresetdone_out;
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [0:0]txresetdone_out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(txresetdone_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_31
   (E,
    gtpowergood_out,
    drpclk_in,
    \FSM_sequential_sm_reset_all_reg[0] ,
    Q,
    \FSM_sequential_sm_reset_all_reg[0]_0 );
  output [0:0]E;
  input [0:0]gtpowergood_out;
  input [0:0]drpclk_in;
  input \FSM_sequential_sm_reset_all_reg[0] ;
  input [2:0]Q;
  input \FSM_sequential_sm_reset_all_reg[0]_0 ;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_all_reg[0] ;
  wire \FSM_sequential_sm_reset_all_reg[0]_0 ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire [0:0]gtpowergood_out;
  wire gtpowergood_sync;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  LUT6 #(
    .INIT(64'hAF0FAF00CFFFCFFF)) 
    \FSM_sequential_sm_reset_all[2]_i_1 
       (.I0(gtpowergood_sync),
        .I1(\FSM_sequential_sm_reset_all_reg[0] ),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(\FSM_sequential_sm_reset_all_reg[0]_0 ),
        .I5(Q[1]),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtpowergood_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtpowergood_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_32
   (gtwiz_reset_rx_datapath_dly,
    in0,
    drpclk_in);
  output gtwiz_reset_rx_datapath_dly;
  input in0;
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  wire gtwiz_reset_rx_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_33
   (D,
    sm_reset_rx_pll_timer_sat_reg,
    in0,
    drpclk_in,
    Q,
    p_0_in11_out__0,
    sm_reset_rx_pll_timer_sat,
    \FSM_sequential_sm_reset_rx[2]_i_3 ,
    gtwiz_reset_rx_datapath_dly);
  output [1:0]D;
  output sm_reset_rx_pll_timer_sat_reg;
  input in0;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input p_0_in11_out__0;
  input sm_reset_rx_pll_timer_sat;
  input \FSM_sequential_sm_reset_rx[2]_i_3 ;
  input gtwiz_reset_rx_datapath_dly;

  wire [1:0]D;
  wire \FSM_sequential_sm_reset_rx[2]_i_3 ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_rx_datapath_dly;
  wire gtwiz_reset_rx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire p_0_in11_out__0;
  wire sm_reset_rx_pll_timer_sat;
  wire sm_reset_rx_pll_timer_sat_reg;

  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'hDD769976)) 
    \FSM_sequential_sm_reset_rx[0]_i_1 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(gtwiz_reset_rx_pll_and_datapath_dly),
        .I3(Q[1]),
        .I4(p_0_in11_out__0),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'h00FFF511)) 
    \FSM_sequential_sm_reset_rx[1]_i_1 
       (.I0(Q[2]),
        .I1(gtwiz_reset_rx_pll_and_datapath_dly),
        .I2(p_0_in11_out__0),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(D[1]));
  LUT5 #(
    .INIT(32'h2F2F2F20)) 
    \FSM_sequential_sm_reset_rx[2]_i_5 
       (.I0(sm_reset_rx_pll_timer_sat),
        .I1(\FSM_sequential_sm_reset_rx[2]_i_3 ),
        .I2(Q[0]),
        .I3(gtwiz_reset_rx_pll_and_datapath_dly),
        .I4(gtwiz_reset_rx_datapath_dly),
        .O(sm_reset_rx_pll_timer_sat_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_pll_and_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_34
   (gtwiz_reset_tx_datapath_dly,
    in0,
    drpclk_in);
  output gtwiz_reset_tx_datapath_dly;
  input in0;
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  wire gtwiz_reset_tx_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_tx_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_35
   (sm_reset_tx_pll_timer_sat_reg,
    D,
    in0,
    drpclk_in,
    sm_reset_tx_pll_timer_sat,
    \FSM_sequential_sm_reset_tx[2]_i_3 ,
    Q,
    gtwiz_reset_tx_datapath_dly);
  output sm_reset_tx_pll_timer_sat_reg;
  output [1:0]D;
  input in0;
  input [0:0]drpclk_in;
  input sm_reset_tx_pll_timer_sat;
  input \FSM_sequential_sm_reset_tx[2]_i_3 ;
  input [2:0]Q;
  input gtwiz_reset_tx_datapath_dly;

  wire [1:0]D;
  wire \FSM_sequential_sm_reset_tx[2]_i_3 ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_tx_datapath_dly;
  wire gtwiz_reset_tx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire sm_reset_tx_pll_timer_sat;
  wire sm_reset_tx_pll_timer_sat_reg;

  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h0F3E)) 
    \FSM_sequential_sm_reset_tx[0]_i_1 
       (.I0(gtwiz_reset_tx_pll_and_datapath_dly),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h55AB)) 
    \FSM_sequential_sm_reset_tx[1]_i_1 
       (.I0(Q[0]),
        .I1(gtwiz_reset_tx_pll_and_datapath_dly),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(D[1]));
  LUT5 #(
    .INIT(32'h2F2F2F20)) 
    \FSM_sequential_sm_reset_tx[2]_i_6 
       (.I0(sm_reset_tx_pll_timer_sat),
        .I1(\FSM_sequential_sm_reset_tx[2]_i_3 ),
        .I2(Q[0]),
        .I3(gtwiz_reset_tx_pll_and_datapath_dly),
        .I4(gtwiz_reset_tx_datapath_dly),
        .O(sm_reset_tx_pll_timer_sat_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_tx_pll_and_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_36
   (\FSM_sequential_sm_reset_rx_reg[1] ,
    \FSM_sequential_sm_reset_rx_reg[0] ,
    \FSM_sequential_sm_reset_rx_reg[0]_0 ,
    gtwiz_userclk_rx_active_in,
    drpclk_in,
    p_0_in11_out__0,
    Q,
    sm_reset_rx_cdr_to_sat,
    \FSM_sequential_sm_reset_rx_reg[0]_1 ,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    sm_reset_rx_timer_clr_reg,
    sm_reset_rx_timer_sat,
    sm_reset_rx_timer_clr_reg_0,
    gtwiz_reset_rx_any_sync,
    \gen_gtwizard_gtye4.rxuserrdy_int );
  output \FSM_sequential_sm_reset_rx_reg[1] ;
  output \FSM_sequential_sm_reset_rx_reg[0] ;
  output \FSM_sequential_sm_reset_rx_reg[0]_0 ;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]drpclk_in;
  input p_0_in11_out__0;
  input [2:0]Q;
  input sm_reset_rx_cdr_to_sat;
  input \FSM_sequential_sm_reset_rx_reg[0]_1 ;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input sm_reset_rx_timer_clr_reg;
  input sm_reset_rx_timer_sat;
  input sm_reset_rx_timer_clr_reg_0;
  input gtwiz_reset_rx_any_sync;
  input \gen_gtwizard_gtye4.rxuserrdy_int ;

  wire \FSM_sequential_sm_reset_rx_reg[0] ;
  wire \FSM_sequential_sm_reset_rx_reg[0]_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[0]_1 ;
  wire \FSM_sequential_sm_reset_rx_reg[1] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire \gen_gtwizard_gtye4.rxuserrdy_int ;
  wire gtwiz_reset_rx_any_sync;
  wire gtwiz_reset_userclk_rx_active_sync;
  wire [0:0]gtwiz_userclk_rx_active_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire p_0_in11_out__0;
  wire sm_reset_rx_cdr_to_sat;
  wire sm_reset_rx_timer_clr0__0;
  wire sm_reset_rx_timer_clr_i_2_n_0;
  wire sm_reset_rx_timer_clr_reg;
  wire sm_reset_rx_timer_clr_reg_0;
  wire sm_reset_rx_timer_sat;

  LUT6 #(
    .INIT(64'h30BB30BB30BB3088)) 
    \FSM_sequential_sm_reset_rx[2]_i_4 
       (.I0(p_0_in11_out__0),
        .I1(Q[1]),
        .I2(sm_reset_rx_timer_clr0__0),
        .I3(Q[0]),
        .I4(sm_reset_rx_cdr_to_sat),
        .I5(\FSM_sequential_sm_reset_rx_reg[0]_1 ),
        .O(\FSM_sequential_sm_reset_rx_reg[1] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_userclk_rx_active_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_userclk_rx_active_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFEDED00000800)) 
    rxuserrdy_out_i_1
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(sm_reset_rx_timer_clr0__0),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(\gen_gtwizard_gtye4.rxuserrdy_int ),
        .O(\FSM_sequential_sm_reset_rx_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h40)) 
    rxuserrdy_out_i_2
       (.I0(sm_reset_rx_timer_clr_reg),
        .I1(sm_reset_rx_timer_sat),
        .I2(gtwiz_reset_userclk_rx_active_sync),
        .O(sm_reset_rx_timer_clr0__0));
  LUT6 #(
    .INIT(64'hFAAFCCFF0AA0CC0F)) 
    sm_reset_rx_timer_clr_i_1
       (.I0(sm_reset_rx_timer_clr_i_2_n_0),
        .I1(sm_reset_rx_timer_clr_reg_0),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(sm_reset_rx_timer_clr_reg),
        .O(\FSM_sequential_sm_reset_rx_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h0B000800)) 
    sm_reset_rx_timer_clr_i_2
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .I1(Q[1]),
        .I2(sm_reset_rx_timer_clr_reg),
        .I3(sm_reset_rx_timer_sat),
        .I4(gtwiz_reset_userclk_rx_active_sync),
        .O(sm_reset_rx_timer_clr_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_37
   (sm_reset_tx_timer_clr0__0,
    \FSM_sequential_sm_reset_tx_reg[1] ,
    \FSM_sequential_sm_reset_tx_reg[2] ,
    gtwiz_userclk_tx_active_in,
    drpclk_in,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    Q,
    sm_reset_tx_timer_clr013_out__0,
    sm_reset_tx_timer_clr_reg,
    sm_reset_tx_timer_sat,
    sm_reset_tx_timer_clr_reg_0,
    gtwiz_reset_tx_any_sync,
    \gen_gtwizard_gtye4.txuserrdy_int );
  output sm_reset_tx_timer_clr0__0;
  output \FSM_sequential_sm_reset_tx_reg[1] ;
  output \FSM_sequential_sm_reset_tx_reg[2] ;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]drpclk_in;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [2:0]Q;
  input sm_reset_tx_timer_clr013_out__0;
  input sm_reset_tx_timer_clr_reg;
  input sm_reset_tx_timer_sat;
  input sm_reset_tx_timer_clr_reg_0;
  input gtwiz_reset_tx_any_sync;
  input \gen_gtwizard_gtye4.txuserrdy_int ;

  wire \FSM_sequential_sm_reset_tx_reg[1] ;
  wire \FSM_sequential_sm_reset_tx_reg[2] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire \gen_gtwizard_gtye4.txuserrdy_int ;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_userclk_tx_active_sync;
  wire [0:0]gtwiz_userclk_tx_active_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire sm_reset_tx_timer_clr013_out__0;
  wire sm_reset_tx_timer_clr0__0;
  wire sm_reset_tx_timer_clr_i_2_n_0;
  wire sm_reset_tx_timer_clr_reg;
  wire sm_reset_tx_timer_clr_reg_0;
  wire sm_reset_tx_timer_sat;

  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_tx[2]_i_5 
       (.I0(sm_reset_tx_timer_clr_reg),
        .I1(sm_reset_tx_timer_sat),
        .I2(gtwiz_reset_userclk_tx_active_sync),
        .O(sm_reset_tx_timer_clr0__0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_userclk_tx_active_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_userclk_tx_active_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFACFFACF0AC00ACF)) 
    sm_reset_tx_timer_clr_i_1
       (.I0(sm_reset_tx_timer_clr_i_2_n_0),
        .I1(sm_reset_tx_timer_clr_reg_0),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(sm_reset_tx_timer_clr_reg),
        .O(\FSM_sequential_sm_reset_tx_reg[1] ));
  LUT6 #(
    .INIT(64'hBABF00008A800000)) 
    sm_reset_tx_timer_clr_i_2
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(sm_reset_tx_timer_clr013_out__0),
        .I5(gtwiz_reset_userclk_tx_active_sync),
        .O(sm_reset_tx_timer_clr_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFCCF00000008)) 
    txuserrdy_out_i_1
       (.I0(sm_reset_tx_timer_clr0__0),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(gtwiz_reset_tx_any_sync),
        .I5(\gen_gtwizard_gtye4.txuserrdy_int ),
        .O(\FSM_sequential_sm_reset_tx_reg[2] ));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_38
   (E,
    i_in_out_reg_0,
    \FSM_sequential_sm_reset_rx_reg[1] ,
    \FSM_sequential_sm_reset_rx_reg[2] ,
    \FSM_sequential_sm_reset_rx_reg[1]_0 ,
    cplllock_out,
    drpclk_in,
    Q,
    \FSM_sequential_sm_reset_rx_reg[0] ,
    sm_reset_rx_timer_sat,
    \FSM_sequential_sm_reset_rx_reg[0]_0 ,
    \FSM_sequential_sm_reset_rx_reg[0]_1 ,
    p_0_in11_out__0,
    gtwiz_reset_rx_done_int_reg,
    gtwiz_reset_rx_any_sync,
    \gen_gtwizard_gtye4.gtrxreset_int );
  output [0:0]E;
  output i_in_out_reg_0;
  output \FSM_sequential_sm_reset_rx_reg[1] ;
  output \FSM_sequential_sm_reset_rx_reg[2] ;
  output \FSM_sequential_sm_reset_rx_reg[1]_0 ;
  input [0:0]cplllock_out;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input \FSM_sequential_sm_reset_rx_reg[0] ;
  input sm_reset_rx_timer_sat;
  input \FSM_sequential_sm_reset_rx_reg[0]_0 ;
  input \FSM_sequential_sm_reset_rx_reg[0]_1 ;
  input p_0_in11_out__0;
  input gtwiz_reset_rx_done_int_reg;
  input gtwiz_reset_rx_any_sync;
  input \gen_gtwizard_gtye4.gtrxreset_int ;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_rx[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[0] ;
  wire \FSM_sequential_sm_reset_rx_reg[0]_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[0]_1 ;
  wire \FSM_sequential_sm_reset_rx_reg[1] ;
  wire \FSM_sequential_sm_reset_rx_reg[1]_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[2] ;
  wire [2:0]Q;
  wire [0:0]cplllock_out;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gtrxreset_int ;
  wire gtwiz_reset_rx_any_sync;
  wire gtwiz_reset_rx_done_int_reg;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire p_0_in11_out__0;
  wire plllock_rx_sync;
  wire sm_reset_rx_timer_sat;

  LUT6 #(
    .INIT(64'h00B0FFFF00B00000)) 
    \FSM_sequential_sm_reset_rx[2]_i_3 
       (.I0(plllock_rx_sync),
        .I1(Q[0]),
        .I2(sm_reset_rx_timer_sat),
        .I3(\FSM_sequential_sm_reset_rx_reg[0]_0 ),
        .I4(Q[1]),
        .I5(\FSM_sequential_sm_reset_rx_reg[0]_1 ),
        .O(\FSM_sequential_sm_reset_rx[2]_i_3_n_0 ));
  MUXF7 \FSM_sequential_sm_reset_rx_reg[2]_i_1 
       (.I0(\FSM_sequential_sm_reset_rx[2]_i_3_n_0 ),
        .I1(\FSM_sequential_sm_reset_rx_reg[0] ),
        .O(E),
        .S(Q[2]));
  LUT6 #(
    .INIT(64'hFFFFFF7F0000003E)) 
    gtrxreset_out_i_1
       (.I0(\FSM_sequential_sm_reset_rx_reg[1] ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(\gen_gtwizard_gtye4.gtrxreset_int ),
        .O(\FSM_sequential_sm_reset_rx_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hFFFF77FF00800080)) 
    gtwiz_reset_rx_done_int_i_1
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(p_0_in11_out__0),
        .I3(Q[0]),
        .I4(plllock_rx_sync),
        .I5(gtwiz_reset_rx_done_int_reg),
        .O(\FSM_sequential_sm_reset_rx_reg[2] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cplllock_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(plllock_rx_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    sm_reset_rx_cdr_to_clr_i_3
       (.I0(Q[1]),
        .I1(plllock_rx_sync),
        .I2(sm_reset_rx_timer_sat),
        .I3(\FSM_sequential_sm_reset_rx_reg[0]_0 ),
        .O(\FSM_sequential_sm_reset_rx_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h00B0)) 
    sm_reset_rx_timer_clr_i_3
       (.I0(plllock_rx_sync),
        .I1(Q[0]),
        .I2(sm_reset_rx_timer_sat),
        .I3(\FSM_sequential_sm_reset_rx_reg[0]_0 ),
        .O(i_in_out_reg_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_39
   (E,
    i_in_out_reg_0,
    \FSM_sequential_sm_reset_tx_reg[0] ,
    \FSM_sequential_sm_reset_tx_reg[1] ,
    cplllock_out,
    drpclk_in,
    Q,
    gtwiz_reset_tx_done_int0__0,
    sm_reset_tx_timer_clr0__0,
    sm_reset_tx_timer_sat,
    \FSM_sequential_sm_reset_tx_reg[0]_0 ,
    \FSM_sequential_sm_reset_tx_reg[0]_1 ,
    gtwiz_reset_tx_done_int_reg,
    gtwiz_reset_tx_any_sync,
    \gen_gtwizard_gtye4.gttxreset_int );
  output [0:0]E;
  output i_in_out_reg_0;
  output \FSM_sequential_sm_reset_tx_reg[0] ;
  output \FSM_sequential_sm_reset_tx_reg[1] ;
  input [0:0]cplllock_out;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input gtwiz_reset_tx_done_int0__0;
  input sm_reset_tx_timer_clr0__0;
  input sm_reset_tx_timer_sat;
  input \FSM_sequential_sm_reset_tx_reg[0]_0 ;
  input \FSM_sequential_sm_reset_tx_reg[0]_1 ;
  input gtwiz_reset_tx_done_int_reg;
  input gtwiz_reset_tx_any_sync;
  input \gen_gtwizard_gtye4.gttxreset_int ;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_tx[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_tx_reg[0] ;
  wire \FSM_sequential_sm_reset_tx_reg[0]_0 ;
  wire \FSM_sequential_sm_reset_tx_reg[0]_1 ;
  wire \FSM_sequential_sm_reset_tx_reg[1] ;
  wire [2:0]Q;
  wire [0:0]cplllock_out;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gttxreset_int ;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_done_int0__0;
  wire gtwiz_reset_tx_done_int_reg;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire plllock_tx_sync;
  wire sm_reset_tx_timer_clr012_out__0;
  wire sm_reset_tx_timer_clr0__0;
  wire sm_reset_tx_timer_sat;

  LUT6 #(
    .INIT(64'h3A0A3A3A3A0A0A0A)) 
    \FSM_sequential_sm_reset_tx[2]_i_1 
       (.I0(\FSM_sequential_sm_reset_tx[2]_i_3_n_0 ),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(gtwiz_reset_tx_done_int0__0),
        .I4(Q[0]),
        .I5(sm_reset_tx_timer_clr0__0),
        .O(E));
  LUT6 #(
    .INIT(64'h00B0FFFF00B00000)) 
    \FSM_sequential_sm_reset_tx[2]_i_3 
       (.I0(plllock_tx_sync),
        .I1(Q[0]),
        .I2(sm_reset_tx_timer_sat),
        .I3(\FSM_sequential_sm_reset_tx_reg[0]_0 ),
        .I4(Q[1]),
        .I5(\FSM_sequential_sm_reset_tx_reg[0]_1 ),
        .O(\FSM_sequential_sm_reset_tx[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF7F0000003C)) 
    gttxreset_out_i_1
       (.I0(sm_reset_tx_timer_clr012_out__0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(gtwiz_reset_tx_any_sync),
        .I5(\gen_gtwizard_gtye4.gttxreset_int ),
        .O(\FSM_sequential_sm_reset_tx_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h40)) 
    gttxreset_out_i_2
       (.I0(\FSM_sequential_sm_reset_tx_reg[0]_0 ),
        .I1(sm_reset_tx_timer_sat),
        .I2(plllock_tx_sync),
        .O(sm_reset_tx_timer_clr012_out__0));
  LUT6 #(
    .INIT(64'hFFCFFFFF00008080)) 
    gtwiz_reset_tx_done_int_i_1
       (.I0(gtwiz_reset_tx_done_int0__0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(plllock_tx_sync),
        .I4(Q[1]),
        .I5(gtwiz_reset_tx_done_int_reg),
        .O(\FSM_sequential_sm_reset_tx_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cplllock_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(plllock_tx_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'h00B0)) 
    sm_reset_tx_timer_clr_i_3
       (.I0(plllock_tx_sync),
        .I1(Q[0]),
        .I2(sm_reset_tx_timer_sat),
        .I3(\FSM_sequential_sm_reset_tx_reg[0]_0 ),
        .O(i_in_out_reg_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_40
   (i_in_out_reg_0,
    \FSM_sequential_sm_reset_rx_reg[1] ,
    \FSM_sequential_sm_reset_rx_reg[2] ,
    rxcdrlock_out,
    drpclk_in,
    sm_reset_rx_cdr_to_sat,
    Q,
    sm_reset_rx_cdr_to_clr_reg,
    sm_reset_rx_cdr_to_clr,
    gtwiz_reset_rx_any_sync,
    \gen_gtwizard_gtye4.rxprogdivreset_int );
  output i_in_out_reg_0;
  output \FSM_sequential_sm_reset_rx_reg[1] ;
  output \FSM_sequential_sm_reset_rx_reg[2] ;
  input [0:0]rxcdrlock_out;
  input [0:0]drpclk_in;
  input sm_reset_rx_cdr_to_sat;
  input [2:0]Q;
  input sm_reset_rx_cdr_to_clr_reg;
  input sm_reset_rx_cdr_to_clr;
  input gtwiz_reset_rx_any_sync;
  input \gen_gtwizard_gtye4.rxprogdivreset_int ;

  wire \FSM_sequential_sm_reset_rx_reg[1] ;
  wire \FSM_sequential_sm_reset_rx_reg[2] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.rxprogdivreset_int ;
  wire gtwiz_reset_rx_any_sync;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [0:0]rxcdrlock_out;
  wire sm_reset_rx_cdr_to_clr;
  wire sm_reset_rx_cdr_to_clr0__0;
  wire sm_reset_rx_cdr_to_clr_reg;
  wire sm_reset_rx_cdr_to_sat;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rxcdrlock_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(i_in_out_reg_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFF700000330)) 
    rxprogdivreset_out_i_1
       (.I0(sm_reset_rx_cdr_to_clr0__0),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .O(\FSM_sequential_sm_reset_rx_reg[2] ));
  LUT6 #(
    .INIT(64'hFFFF3FFF02023303)) 
    sm_reset_rx_cdr_to_clr_i_1
       (.I0(sm_reset_rx_cdr_to_clr0__0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(sm_reset_rx_cdr_to_clr_reg),
        .I4(Q[2]),
        .I5(sm_reset_rx_cdr_to_clr),
        .O(\FSM_sequential_sm_reset_rx_reg[1] ));
  LUT2 #(
    .INIT(4'hE)) 
    sm_reset_rx_cdr_to_clr_i_2
       (.I0(sm_reset_rx_cdr_to_sat),
        .I1(i_in_out_reg_0),
        .O(sm_reset_rx_cdr_to_clr0__0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_49
   (drprst_in_sync,
    E,
    i_in_out_reg_0,
    drpclk_in,
    \timeout_cntr_reg[0] ,
    drpen_in);
  output drprst_in_sync;
  output [0:0]E;
  output [0:0]i_in_out_reg_0;
  input [0:0]drpclk_in;
  input \timeout_cntr_reg[0] ;
  input [0:0]drpen_in;

  wire [0:0]E;
  wire [0:0]drpclk_in;
  wire [0:0]drpen_in;
  wire drprst_in_sync;
  (* async_reg = "true" *) wire i_in_meta;
  wire [0:0]i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire n_0_0;
  wire \timeout_cntr_reg[0] ;

  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \addr_i[2]_i_1 
       (.I0(drprst_in_sync),
        .I1(drpen_in),
        .O(i_in_out_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(n_0_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(n_0_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(drprst_in_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \timeout_cntr[7]_i_1 
       (.I0(drprst_in_sync),
        .I1(\timeout_cntr_reg[0] ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_52
   (i_in_out_reg_0,
    \cpll_cal_state_reg[0] ,
    in0,
    drpclk_in,
    Q,
    cal_on_tx_reset_in_sync,
    USER_CPLLLOCK_OUT_reg);
  output i_in_out_reg_0;
  output \cpll_cal_state_reg[0] ;
  input in0;
  input [0:0]drpclk_in;
  input [1:0]Q;
  input cal_on_tx_reset_in_sync;
  input USER_CPLLLOCK_OUT_reg;

  wire [1:0]Q;
  wire USER_CPLLLOCK_OUT_reg;
  wire cal_on_tx_reset_in_sync;
  wire \cpll_cal_state_reg[0] ;
  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  LUT5 #(
    .INIT(32'h00000004)) 
    USER_CPLLLOCK_OUT_i_1
       (.I0(Q[0]),
        .I1(i_in_out_reg_0),
        .I2(cal_on_tx_reset_in_sync),
        .I3(Q[1]),
        .I4(USER_CPLLLOCK_OUT_reg),
        .O(\cpll_cal_state_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(i_in_out_reg_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_53
   (D,
    drpclk_in,
    txoutclksel_int,
    \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[0] );
  output [0:0]D;
  input [0:0]drpclk_in;
  input [0:0]txoutclksel_int;
  input \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[0] ;

  wire [0:0]D;
  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire n_0_0;
  wire \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[0] ;
  wire [0:0]txoutclksel_int;
  wire [0:0]user_txoutclksel_sync;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(n_0_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(n_0_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(user_txoutclksel_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT[0]_i_1 
       (.I0(txoutclksel_int),
        .I1(\non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[0] ),
        .I2(user_txoutclksel_sync),
        .O(D));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_54
   (D,
    drpclk_in,
    \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[1] );
  output [0:0]D;
  input [0:0]drpclk_in;
  input \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[1] ;

  wire [0:0]D;
  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire n_0_0;
  wire \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[1] ;
  wire [1:1]user_txoutclksel_sync;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(n_0_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(n_0_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(user_txoutclksel_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT[1]_i_1 
       (.I0(user_txoutclksel_sync),
        .I1(\non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[1] ),
        .O(D));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_55
   (D,
    drpclk_in,
    txoutclksel_int,
    \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[2] );
  output [0:0]D;
  input [0:0]drpclk_in;
  input [0:0]txoutclksel_int;
  input \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[2] ;

  wire [0:0]D;
  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire n_0_0;
  wire \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[2] ;
  wire [0:0]txoutclksel_int;
  wire [2:2]user_txoutclksel_sync;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(n_0_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(n_0_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(user_txoutclksel_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT[2]_i_1 
       (.I0(txoutclksel_int),
        .I1(\non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[2] ),
        .I2(user_txoutclksel_sync),
        .O(D));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_56
   (rst_in_out_reg,
    D,
    i_in_meta_reg_0,
    drpclk_in,
    freq_counter_rst_reg,
    cal_on_tx_reset_in_sync,
    freq_counter_rst_reg_0,
    freq_counter_rst_reg_1,
    freq_counter_rst_reg_2,
    Q,
    \cpll_cal_state_reg[29] ,
    \cpll_cal_state_reg[20] ,
    cal_fail_store__0);
  output rst_in_out_reg;
  output [4:0]D;
  input i_in_meta_reg_0;
  input [0:0]drpclk_in;
  input freq_counter_rst_reg;
  input cal_on_tx_reset_in_sync;
  input freq_counter_rst_reg_0;
  input freq_counter_rst_reg_1;
  input freq_counter_rst_reg_2;
  input [6:0]Q;
  input \cpll_cal_state_reg[29] ;
  input \cpll_cal_state_reg[20] ;
  input cal_fail_store__0;

  wire [4:0]D;
  wire [6:0]Q;
  wire cal_fail_store__0;
  wire cal_on_tx_reset_in_sync;
  wire \cpll_cal_state_reg[20] ;
  wire \cpll_cal_state_reg[29] ;
  wire [0:0]drpclk_in;
  wire freq_counter_rst_i_4_n_0;
  wire freq_counter_rst_reg;
  wire freq_counter_rst_reg_0;
  wire freq_counter_rst_reg_1;
  wire freq_counter_rst_reg_2;
  wire gtye4_txprgdivresetdone_sync;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_meta_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire rst_in_out_reg;

  LUT4 #(
    .INIT(16'h4F44)) 
    \cpll_cal_state[19]_i_1 
       (.I0(gtye4_txprgdivresetdone_sync),
        .I1(Q[1]),
        .I2(\cpll_cal_state_reg[29] ),
        .I3(Q[0]),
        .O(D[0]));
  LUT4 #(
    .INIT(16'h8F88)) 
    \cpll_cal_state[20]_i_1 
       (.I0(Q[1]),
        .I1(gtye4_txprgdivresetdone_sync),
        .I2(\cpll_cal_state_reg[20] ),
        .I3(Q[2]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \cpll_cal_state[29]_i_1 
       (.I0(gtye4_txprgdivresetdone_sync),
        .I1(Q[4]),
        .I2(\cpll_cal_state_reg[29] ),
        .I3(Q[3]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'hEAAA)) 
    \cpll_cal_state[30]_i_1 
       (.I0(Q[5]),
        .I1(gtye4_txprgdivresetdone_sync),
        .I2(Q[4]),
        .I3(cal_fail_store__0),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'hAAEA)) 
    \cpll_cal_state[31]_i_1 
       (.I0(Q[6]),
        .I1(gtye4_txprgdivresetdone_sync),
        .I2(Q[4]),
        .I3(cal_fail_store__0),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hEEEEEEEF22222220)) 
    freq_counter_rst_i_1
       (.I0(freq_counter_rst_reg),
        .I1(cal_on_tx_reset_in_sync),
        .I2(freq_counter_rst_reg_0),
        .I3(freq_counter_rst_i_4_n_0),
        .I4(freq_counter_rst_reg_1),
        .I5(freq_counter_rst_reg_2),
        .O(rst_in_out_reg));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h8)) 
    freq_counter_rst_i_4
       (.I0(gtye4_txprgdivresetdone_sync),
        .I1(Q[1]),
        .O(freq_counter_rst_i_4_n_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta_reg_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtye4_txprgdivresetdone_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_bit_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_57
   (txprogdivreset_int_reg,
    i_in_meta_reg_0,
    drpclk_in,
    txprogdivreset_int,
    \non_pcie_txoutclksel.GTYE4_TXPROGDIVRESET_OUT_reg );
  output txprogdivreset_int_reg;
  input i_in_meta_reg_0;
  input [0:0]drpclk_in;
  input txprogdivreset_int;
  input \non_pcie_txoutclksel.GTYE4_TXPROGDIVRESET_OUT_reg ;

  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_meta_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire \non_pcie_txoutclksel.GTYE4_TXPROGDIVRESET_OUT_reg ;
  wire txprogdivreset_int;
  wire txprogdivreset_int_reg;
  wire user_txprogdivreset_sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta_reg_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(user_txprogdivreset_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \non_pcie_txoutclksel.GTYE4_TXPROGDIVRESET_OUT_i_1 
       (.I0(txprogdivreset_int),
        .I1(\non_pcie_txoutclksel.GTYE4_TXPROGDIVRESET_OUT_reg ),
        .I2(user_txprogdivreset_sync),
        .O(txprogdivreset_int_reg));
endmodule

module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gte4_drp_arb
   (\gen_gtwizard_gtye4.drpen_ch_int ,
    \gen_gtwizard_gtye4.drpwe_ch_int ,
    \drp_state_reg[6]_0 ,
    \gt0_drpaddr[8] ,
    \gt0_drpaddr[8]_0 ,
    Q,
    cal_on_tx_drdy,
    drprdy_out,
    \DADDR_O_reg[9]_0 ,
    \DI_O_reg[15]_0 ,
    drprst_in_sync,
    drpclk_in,
    cal_on_tx_drpwe_out,
    cal_on_tx_drpen_out,
    drpen_in,
    drpwe_in,
    \gen_gtwizard_gtye4.drprdy_int ,
    drpaddr_in,
    E,
    D,
    \addr_i_reg[2]_0 ,
    \addr_i_reg[2]_1 ,
    \addr_i_reg[27]_0 ,
    \addr_i_reg[7]_0 ,
    \addr_i_reg[6]_0 ,
    \addr_i_reg[5]_0 ,
    \addr_i_reg[3]_0 ,
    \addr_i_reg[0]_0 ,
    \data_i_reg[47]_0 ,
    drpdi_in,
    \data_i_reg[15]_0 );
  output \gen_gtwizard_gtye4.drpen_ch_int ;
  output \gen_gtwizard_gtye4.drpwe_ch_int ;
  output \drp_state_reg[6]_0 ;
  output \gt0_drpaddr[8] ;
  output \gt0_drpaddr[8]_0 ;
  output [31:0]Q;
  output cal_on_tx_drdy;
  output [0:0]drprdy_out;
  output [9:0]\DADDR_O_reg[9]_0 ;
  output [15:0]\DI_O_reg[15]_0 ;
  input drprst_in_sync;
  input [0:0]drpclk_in;
  input cal_on_tx_drpwe_out;
  input cal_on_tx_drpen_out;
  input [0:0]drpen_in;
  input [0:0]drpwe_in;
  input \gen_gtwizard_gtye4.drprdy_int ;
  input [7:0]drpaddr_in;
  input [0:0]E;
  input [15:0]D;
  input [0:0]\addr_i_reg[2]_0 ;
  input [1:0]\addr_i_reg[2]_1 ;
  input [6:0]\addr_i_reg[27]_0 ;
  input \addr_i_reg[7]_0 ;
  input \addr_i_reg[6]_0 ;
  input \addr_i_reg[5]_0 ;
  input \addr_i_reg[3]_0 ;
  input \addr_i_reg[0]_0 ;
  input [15:0]\data_i_reg[47]_0 ;
  input [14:0]drpdi_in;
  input \data_i_reg[15]_0 ;

  wire [1:1]B;
  wire CEB2;
  wire [15:0]D;
  wire \DADDR_O[9]_i_1_n_0 ;
  wire [9:0]\DADDR_O_reg[9]_0 ;
  wire DEN_O_i_1_n_0;
  wire DEN_O_i_2_n_0;
  wire \DI_O[15]_i_1_n_0 ;
  wire [15:0]\DI_O_reg[15]_0 ;
  wire [47:32]DO_USR_O0;
  wire \DO_USR_O[15]_i_1_n_0 ;
  wire \DO_USR_O[47]_i_1_n_0 ;
  wire \DRDY_USR_O[0]_i_1_n_0 ;
  wire \DRDY_USR_O[0]_i_2_n_0 ;
  wire \DRDY_USR_O[2]_i_1_n_0 ;
  wire \DRDY_USR_O[2]_i_2_n_0 ;
  wire [0:0]E;
  wire [31:0]Q;
  wire [27:0]addr_i;
  wire \addr_i_reg[0]_0 ;
  wire [6:0]\addr_i_reg[27]_0 ;
  wire [0:0]\addr_i_reg[2]_0 ;
  wire [1:0]\addr_i_reg[2]_1 ;
  wire \addr_i_reg[3]_0 ;
  wire \addr_i_reg[5]_0 ;
  wire \addr_i_reg[6]_0 ;
  wire \addr_i_reg[7]_0 ;
  wire [3:0]arb_state;
  wire \arb_state[3]_i_2_n_0 ;
  wire cal_on_tx_drdy;
  wire cal_on_tx_drpen_out;
  wire cal_on_tx_drpwe_out;
  wire [9:0]daddr;
  wire [9:0]daddr0;
  wire [47:0]data_i;
  wire \data_i_reg[15]_0 ;
  wire [15:0]\data_i_reg[47]_0 ;
  wire di;
  wire \di[0]_i_1_n_0 ;
  wire \di[10]_i_1_n_0 ;
  wire \di[11]_i_1_n_0 ;
  wire \di[12]_i_1_n_0 ;
  wire \di[13]_i_1_n_0 ;
  wire \di[14]_i_1_n_0 ;
  wire \di[15]_i_1_n_0 ;
  wire \di[1]_i_1_n_0 ;
  wire \di[2]_i_1_n_0 ;
  wire \di[3]_i_1_n_0 ;
  wire \di[4]_i_1_n_0 ;
  wire \di[5]_i_1_n_0 ;
  wire \di[6]_i_1_n_0 ;
  wire \di[7]_i_1_n_0 ;
  wire \di[8]_i_1_n_0 ;
  wire \di[9]_i_1_n_0 ;
  wire \di_reg_n_0_[0] ;
  wire \di_reg_n_0_[10] ;
  wire \di_reg_n_0_[11] ;
  wire \di_reg_n_0_[12] ;
  wire \di_reg_n_0_[13] ;
  wire \di_reg_n_0_[14] ;
  wire \di_reg_n_0_[15] ;
  wire \di_reg_n_0_[1] ;
  wire \di_reg_n_0_[2] ;
  wire \di_reg_n_0_[3] ;
  wire \di_reg_n_0_[4] ;
  wire \di_reg_n_0_[5] ;
  wire \di_reg_n_0_[6] ;
  wire \di_reg_n_0_[7] ;
  wire \di_reg_n_0_[8] ;
  wire \di_reg_n_0_[9] ;
  wire do_r;
  wire done_i_1_n_0;
  wire done_i_2_n_0;
  wire done_i_3_n_0;
  wire done_i_4_n_0;
  wire done_i_5_n_0;
  wire done_reg_n_0;
  wire [5:0]drp_state;
  wire \drp_state[0]_i_2_n_0 ;
  wire \drp_state[2]_i_2_n_0 ;
  wire \drp_state[4]_i_2_n_0 ;
  wire \drp_state[5]_i_2_n_0 ;
  wire \drp_state[6]_i_2_n_0 ;
  wire \drp_state[6]_i_3_n_0 ;
  wire \drp_state_reg[6]_0 ;
  wire \drp_state_reg_n_0_[0] ;
  wire \drp_state_reg_n_0_[1] ;
  wire \drp_state_reg_n_0_[2] ;
  wire \drp_state_reg_n_0_[4] ;
  wire \drp_state_reg_n_0_[5] ;
  wire \drp_state_reg_n_0_[6] ;
  wire [7:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [14:0]drpdi_in;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire drprst_in_sync;
  wire [0:0]drpwe_in;
  wire [2:0]en;
  wire \en[0]_i_2_n_0 ;
  wire \en[2]_i_2_n_0 ;
  wire \gen_gtwizard_gtye4.drpen_ch_int ;
  wire \gen_gtwizard_gtye4.drprdy_int ;
  wire \gen_gtwizard_gtye4.drpwe_ch_int ;
  wire \gt0_drpaddr[8] ;
  wire \gt0_drpaddr[8]_0 ;
  wire [1:0]idx;
  wire \idx[0]__0_i_2_n_0 ;
  wire [3:0]p_0_in;
  wire rd;
  wire rd_i_1_n_0;
  wire rd_reg_n_0;
  wire [7:0]timeout_cntr;
  wire \timeout_cntr[5]_i_2_n_0 ;
  wire \timeout_cntr[7]_i_4_n_0 ;
  wire \timeout_cntr_reg_n_0_[0] ;
  wire \timeout_cntr_reg_n_0_[1] ;
  wire \timeout_cntr_reg_n_0_[2] ;
  wire \timeout_cntr_reg_n_0_[3] ;
  wire \timeout_cntr_reg_n_0_[4] ;
  wire \timeout_cntr_reg_n_0_[5] ;
  wire \timeout_cntr_reg_n_0_[6] ;
  wire \timeout_cntr_reg_n_0_[7] ;
  wire [2:0]we;
  wire \we[0]_i_1_n_0 ;
  wire \we[2]_i_1_n_0 ;
  wire \we_reg_n_0_[0] ;
  wire \we_reg_n_0_[2] ;
  wire wr;
  wire wr_reg_n_0;

  LUT6 #(
    .INIT(64'h0000000000000104)) 
    \DADDR_O[9]_i_1 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(\drp_state_reg_n_0_[1] ),
        .I2(\drp_state_reg_n_0_[0] ),
        .I3(\drp_state_reg_n_0_[4] ),
        .I4(\drp_state_reg_n_0_[6] ),
        .I5(\drp_state_reg_n_0_[5] ),
        .O(\DADDR_O[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[0] 
       (.C(drpclk_in),
        .CE(\DADDR_O[9]_i_1_n_0 ),
        .D(daddr[0]),
        .Q(\DADDR_O_reg[9]_0 [0]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[1] 
       (.C(drpclk_in),
        .CE(\DADDR_O[9]_i_1_n_0 ),
        .D(daddr[1]),
        .Q(\DADDR_O_reg[9]_0 [1]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[2] 
       (.C(drpclk_in),
        .CE(\DADDR_O[9]_i_1_n_0 ),
        .D(daddr[2]),
        .Q(\DADDR_O_reg[9]_0 [2]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[3] 
       (.C(drpclk_in),
        .CE(\DADDR_O[9]_i_1_n_0 ),
        .D(daddr[3]),
        .Q(\DADDR_O_reg[9]_0 [3]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[4] 
       (.C(drpclk_in),
        .CE(\DADDR_O[9]_i_1_n_0 ),
        .D(daddr[4]),
        .Q(\DADDR_O_reg[9]_0 [4]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[5] 
       (.C(drpclk_in),
        .CE(\DADDR_O[9]_i_1_n_0 ),
        .D(daddr[5]),
        .Q(\DADDR_O_reg[9]_0 [5]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[6] 
       (.C(drpclk_in),
        .CE(\DADDR_O[9]_i_1_n_0 ),
        .D(daddr[6]),
        .Q(\DADDR_O_reg[9]_0 [6]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[7] 
       (.C(drpclk_in),
        .CE(\DADDR_O[9]_i_1_n_0 ),
        .D(daddr[7]),
        .Q(\DADDR_O_reg[9]_0 [7]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[8] 
       (.C(drpclk_in),
        .CE(\DADDR_O[9]_i_1_n_0 ),
        .D(daddr[8]),
        .Q(\DADDR_O_reg[9]_0 [8]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DADDR_O_reg[9] 
       (.C(drpclk_in),
        .CE(\DADDR_O[9]_i_1_n_0 ),
        .D(daddr[9]),
        .Q(\DADDR_O_reg[9]_0 [9]),
        .R(drprst_in_sync));
  LUT6 #(
    .INIT(64'h0000000000000116)) 
    DEN_O_i_1
       (.I0(\drp_state_reg_n_0_[4] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[1] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .I4(\drp_state_reg_n_0_[6] ),
        .I5(\drp_state_reg_n_0_[0] ),
        .O(DEN_O_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h1)) 
    DEN_O_i_2
       (.I0(\drp_state_reg_n_0_[5] ),
        .I1(\drp_state_reg_n_0_[2] ),
        .O(DEN_O_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    DEN_O_reg
       (.C(drpclk_in),
        .CE(DEN_O_i_1_n_0),
        .D(DEN_O_i_2_n_0),
        .Q(\gen_gtwizard_gtye4.drpen_ch_int ),
        .R(drprst_in_sync));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \DI_O[15]_i_1 
       (.I0(\drp_state_reg_n_0_[5] ),
        .I1(\drp_state_reg_n_0_[6] ),
        .I2(\drp_state_reg_n_0_[4] ),
        .I3(\drp_state_reg_n_0_[0] ),
        .I4(\drp_state_reg_n_0_[1] ),
        .I5(\drp_state_reg_n_0_[2] ),
        .O(\DI_O[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[0] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[0] ),
        .Q(\DI_O_reg[15]_0 [0]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[10] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[10] ),
        .Q(\DI_O_reg[15]_0 [10]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[11] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[11] ),
        .Q(\DI_O_reg[15]_0 [11]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[12] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[12] ),
        .Q(\DI_O_reg[15]_0 [12]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[13] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[13] ),
        .Q(\DI_O_reg[15]_0 [13]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[14] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[14] ),
        .Q(\DI_O_reg[15]_0 [14]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[15] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[15] ),
        .Q(\DI_O_reg[15]_0 [15]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[1] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[1] ),
        .Q(\DI_O_reg[15]_0 [1]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[2] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[2] ),
        .Q(\DI_O_reg[15]_0 [2]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[3] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[3] ),
        .Q(\DI_O_reg[15]_0 [3]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[4] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[4] ),
        .Q(\DI_O_reg[15]_0 [4]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[5] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[5] ),
        .Q(\DI_O_reg[15]_0 [5]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[6] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[6] ),
        .Q(\DI_O_reg[15]_0 [6]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[7] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[7] ),
        .Q(\DI_O_reg[15]_0 [7]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[8] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[8] ),
        .Q(\DI_O_reg[15]_0 [8]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DI_O_reg[9] 
       (.C(drpclk_in),
        .CE(\DI_O[15]_i_1_n_0 ),
        .D(\di_reg_n_0_[9] ),
        .Q(\DI_O_reg[15]_0 [9]),
        .R(drprst_in_sync));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \DO_USR_O[15]_i_1 
       (.I0(arb_state[1]),
        .I1(arb_state[0]),
        .I2(arb_state[2]),
        .I3(arb_state[3]),
        .I4(idx[0]),
        .I5(idx[1]),
        .O(\DO_USR_O[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    \DO_USR_O[47]_i_1 
       (.I0(arb_state[1]),
        .I1(arb_state[0]),
        .I2(arb_state[2]),
        .I3(arb_state[3]),
        .I4(idx[1]),
        .I5(idx[0]),
        .O(\DO_USR_O[47]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[0] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[32]),
        .Q(Q[0]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[10] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[42]),
        .Q(Q[10]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[11] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[43]),
        .Q(Q[11]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[12] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[44]),
        .Q(Q[12]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[13] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[45]),
        .Q(Q[13]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[14] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[46]),
        .Q(Q[14]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[15] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[47]),
        .Q(Q[15]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[1] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[33]),
        .Q(Q[1]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[2] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[34]),
        .Q(Q[2]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[32] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[32]),
        .Q(Q[16]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[33] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[33]),
        .Q(Q[17]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[34] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[34]),
        .Q(Q[18]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[35] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[35]),
        .Q(Q[19]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[36] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[36]),
        .Q(Q[20]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[37] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[37]),
        .Q(Q[21]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[38] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[38]),
        .Q(Q[22]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[39] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[39]),
        .Q(Q[23]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[3] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[35]),
        .Q(Q[3]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[40] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[40]),
        .Q(Q[24]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[41] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[41]),
        .Q(Q[25]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[42] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[42]),
        .Q(Q[26]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[43] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[43]),
        .Q(Q[27]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[44] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[44]),
        .Q(Q[28]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[45] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[45]),
        .Q(Q[29]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[46] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[46]),
        .Q(Q[30]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[47] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[47]_i_1_n_0 ),
        .D(DO_USR_O0[47]),
        .Q(Q[31]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[4] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[36]),
        .Q(Q[4]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[5] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[37]),
        .Q(Q[5]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[6] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[38]),
        .Q(Q[6]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[7] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[39]),
        .Q(Q[7]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[8] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[40]),
        .Q(Q[8]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DO_USR_O_reg[9] 
       (.C(drpclk_in),
        .CE(\DO_USR_O[15]_i_1_n_0 ),
        .D(DO_USR_O0[41]),
        .Q(Q[9]),
        .R(drprst_in_sync));
  LUT6 #(
    .INIT(64'hFFFFFFFB00000002)) 
    \DRDY_USR_O[0]_i_1 
       (.I0(arb_state[2]),
        .I1(arb_state[3]),
        .I2(\DRDY_USR_O[0]_i_2_n_0 ),
        .I3(arb_state[1]),
        .I4(arb_state[0]),
        .I5(drprdy_out),
        .O(\DRDY_USR_O[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \DRDY_USR_O[0]_i_2 
       (.I0(idx[1]),
        .I1(idx[0]),
        .O(\DRDY_USR_O[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFB00000002)) 
    \DRDY_USR_O[2]_i_1 
       (.I0(arb_state[2]),
        .I1(arb_state[3]),
        .I2(arb_state[1]),
        .I3(arb_state[0]),
        .I4(\DRDY_USR_O[2]_i_2_n_0 ),
        .I5(cal_on_tx_drdy),
        .O(\DRDY_USR_O[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \DRDY_USR_O[2]_i_2 
       (.I0(idx[0]),
        .I1(idx[1]),
        .O(\DRDY_USR_O[2]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \DRDY_USR_O_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\DRDY_USR_O[0]_i_1_n_0 ),
        .Q(drprdy_out),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \DRDY_USR_O_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\DRDY_USR_O[2]_i_1_n_0 ),
        .Q(cal_on_tx_drdy),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    DWE_O_reg
       (.C(drpclk_in),
        .CE(DEN_O_i_1_n_0),
        .D(\drp_state_reg_n_0_[4] ),
        .Q(\gen_gtwizard_gtye4.drpwe_ch_int ),
        .R(drprst_in_sync));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \addr_i[2]_i_5 
       (.I0(drpaddr_in[6]),
        .I1(drpaddr_in[7]),
        .I2(drpaddr_in[1]),
        .I3(drpaddr_in[3]),
        .I4(drpaddr_in[4]),
        .I5(drpaddr_in[2]),
        .O(\gt0_drpaddr[8] ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \addr_i[2]_i_7 
       (.I0(drpaddr_in[6]),
        .I1(drpaddr_in[7]),
        .I2(drpaddr_in[0]),
        .I3(drpaddr_in[5]),
        .I4(drpaddr_in[4]),
        .I5(drpaddr_in[2]),
        .O(\gt0_drpaddr[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[0] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(\addr_i_reg[0]_0 ),
        .Q(addr_i[0]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[1] 
       (.C(drpclk_in),
        .CE(\addr_i_reg[2]_0 ),
        .D(\addr_i_reg[2]_1 [0]),
        .Q(addr_i[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[21] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [0]),
        .Q(addr_i[21]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[22] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [1]),
        .Q(addr_i[22]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[23] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [2]),
        .Q(addr_i[23]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[24] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [3]),
        .Q(addr_i[24]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[25] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [4]),
        .Q(addr_i[25]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[26] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [5]),
        .Q(addr_i[26]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[27] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\addr_i_reg[27]_0 [6]),
        .Q(addr_i[27]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[2] 
       (.C(drpclk_in),
        .CE(\addr_i_reg[2]_0 ),
        .D(\addr_i_reg[2]_1 [1]),
        .Q(addr_i[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[3] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(\addr_i_reg[3]_0 ),
        .Q(addr_i[3]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[4] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpaddr_in[3]),
        .Q(addr_i[4]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[5] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(\addr_i_reg[5]_0 ),
        .Q(addr_i[5]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[6] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(\addr_i_reg[6]_0 ),
        .Q(addr_i[6]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[7] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(\addr_i_reg[7]_0 ),
        .Q(addr_i[7]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[8] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpaddr_in[6]),
        .Q(addr_i[8]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \addr_i_reg[9] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpaddr_in[7]),
        .Q(addr_i[9]),
        .R(drprst_in_sync));
  LUT4 #(
    .INIT(16'hFFE9)) 
    \arb_state[0]_i_1 
       (.I0(arb_state[1]),
        .I1(arb_state[0]),
        .I2(arb_state[2]),
        .I3(arb_state[3]),
        .O(p_0_in[0]));
  LUT6 #(
    .INIT(64'h0000000800000038)) 
    \arb_state[1]_i_1 
       (.I0(\arb_state[3]_i_2_n_0 ),
        .I1(arb_state[0]),
        .I2(arb_state[1]),
        .I3(arb_state[3]),
        .I4(arb_state[2]),
        .I5(done_reg_n_0),
        .O(p_0_in[1]));
  LUT5 #(
    .INIT(32'h00100000)) 
    \arb_state[2]_i_1 
       (.I0(arb_state[2]),
        .I1(arb_state[3]),
        .I2(done_reg_n_0),
        .I3(arb_state[0]),
        .I4(arb_state[1]),
        .O(p_0_in[2]));
  LUT5 #(
    .INIT(32'h00020102)) 
    \arb_state[3]_i_1 
       (.I0(arb_state[2]),
        .I1(arb_state[3]),
        .I2(arb_state[1]),
        .I3(arb_state[0]),
        .I4(\arb_state[3]_i_2_n_0 ),
        .O(p_0_in[3]));
  LUT4 #(
    .INIT(16'h88B8)) 
    \arb_state[3]_i_2 
       (.I0(en[2]),
        .I1(idx[1]),
        .I2(en[0]),
        .I3(idx[0]),
        .O(\arb_state[3]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "ARB_START:0001,ARB_INC:1000,ARB_WAIT:0010,ARB_REPORT:0100" *) 
  FDSE #(
    .INIT(1'b1)) 
    \arb_state_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(arb_state[0]),
        .S(drprst_in_sync));
  (* FSM_ENCODED_STATES = "ARB_START:0001,ARB_INC:1000,ARB_WAIT:0010,ARB_REPORT:0100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \arb_state_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(arb_state[1]),
        .R(drprst_in_sync));
  (* FSM_ENCODED_STATES = "ARB_START:0001,ARB_INC:1000,ARB_WAIT:0010,ARB_REPORT:0100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \arb_state_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(arb_state[2]),
        .R(drprst_in_sync));
  (* FSM_ENCODED_STATES = "ARB_START:0001,ARB_INC:1000,ARB_WAIT:0010,ARB_REPORT:0100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \arb_state_reg[3] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(arb_state[3]),
        .R(drprst_in_sync));
  LUT4 #(
    .INIT(16'h2320)) 
    \daddr[0]_i_1 
       (.I0(addr_i[26]),
        .I1(idx[0]),
        .I2(idx[1]),
        .I3(addr_i[0]),
        .O(daddr0[0]));
  LUT4 #(
    .INIT(16'h2320)) 
    \daddr[1]_i_1__0 
       (.I0(addr_i[21]),
        .I1(idx[0]),
        .I2(idx[1]),
        .I3(addr_i[1]),
        .O(daddr0[1]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hF0CA00CA)) 
    \daddr[2]_i_1__0 
       (.I0(addr_i[2]),
        .I1(addr_i[22]),
        .I2(idx[1]),
        .I3(idx[0]),
        .I4(addr_i[0]),
        .O(daddr0[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hC0AFC0A0)) 
    \daddr[3]_i_1__0 
       (.I0(addr_i[23]),
        .I1(addr_i[1]),
        .I2(idx[1]),
        .I3(idx[0]),
        .I4(addr_i[3]),
        .O(daddr0[3]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'hC0AFC0A0)) 
    \daddr[4]_i_1__0 
       (.I0(addr_i[24]),
        .I1(addr_i[2]),
        .I2(idx[1]),
        .I3(idx[0]),
        .I4(addr_i[4]),
        .O(daddr0[4]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'hA0FCA00C)) 
    \daddr[5]_i_1 
       (.I0(addr_i[3]),
        .I1(addr_i[5]),
        .I2(idx[1]),
        .I3(idx[0]),
        .I4(addr_i[25]),
        .O(daddr0[5]));
  LUT5 #(
    .INIT(32'hA0FCA00C)) 
    \daddr[6]_i_1__0 
       (.I0(addr_i[4]),
        .I1(addr_i[6]),
        .I2(idx[1]),
        .I3(idx[0]),
        .I4(addr_i[26]),
        .O(daddr0[6]));
  LUT5 #(
    .INIT(32'hC0AFC0A0)) 
    \daddr[7]_i_1__0 
       (.I0(addr_i[27]),
        .I1(addr_i[5]),
        .I2(idx[1]),
        .I3(idx[0]),
        .I4(addr_i[7]),
        .O(daddr0[7]));
  LUT4 #(
    .INIT(16'h8380)) 
    \daddr[8]_i_1 
       (.I0(addr_i[6]),
        .I1(idx[0]),
        .I2(idx[1]),
        .I3(addr_i[8]),
        .O(daddr0[8]));
  LUT5 #(
    .INIT(32'h00000008)) 
    \daddr[9]_i_1 
       (.I0(\arb_state[3]_i_2_n_0 ),
        .I1(arb_state[0]),
        .I2(arb_state[1]),
        .I3(arb_state[3]),
        .I4(arb_state[2]),
        .O(di));
  LUT4 #(
    .INIT(16'h8380)) 
    \daddr[9]_i_2 
       (.I0(addr_i[7]),
        .I1(idx[0]),
        .I2(idx[1]),
        .I3(addr_i[9]),
        .O(daddr0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[0] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[0]),
        .Q(daddr[0]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[1] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[1]),
        .Q(daddr[1]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[2] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[2]),
        .Q(daddr[2]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[3] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[3]),
        .Q(daddr[3]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[4] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[4]),
        .Q(daddr[4]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[5] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[5]),
        .Q(daddr[5]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[6] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[6]),
        .Q(daddr[6]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[7] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[7]),
        .Q(daddr[7]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[8] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[8]),
        .Q(daddr[8]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[9] 
       (.C(drpclk_in),
        .CE(di),
        .D(daddr0[9]),
        .Q(daddr[9]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[0] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[0]),
        .Q(data_i[0]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[10] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[10]),
        .Q(data_i[10]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[11] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[11]),
        .Q(data_i[11]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[12] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[12]),
        .Q(data_i[12]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[13] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[13]),
        .Q(data_i[13]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[14] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[14]),
        .Q(data_i[14]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[15] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(\data_i_reg[15]_0 ),
        .Q(data_i[15]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[1] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[1]),
        .Q(data_i[1]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[2] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[2]),
        .Q(data_i[2]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[32] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [0]),
        .Q(data_i[32]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[33] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [1]),
        .Q(data_i[33]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[34] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [2]),
        .Q(data_i[34]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[35] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [3]),
        .Q(data_i[35]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[36] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [4]),
        .Q(data_i[36]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[37] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [5]),
        .Q(data_i[37]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[38] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [6]),
        .Q(data_i[38]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[39] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [7]),
        .Q(data_i[39]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[3] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[3]),
        .Q(data_i[3]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[40] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [8]),
        .Q(data_i[40]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[41] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [9]),
        .Q(data_i[41]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[42] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [10]),
        .Q(data_i[42]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[43] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [11]),
        .Q(data_i[43]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[44] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [12]),
        .Q(data_i[44]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[45] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [13]),
        .Q(data_i[45]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[46] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [14]),
        .Q(data_i[46]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[47] 
       (.C(drpclk_in),
        .CE(cal_on_tx_drpen_out),
        .D(\data_i_reg[47]_0 [15]),
        .Q(data_i[47]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[4] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[4]),
        .Q(data_i[4]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[5] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[5]),
        .Q(data_i[5]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[6] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[6]),
        .Q(data_i[6]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[7] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[7]),
        .Q(data_i[7]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[8] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[8]),
        .Q(data_i[8]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \data_i_reg[9] 
       (.C(drpclk_in),
        .CE(drpen_in),
        .D(drpdi_in[9]),
        .Q(data_i[9]),
        .R(drprst_in_sync));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[0]_i_1 
       (.I0(data_i[0]),
        .I1(idx[1]),
        .I2(data_i[32]),
        .I3(idx[0]),
        .O(\di[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[10]_i_1 
       (.I0(data_i[10]),
        .I1(idx[1]),
        .I2(data_i[42]),
        .I3(idx[0]),
        .O(\di[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[11]_i_1 
       (.I0(data_i[11]),
        .I1(idx[1]),
        .I2(data_i[43]),
        .I3(idx[0]),
        .O(\di[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[12]_i_1 
       (.I0(data_i[12]),
        .I1(idx[1]),
        .I2(data_i[44]),
        .I3(idx[0]),
        .O(\di[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[13]_i_1 
       (.I0(data_i[13]),
        .I1(idx[1]),
        .I2(data_i[45]),
        .I3(idx[0]),
        .O(\di[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[14]_i_1 
       (.I0(data_i[14]),
        .I1(idx[1]),
        .I2(data_i[46]),
        .I3(idx[0]),
        .O(\di[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[15]_i_1 
       (.I0(data_i[15]),
        .I1(idx[1]),
        .I2(data_i[47]),
        .I3(idx[0]),
        .O(\di[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[1]_i_1 
       (.I0(data_i[1]),
        .I1(idx[1]),
        .I2(data_i[33]),
        .I3(idx[0]),
        .O(\di[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[2]_i_1 
       (.I0(data_i[2]),
        .I1(idx[1]),
        .I2(data_i[34]),
        .I3(idx[0]),
        .O(\di[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[3]_i_1 
       (.I0(data_i[3]),
        .I1(idx[1]),
        .I2(data_i[35]),
        .I3(idx[0]),
        .O(\di[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[4]_i_1 
       (.I0(data_i[4]),
        .I1(idx[1]),
        .I2(data_i[36]),
        .I3(idx[0]),
        .O(\di[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[5]_i_1 
       (.I0(data_i[5]),
        .I1(idx[1]),
        .I2(data_i[37]),
        .I3(idx[0]),
        .O(\di[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[6]_i_1 
       (.I0(data_i[6]),
        .I1(idx[1]),
        .I2(data_i[38]),
        .I3(idx[0]),
        .O(\di[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[7]_i_1 
       (.I0(data_i[7]),
        .I1(idx[1]),
        .I2(data_i[39]),
        .I3(idx[0]),
        .O(\di[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[8]_i_1 
       (.I0(data_i[8]),
        .I1(idx[1]),
        .I2(data_i[40]),
        .I3(idx[0]),
        .O(\di[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \di[9]_i_1 
       (.I0(data_i[9]),
        .I1(idx[1]),
        .I2(data_i[41]),
        .I3(idx[0]),
        .O(\di[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[0] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[0]_i_1_n_0 ),
        .Q(\di_reg_n_0_[0] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[10] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[10]_i_1_n_0 ),
        .Q(\di_reg_n_0_[10] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[11] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[11]_i_1_n_0 ),
        .Q(\di_reg_n_0_[11] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[12] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[12]_i_1_n_0 ),
        .Q(\di_reg_n_0_[12] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[13] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[13]_i_1_n_0 ),
        .Q(\di_reg_n_0_[13] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[14] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[14]_i_1_n_0 ),
        .Q(\di_reg_n_0_[14] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[15] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[15]_i_1_n_0 ),
        .Q(\di_reg_n_0_[15] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[1] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[1]_i_1_n_0 ),
        .Q(\di_reg_n_0_[1] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[2] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[2]_i_1_n_0 ),
        .Q(\di_reg_n_0_[2] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[3] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[3]_i_1_n_0 ),
        .Q(\di_reg_n_0_[3] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[4] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[4]_i_1_n_0 ),
        .Q(\di_reg_n_0_[4] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[5] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[5]_i_1_n_0 ),
        .Q(\di_reg_n_0_[5] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[6] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[6]_i_1_n_0 ),
        .Q(\di_reg_n_0_[6] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[7] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[7]_i_1_n_0 ),
        .Q(\di_reg_n_0_[7] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[8] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[8]_i_1_n_0 ),
        .Q(\di_reg_n_0_[8] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[9] 
       (.C(drpclk_in),
        .CE(di),
        .D(\di[9]_i_1_n_0 ),
        .Q(\di_reg_n_0_[9] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[0] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[0]),
        .Q(DO_USR_O0[32]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[10] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[10]),
        .Q(DO_USR_O0[42]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[11] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[11]),
        .Q(DO_USR_O0[43]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[12] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[12]),
        .Q(DO_USR_O0[44]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[13] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[13]),
        .Q(DO_USR_O0[45]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[14] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[14]),
        .Q(DO_USR_O0[46]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[15] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[15]),
        .Q(DO_USR_O0[47]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[1] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[1]),
        .Q(DO_USR_O0[33]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[2] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[2]),
        .Q(DO_USR_O0[34]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[3] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[3]),
        .Q(DO_USR_O0[35]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[4] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[4]),
        .Q(DO_USR_O0[36]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[5] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[5]),
        .Q(DO_USR_O0[37]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[6] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[6]),
        .Q(DO_USR_O0[38]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[7] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[7]),
        .Q(DO_USR_O0[39]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[8] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[8]),
        .Q(DO_USR_O0[40]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \do_r_reg[9] 
       (.C(drpclk_in),
        .CE(do_r),
        .D(D[9]),
        .Q(DO_USR_O0[41]),
        .R(drprst_in_sync));
  LUT6 #(
    .INIT(64'h010101FF01010100)) 
    done_i_1
       (.I0(\drp_state_reg_n_0_[1] ),
        .I1(\drp_state_reg_n_0_[6] ),
        .I2(done_i_2_n_0),
        .I3(done_i_3_n_0),
        .I4(done_i_4_n_0),
        .I5(done_reg_n_0),
        .O(done_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hAAAAFFBF)) 
    done_i_2
       (.I0(\drp_state_reg_n_0_[4] ),
        .I1(\timeout_cntr_reg_n_0_[7] ),
        .I2(\timeout_cntr_reg_n_0_[6] ),
        .I3(\timeout_cntr[7]_i_4_n_0 ),
        .I4(\gen_gtwizard_gtye4.drprdy_int ),
        .O(done_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000000334)) 
    done_i_3
       (.I0(\drp_state[6]_i_2_n_0 ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[4] ),
        .I3(\drp_state_reg_n_0_[6] ),
        .I4(\drp_state_reg_n_0_[2] ),
        .I5(\drp_state[6]_i_3_n_0 ),
        .O(done_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFF0040)) 
    done_i_4
       (.I0(\drp_state_reg_n_0_[0] ),
        .I1(\drp_state[4]_i_2_n_0 ),
        .I2(\drp_state_reg_n_0_[2] ),
        .I3(\drp_state[6]_i_2_n_0 ),
        .I4(done_i_5_n_0),
        .O(done_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    done_i_5
       (.I0(\drp_state_reg_n_0_[4] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[2] ),
        .I3(\drp_state_reg_n_0_[1] ),
        .I4(\drp_state_reg_n_0_[0] ),
        .I5(\drp_state_reg_n_0_[6] ),
        .O(done_i_5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(done_i_1_n_0),
        .Q(done_reg_n_0),
        .R(drprst_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'hFFFFFEEA)) 
    \drp_state[0]_i_1 
       (.I0(\drp_state[0]_i_2_n_0 ),
        .I1(\drp_state_reg_n_0_[2] ),
        .I2(\drp_state_reg_n_0_[4] ),
        .I3(\drp_state_reg_n_0_[5] ),
        .I4(\drp_state_reg_n_0_[6] ),
        .O(drp_state[0]));
  LUT6 #(
    .INIT(64'hFFCDFFFFCC33CCCC)) 
    \drp_state[0]_i_2 
       (.I0(rd_reg_n_0),
        .I1(\drp_state_reg_n_0_[1] ),
        .I2(wr_reg_n_0),
        .I3(\drp_state_reg_n_0_[4] ),
        .I4(DEN_O_i_2_n_0),
        .I5(\drp_state_reg_n_0_[0] ),
        .O(\drp_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \drp_state[1]_i_1__0 
       (.I0(\drp_state_reg_n_0_[6] ),
        .I1(\drp_state_reg_n_0_[1] ),
        .I2(\drp_state[2]_i_2_n_0 ),
        .I3(rd_reg_n_0),
        .I4(\drp_state_reg_n_0_[2] ),
        .I5(\drp_state_reg_n_0_[0] ),
        .O(drp_state[1]));
  LUT6 #(
    .INIT(64'h0002000000080008)) 
    \drp_state[2]_i_1__0 
       (.I0(\drp_state[2]_i_2_n_0 ),
        .I1(\drp_state_reg_n_0_[1] ),
        .I2(\drp_state_reg_n_0_[6] ),
        .I3(\drp_state_reg_n_0_[0] ),
        .I4(\drp_state[6]_i_2_n_0 ),
        .I5(\drp_state_reg_n_0_[2] ),
        .O(drp_state[2]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \drp_state[2]_i_2 
       (.I0(\drp_state_reg_n_0_[5] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .O(\drp_state[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00200000)) 
    \drp_state[4]_i_1__0 
       (.I0(\drp_state[4]_i_2_n_0 ),
        .I1(\drp_state_reg_n_0_[2] ),
        .I2(\drp_state_reg_n_0_[0] ),
        .I3(rd_reg_n_0),
        .I4(wr_reg_n_0),
        .O(drp_state[4]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \drp_state[4]_i_2 
       (.I0(\drp_state_reg_n_0_[4] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[1] ),
        .I3(\drp_state_reg_n_0_[6] ),
        .O(\drp_state[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000002C)) 
    \drp_state[5]_i_1__0 
       (.I0(\drp_state[6]_i_2_n_0 ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state[5]_i_2_n_0 ),
        .I4(\drp_state_reg_n_0_[1] ),
        .I5(\drp_state_reg_n_0_[2] ),
        .O(drp_state[5]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \drp_state[5]_i_2 
       (.I0(\drp_state_reg_n_0_[0] ),
        .I1(\drp_state_reg_n_0_[6] ),
        .O(\drp_state[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100010000)) 
    \drp_state[6]_i_1 
       (.I0(\drp_state[6]_i_2_n_0 ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[6] ),
        .I3(\drp_state[6]_i_3_n_0 ),
        .I4(\drp_state_reg_n_0_[5] ),
        .I5(\drp_state_reg_n_0_[2] ),
        .O(do_r));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h4555)) 
    \drp_state[6]_i_2 
       (.I0(\gen_gtwizard_gtye4.drprdy_int ),
        .I1(\timeout_cntr[7]_i_4_n_0 ),
        .I2(\timeout_cntr_reg_n_0_[6] ),
        .I3(\timeout_cntr_reg_n_0_[7] ),
        .O(\drp_state[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \drp_state[6]_i_3 
       (.I0(\drp_state_reg_n_0_[0] ),
        .I1(\drp_state_reg_n_0_[1] ),
        .O(\drp_state[6]_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \drp_state_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(drp_state[0]),
        .Q(\drp_state_reg_n_0_[0] ),
        .S(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(drp_state[1]),
        .Q(\drp_state_reg_n_0_[1] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(drp_state[2]),
        .Q(\drp_state_reg_n_0_[2] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[4] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(drp_state[4]),
        .Q(\drp_state_reg_n_0_[4] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[5] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(drp_state[5]),
        .Q(\drp_state_reg_n_0_[5] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \drp_state_reg[6] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(do_r),
        .Q(\drp_state_reg_n_0_[6] ),
        .R(drprst_in_sync));
  LUT4 #(
    .INIT(16'hAAAE)) 
    \en[0]_i_1 
       (.I0(drpen_in),
        .I1(done_reg_n_0),
        .I2(idx[0]),
        .I3(idx[1]),
        .O(we[0]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'hAAA2)) 
    \en[0]_i_2 
       (.I0(drpen_in),
        .I1(done_reg_n_0),
        .I2(idx[0]),
        .I3(idx[1]),
        .O(\en[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hBAAA)) 
    \en[2]_i_1 
       (.I0(cal_on_tx_drpen_out),
        .I1(idx[0]),
        .I2(idx[1]),
        .I3(done_reg_n_0),
        .O(we[2]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h8AAA)) 
    \en[2]_i_2 
       (.I0(cal_on_tx_drpen_out),
        .I1(idx[0]),
        .I2(idx[1]),
        .I3(done_reg_n_0),
        .O(\en[2]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \en_reg[0] 
       (.C(drpclk_in),
        .CE(we[0]),
        .D(\en[0]_i_2_n_0 ),
        .Q(en[0]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \en_reg[2] 
       (.C(drpclk_in),
        .CE(we[2]),
        .D(\en[2]_i_2_n_0 ),
        .Q(en[2]),
        .R(drprst_in_sync));
  LUT4 #(
    .INIT(16'h0004)) 
    \idx[0]__0_i_1 
       (.I0(arb_state[2]),
        .I1(arb_state[3]),
        .I2(arb_state[0]),
        .I3(arb_state[1]),
        .O(CEB2));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \idx[0]__0_i_2 
       (.I0(idx[0]),
        .I1(idx[1]),
        .O(\idx[0]__0_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \idx[1]__0_i_1 
       (.I0(idx[0]),
        .I1(idx[1]),
        .O(B));
  FDRE #(
    .INIT(1'b0)) 
    \idx_reg[0]__0 
       (.C(drpclk_in),
        .CE(CEB2),
        .D(\idx[0]__0_i_2_n_0 ),
        .Q(idx[0]),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \idx_reg[1]__0 
       (.C(drpclk_in),
        .CE(CEB2),
        .D(B),
        .Q(idx[1]),
        .R(drprst_in_sync));
  LUT6 #(
    .INIT(64'h000000000BFB0000)) 
    rd_i_1
       (.I0(idx[0]),
        .I1(\we_reg_n_0_[0] ),
        .I2(idx[1]),
        .I3(\we_reg_n_0_[2] ),
        .I4(\arb_state[3]_i_2_n_0 ),
        .I5(arb_state[1]),
        .O(rd_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rd_reg
       (.C(drpclk_in),
        .CE(rd),
        .D(rd_i_1_n_0),
        .Q(rd_reg_n_0),
        .R(drprst_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h54)) 
    \timeout_cntr[0]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[0] ),
        .I1(\drp_state_reg_n_0_[2] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .O(timeout_cntr[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h6660)) 
    \timeout_cntr[1]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[0] ),
        .I1(\timeout_cntr_reg_n_0_[1] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .O(timeout_cntr[1]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h78787800)) 
    \timeout_cntr[2]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[1] ),
        .I1(\timeout_cntr_reg_n_0_[0] ),
        .I2(\timeout_cntr_reg_n_0_[2] ),
        .I3(\drp_state_reg_n_0_[5] ),
        .I4(\drp_state_reg_n_0_[2] ),
        .O(timeout_cntr[2]));
  LUT6 #(
    .INIT(64'h7F807F807F800000)) 
    \timeout_cntr[3]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[2] ),
        .I1(\timeout_cntr_reg_n_0_[0] ),
        .I2(\timeout_cntr_reg_n_0_[1] ),
        .I3(\timeout_cntr_reg_n_0_[3] ),
        .I4(\drp_state_reg_n_0_[5] ),
        .I5(\drp_state_reg_n_0_[2] ),
        .O(timeout_cntr[3]));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \timeout_cntr[4]_i_1 
       (.I0(\timeout_cntr_reg_n_0_[3] ),
        .I1(\timeout_cntr_reg_n_0_[1] ),
        .I2(\timeout_cntr_reg_n_0_[0] ),
        .I3(\timeout_cntr_reg_n_0_[2] ),
        .I4(\timeout_cntr_reg_n_0_[4] ),
        .I5(DEN_O_i_2_n_0),
        .O(timeout_cntr[4]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h9990)) 
    \timeout_cntr[5]_i_1 
       (.I0(\timeout_cntr[5]_i_2_n_0 ),
        .I1(\timeout_cntr_reg_n_0_[5] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .O(timeout_cntr[5]));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \timeout_cntr[5]_i_2 
       (.I0(\timeout_cntr_reg_n_0_[3] ),
        .I1(\timeout_cntr_reg_n_0_[1] ),
        .I2(\timeout_cntr_reg_n_0_[0] ),
        .I3(\timeout_cntr_reg_n_0_[2] ),
        .I4(\timeout_cntr_reg_n_0_[4] ),
        .O(\timeout_cntr[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h9990)) 
    \timeout_cntr[6]_i_1 
       (.I0(\timeout_cntr[7]_i_4_n_0 ),
        .I1(\timeout_cntr_reg_n_0_[6] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .O(timeout_cntr[6]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'hD2D2D200)) 
    \timeout_cntr[7]_i_2 
       (.I0(\timeout_cntr_reg_n_0_[6] ),
        .I1(\timeout_cntr[7]_i_4_n_0 ),
        .I2(\timeout_cntr_reg_n_0_[7] ),
        .I3(\drp_state_reg_n_0_[5] ),
        .I4(\drp_state_reg_n_0_[2] ),
        .O(timeout_cntr[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEE9)) 
    \timeout_cntr[7]_i_3 
       (.I0(\drp_state_reg_n_0_[6] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[5] ),
        .I3(\drp_state_reg_n_0_[2] ),
        .I4(\drp_state_reg_n_0_[1] ),
        .I5(\drp_state_reg_n_0_[0] ),
        .O(\drp_state_reg[6]_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \timeout_cntr[7]_i_4 
       (.I0(\timeout_cntr_reg_n_0_[4] ),
        .I1(\timeout_cntr_reg_n_0_[2] ),
        .I2(\timeout_cntr_reg_n_0_[0] ),
        .I3(\timeout_cntr_reg_n_0_[1] ),
        .I4(\timeout_cntr_reg_n_0_[3] ),
        .I5(\timeout_cntr_reg_n_0_[5] ),
        .O(\timeout_cntr[7]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[0] 
       (.C(drpclk_in),
        .CE(E),
        .D(timeout_cntr[0]),
        .Q(\timeout_cntr_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[1] 
       (.C(drpclk_in),
        .CE(E),
        .D(timeout_cntr[1]),
        .Q(\timeout_cntr_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[2] 
       (.C(drpclk_in),
        .CE(E),
        .D(timeout_cntr[2]),
        .Q(\timeout_cntr_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[3] 
       (.C(drpclk_in),
        .CE(E),
        .D(timeout_cntr[3]),
        .Q(\timeout_cntr_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[4] 
       (.C(drpclk_in),
        .CE(E),
        .D(timeout_cntr[4]),
        .Q(\timeout_cntr_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[5] 
       (.C(drpclk_in),
        .CE(E),
        .D(timeout_cntr[5]),
        .Q(\timeout_cntr_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[6] 
       (.C(drpclk_in),
        .CE(E),
        .D(timeout_cntr[6]),
        .Q(\timeout_cntr_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \timeout_cntr_reg[7] 
       (.C(drpclk_in),
        .CE(E),
        .D(timeout_cntr[7]),
        .Q(\timeout_cntr_reg_n_0_[7] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'hAAA2)) 
    \we[0]_i_1 
       (.I0(drpwe_in),
        .I1(done_reg_n_0),
        .I2(idx[0]),
        .I3(idx[1]),
        .O(\we[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h8AAA)) 
    \we[2]_i_1 
       (.I0(cal_on_tx_drpwe_out),
        .I1(idx[0]),
        .I2(idx[1]),
        .I3(done_reg_n_0),
        .O(\we[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \we_reg[0] 
       (.C(drpclk_in),
        .CE(we[0]),
        .D(\we[0]_i_1_n_0 ),
        .Q(\we_reg_n_0_[0] ),
        .R(drprst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \we_reg[2] 
       (.C(drpclk_in),
        .CE(we[2]),
        .D(\we[2]_i_1_n_0 ),
        .Q(\we_reg_n_0_[2] ),
        .R(drprst_in_sync));
  LUT4 #(
    .INIT(16'h0110)) 
    wr_i_1
       (.I0(arb_state[2]),
        .I1(arb_state[3]),
        .I2(arb_state[0]),
        .I3(arb_state[1]),
        .O(rd));
  LUT6 #(
    .INIT(64'h00000000F4040000)) 
    wr_i_2
       (.I0(idx[0]),
        .I1(\we_reg_n_0_[0] ),
        .I2(idx[1]),
        .I3(\we_reg_n_0_[2] ),
        .I4(\arb_state[3]_i_2_n_0 ),
        .I5(arb_state[1]),
        .O(wr));
  FDRE #(
    .INIT(1'b0)) 
    wr_reg
       (.C(drpclk_in),
        .CE(rd),
        .D(wr),
        .Q(wr_reg_n_0),
        .R(drprst_in_sync));
endmodule

module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gtwiz_reset
   (rst_in_out_reg,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    \gen_gtwizard_gtye4.txuserrdy_int ,
    \gen_gtwizard_gtye4.rxprogdivreset_int ,
    \gen_gtwizard_gtye4.gtrxreset_int ,
    \gen_gtwizard_gtye4.rxuserrdy_int ,
    \gen_gtwizard_gtye4.gttxreset_ch_int ,
    RESET_IN,
    gtpowergood_out,
    gtwiz_userclk_tx_active_in,
    cplllock_out,
    gtwiz_userclk_rx_active_in,
    rxcdrlock_out,
    drpclk_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    rst_in0,
    txusrclk_in,
    rxusrclk2_in,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    \gen_gtwizard_gtye4.gtpowergood_int ,
    gtwiz_reset_rx_datapath_in);
  output rst_in_out_reg;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output \gen_gtwizard_gtye4.txuserrdy_int ;
  output \gen_gtwizard_gtye4.rxprogdivreset_int ;
  output \gen_gtwizard_gtye4.gtrxreset_int ;
  output \gen_gtwizard_gtye4.rxuserrdy_int ;
  output \gen_gtwizard_gtye4.gttxreset_ch_int ;
  output RESET_IN;
  input [0:0]gtpowergood_out;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]cplllock_out;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]rxcdrlock_out;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input rst_in0;
  input [0:0]txusrclk_in;
  input [0:0]rxusrclk2_in;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input \gen_gtwizard_gtye4.gtpowergood_int ;
  input [0:0]gtwiz_reset_rx_datapath_in;

  wire \FSM_sequential_sm_reset_all[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_all[2]_i_4_n_0 ;
  wire \FSM_sequential_sm_reset_rx[2]_i_2_n_0 ;
  wire RESET_IN;
  wire bit_synchronizer_gtpowergood_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_2;
  wire bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_1;
  wire bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_2;
  wire bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_1;
  wire bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2;
  wire bit_synchronizer_plllock_rx_inst_n_0;
  wire bit_synchronizer_plllock_rx_inst_n_1;
  wire bit_synchronizer_plllock_rx_inst_n_2;
  wire bit_synchronizer_plllock_rx_inst_n_3;
  wire bit_synchronizer_plllock_rx_inst_n_4;
  wire bit_synchronizer_plllock_tx_inst_n_0;
  wire bit_synchronizer_plllock_tx_inst_n_1;
  wire bit_synchronizer_plllock_tx_inst_n_2;
  wire bit_synchronizer_plllock_tx_inst_n_3;
  wire bit_synchronizer_rxcdrlock_inst_n_0;
  wire bit_synchronizer_rxcdrlock_inst_n_1;
  wire bit_synchronizer_rxcdrlock_inst_n_2;
  wire [0:0]cplllock_out;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire \gen_gtwizard_gtye4.gtpowergood_int ;
  wire \gen_gtwizard_gtye4.gtrxreset_int ;
  wire \gen_gtwizard_gtye4.gttxreset_ch_int ;
  wire \gen_gtwizard_gtye4.gttxreset_int ;
  wire \gen_gtwizard_gtye4.rxprogdivreset_int ;
  wire \gen_gtwizard_gtye4.rxuserrdy_int ;
  wire \gen_gtwizard_gtye4.txuserrdy_int ;
  wire [0:0]gtpowergood_out;
  wire gtwiz_reset_all_sync;
  wire gtwiz_reset_rx_any_sync;
  wire gtwiz_reset_rx_datapath_dly;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire gtwiz_reset_rx_datapath_int_i_1_n_0;
  wire gtwiz_reset_rx_datapath_int_reg_n_0;
  wire gtwiz_reset_rx_datapath_sync;
  wire gtwiz_reset_rx_done_int_reg_n_0;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0;
  wire gtwiz_reset_rx_pll_and_datapath_int_reg_n_0;
  wire gtwiz_reset_rx_pll_and_datapath_sync;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_datapath_dly;
  wire gtwiz_reset_tx_datapath_sync;
  wire gtwiz_reset_tx_done_int0__0;
  wire gtwiz_reset_tx_done_int_reg_n_0;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0;
  wire gtwiz_reset_tx_pll_and_datapath_int_reg_n_0;
  wire gtwiz_reset_tx_pll_and_datapath_sync;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire p_0_in;
  wire p_0_in11_out__0;
  wire [9:0]p_0_in__2;
  wire [9:0]p_0_in__3;
  wire reset_synchronizer_gtwiz_reset_rx_any_inst_n_1;
  wire reset_synchronizer_gtwiz_reset_tx_any_inst_n_1;
  wire rst_in0;
  wire rst_in_out_reg;
  wire [0:0]rxcdrlock_out;
  wire [0:0]rxusrclk2_in;
  wire sel;
  wire [2:0]sm_reset_all;
  wire [2:0]sm_reset_all__0;
  wire sm_reset_all_timer_clr_i_1_n_0;
  wire sm_reset_all_timer_clr_i_2_n_0;
  wire sm_reset_all_timer_clr_reg_n_0;
  wire [2:0]sm_reset_all_timer_ctr;
  wire \sm_reset_all_timer_ctr0_inferred__0/i__n_0 ;
  wire \sm_reset_all_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_all_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_all_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_all_timer_sat;
  wire sm_reset_all_timer_sat_i_1_n_0;
  wire [2:0]sm_reset_rx;
  wire [1:0]sm_reset_rx__0;
  wire sm_reset_rx_cdr_to_clr;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_6_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_7_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_8_n_0 ;
  wire [25:0]sm_reset_rx_cdr_to_ctr_reg;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_4 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_4 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_4 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ;
  wire sm_reset_rx_cdr_to_sat;
  wire sm_reset_rx_cdr_to_sat_i_1_n_0;
  wire sm_reset_rx_pll_timer_clr_i_1_n_0;
  wire sm_reset_rx_pll_timer_clr_reg_n_0;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ;
  wire [9:0]sm_reset_rx_pll_timer_ctr_reg;
  wire sm_reset_rx_pll_timer_sat;
  wire sm_reset_rx_pll_timer_sat_i_1_n_0;
  wire sm_reset_rx_timer_clr_reg_n_0;
  wire [2:0]sm_reset_rx_timer_ctr;
  wire \sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ;
  wire \sm_reset_rx_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_rx_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_rx_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_rx_timer_sat;
  wire sm_reset_rx_timer_sat_i_1_n_0;
  wire [2:0]sm_reset_tx;
  wire [2:0]sm_reset_tx__0;
  wire sm_reset_tx_pll_timer_clr_i_1_n_0;
  wire sm_reset_tx_pll_timer_clr_reg_n_0;
  wire \sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ;
  wire \sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ;
  wire [9:0]sm_reset_tx_pll_timer_ctr_reg;
  wire sm_reset_tx_pll_timer_sat;
  wire sm_reset_tx_pll_timer_sat_i_1_n_0;
  wire sm_reset_tx_timer_clr013_out__0;
  wire sm_reset_tx_timer_clr0__0;
  wire sm_reset_tx_timer_clr_reg_n_0;
  wire [2:0]sm_reset_tx_timer_ctr;
  wire \sm_reset_tx_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_tx_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_tx_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_tx_timer_sat;
  wire sm_reset_tx_timer_sat_i_1_n_0;
  wire [0:0]txusrclk_in;
  wire [7:1]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h00FFF70000FFFFFF)) 
    \FSM_sequential_sm_reset_all[0]_i_1 
       (.I0(gtwiz_reset_rx_done_int_reg_n_0),
        .I1(sm_reset_all_timer_sat),
        .I2(sm_reset_all_timer_clr_reg_n_0),
        .I3(sm_reset_all[2]),
        .I4(sm_reset_all[1]),
        .I5(sm_reset_all[0]),
        .O(sm_reset_all__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h34)) 
    \FSM_sequential_sm_reset_all[1]_i_1 
       (.I0(sm_reset_all[2]),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[0]),
        .O(sm_reset_all__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h4A)) 
    \FSM_sequential_sm_reset_all[2]_i_2 
       (.I0(sm_reset_all[2]),
        .I1(sm_reset_all[0]),
        .I2(sm_reset_all[1]),
        .O(sm_reset_all__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \FSM_sequential_sm_reset_all[2]_i_3 
       (.I0(sm_reset_all_timer_sat),
        .I1(gtwiz_reset_rx_done_int_reg_n_0),
        .I2(sm_reset_all_timer_clr_reg_n_0),
        .O(\FSM_sequential_sm_reset_all[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_all[2]_i_4 
       (.I0(sm_reset_all_timer_clr_reg_n_0),
        .I1(sm_reset_all_timer_sat),
        .I2(gtwiz_reset_tx_done_int_reg_n_0),
        .O(\FSM_sequential_sm_reset_all[2]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_WAIT:101,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_INIT:111,iSTATE:110" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[0] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtpowergood_inst_n_0),
        .D(sm_reset_all__0[0]),
        .Q(sm_reset_all[0]),
        .R(gtwiz_reset_all_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_WAIT:101,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_INIT:111,iSTATE:110" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[1] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtpowergood_inst_n_0),
        .D(sm_reset_all__0[1]),
        .Q(sm_reset_all[1]),
        .R(gtwiz_reset_all_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_WAIT:101,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_INIT:111,iSTATE:110" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[2] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtpowergood_inst_n_0),
        .D(sm_reset_all__0[2]),
        .Q(sm_reset_all[2]),
        .R(gtwiz_reset_all_sync));
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_rx[1]_i_2 
       (.I0(sm_reset_rx_timer_clr_reg_n_0),
        .I1(sm_reset_rx_timer_sat),
        .I2(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .O(p_0_in11_out__0));
  LUT6 #(
    .INIT(64'hFFFFFF000800FF00)) 
    \FSM_sequential_sm_reset_rx[2]_i_2 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .I1(sm_reset_rx_timer_sat),
        .I2(sm_reset_rx_timer_clr_reg_n_0),
        .I3(sm_reset_rx[2]),
        .I4(sm_reset_rx[1]),
        .I5(sm_reset_rx[0]),
        .O(\FSM_sequential_sm_reset_rx[2]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_PLL:001,ST_RESET_RX_BRANCH:000,ST_RESET_RX_IDLE:111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_rx_reg[0] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_plllock_rx_inst_n_0),
        .D(sm_reset_rx__0[0]),
        .Q(sm_reset_rx[0]),
        .R(gtwiz_reset_rx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_PLL:001,ST_RESET_RX_BRANCH:000,ST_RESET_RX_IDLE:111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_rx_reg[1] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_plllock_rx_inst_n_0),
        .D(sm_reset_rx__0[1]),
        .Q(sm_reset_rx[1]),
        .R(gtwiz_reset_rx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_PLL:001,ST_RESET_RX_BRANCH:000,ST_RESET_RX_IDLE:111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_rx_reg[2] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_plllock_rx_inst_n_0),
        .D(\FSM_sequential_sm_reset_rx[2]_i_2_n_0 ),
        .Q(sm_reset_rx[2]),
        .R(gtwiz_reset_rx_any_sync));
  LUT3 #(
    .INIT(8'h38)) 
    \FSM_sequential_sm_reset_tx[2]_i_2 
       (.I0(sm_reset_tx[0]),
        .I1(sm_reset_tx[1]),
        .I2(sm_reset_tx[2]),
        .O(sm_reset_tx__0[2]));
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_tx[2]_i_4 
       (.I0(sm_reset_tx_timer_clr_reg_n_0),
        .I1(sm_reset_tx_timer_sat),
        .I2(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .O(gtwiz_reset_tx_done_int0__0));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_PLL:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_tx_reg[0] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_plllock_tx_inst_n_0),
        .D(sm_reset_tx__0[0]),
        .Q(sm_reset_tx[0]),
        .R(gtwiz_reset_tx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_PLL:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_tx_reg[1] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_plllock_tx_inst_n_0),
        .D(sm_reset_tx__0[1]),
        .Q(sm_reset_tx[1]),
        .R(gtwiz_reset_tx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_PLL:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_tx_reg[2] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_plllock_tx_inst_n_0),
        .D(sm_reset_tx__0[2]),
        .Q(sm_reset_tx[2]),
        .R(gtwiz_reset_tx_any_sync));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_31 bit_synchronizer_gtpowergood_inst
       (.E(bit_synchronizer_gtpowergood_inst_n_0),
        .\FSM_sequential_sm_reset_all_reg[0] (\FSM_sequential_sm_reset_all[2]_i_3_n_0 ),
        .\FSM_sequential_sm_reset_all_reg[0]_0 (\FSM_sequential_sm_reset_all[2]_i_4_n_0 ),
        .Q(sm_reset_all),
        .drpclk_in(drpclk_in),
        .gtpowergood_out(gtpowergood_out));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_32 bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_rx_datapath_dly(gtwiz_reset_rx_datapath_dly),
        .in0(gtwiz_reset_rx_datapath_sync));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_33 bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst
       (.D(sm_reset_rx__0),
        .\FSM_sequential_sm_reset_rx[2]_i_3 (sm_reset_rx_pll_timer_clr_reg_n_0),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_rx_datapath_dly(gtwiz_reset_rx_datapath_dly),
        .in0(gtwiz_reset_rx_pll_and_datapath_sync),
        .p_0_in11_out__0(p_0_in11_out__0),
        .sm_reset_rx_pll_timer_sat(sm_reset_rx_pll_timer_sat),
        .sm_reset_rx_pll_timer_sat_reg(bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_2));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_34 bit_synchronizer_gtwiz_reset_tx_datapath_dly_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_tx_datapath_dly(gtwiz_reset_tx_datapath_dly),
        .in0(gtwiz_reset_tx_datapath_sync));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_35 bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst
       (.D(sm_reset_tx__0[1:0]),
        .\FSM_sequential_sm_reset_tx[2]_i_3 (sm_reset_tx_pll_timer_clr_reg_n_0),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_tx_datapath_dly(gtwiz_reset_tx_datapath_dly),
        .in0(gtwiz_reset_tx_pll_and_datapath_sync),
        .sm_reset_tx_pll_timer_sat(sm_reset_tx_pll_timer_sat),
        .sm_reset_tx_pll_timer_sat_reg(bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_0));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_36 bit_synchronizer_gtwiz_reset_userclk_rx_active_inst
       (.\FSM_sequential_sm_reset_rx_reg[0] (bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_1),
        .\FSM_sequential_sm_reset_rx_reg[0]_0 (bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_2),
        .\FSM_sequential_sm_reset_rx_reg[0]_1 (bit_synchronizer_rxcdrlock_inst_n_0),
        .\FSM_sequential_sm_reset_rx_reg[1] (bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_0),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .\gen_gtwizard_gtye4.rxuserrdy_int (\gen_gtwizard_gtye4.rxuserrdy_int ),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .p_0_in11_out__0(p_0_in11_out__0),
        .sm_reset_rx_cdr_to_sat(sm_reset_rx_cdr_to_sat),
        .sm_reset_rx_timer_clr_reg(sm_reset_rx_timer_clr_reg_n_0),
        .sm_reset_rx_timer_clr_reg_0(bit_synchronizer_plllock_rx_inst_n_1),
        .sm_reset_rx_timer_sat(sm_reset_rx_timer_sat));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_37 bit_synchronizer_gtwiz_reset_userclk_tx_active_inst
       (.\FSM_sequential_sm_reset_tx_reg[1] (bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_1),
        .\FSM_sequential_sm_reset_tx_reg[2] (bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .\gen_gtwizard_gtye4.txuserrdy_int (\gen_gtwizard_gtye4.txuserrdy_int ),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .sm_reset_tx_timer_clr013_out__0(sm_reset_tx_timer_clr013_out__0),
        .sm_reset_tx_timer_clr0__0(sm_reset_tx_timer_clr0__0),
        .sm_reset_tx_timer_clr_reg(sm_reset_tx_timer_clr_reg_n_0),
        .sm_reset_tx_timer_clr_reg_0(bit_synchronizer_plllock_tx_inst_n_1),
        .sm_reset_tx_timer_sat(sm_reset_tx_timer_sat));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_38 bit_synchronizer_plllock_rx_inst
       (.E(bit_synchronizer_plllock_rx_inst_n_0),
        .\FSM_sequential_sm_reset_rx_reg[0] (bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_0),
        .\FSM_sequential_sm_reset_rx_reg[0]_0 (sm_reset_rx_timer_clr_reg_n_0),
        .\FSM_sequential_sm_reset_rx_reg[0]_1 (bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_2),
        .\FSM_sequential_sm_reset_rx_reg[1] (bit_synchronizer_plllock_rx_inst_n_2),
        .\FSM_sequential_sm_reset_rx_reg[1]_0 (bit_synchronizer_plllock_rx_inst_n_4),
        .\FSM_sequential_sm_reset_rx_reg[2] (bit_synchronizer_plllock_rx_inst_n_3),
        .Q(sm_reset_rx),
        .cplllock_out(cplllock_out),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gtrxreset_int (\gen_gtwizard_gtye4.gtrxreset_int ),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_done_int_reg(gtwiz_reset_rx_done_int_reg_n_0),
        .i_in_out_reg_0(bit_synchronizer_plllock_rx_inst_n_1),
        .p_0_in11_out__0(p_0_in11_out__0),
        .sm_reset_rx_timer_sat(sm_reset_rx_timer_sat));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_39 bit_synchronizer_plllock_tx_inst
       (.E(bit_synchronizer_plllock_tx_inst_n_0),
        .\FSM_sequential_sm_reset_tx_reg[0] (bit_synchronizer_plllock_tx_inst_n_2),
        .\FSM_sequential_sm_reset_tx_reg[0]_0 (sm_reset_tx_timer_clr_reg_n_0),
        .\FSM_sequential_sm_reset_tx_reg[0]_1 (bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_0),
        .\FSM_sequential_sm_reset_tx_reg[1] (bit_synchronizer_plllock_tx_inst_n_3),
        .Q(sm_reset_tx),
        .cplllock_out(cplllock_out),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gttxreset_int (\gen_gtwizard_gtye4.gttxreset_int ),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_reset_tx_done_int0__0(gtwiz_reset_tx_done_int0__0),
        .gtwiz_reset_tx_done_int_reg(gtwiz_reset_tx_done_int_reg_n_0),
        .i_in_out_reg_0(bit_synchronizer_plllock_tx_inst_n_1),
        .sm_reset_tx_timer_clr0__0(sm_reset_tx_timer_clr0__0),
        .sm_reset_tx_timer_sat(sm_reset_tx_timer_sat));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_40 bit_synchronizer_rxcdrlock_inst
       (.\FSM_sequential_sm_reset_rx_reg[1] (bit_synchronizer_rxcdrlock_inst_n_1),
        .\FSM_sequential_sm_reset_rx_reg[2] (bit_synchronizer_rxcdrlock_inst_n_2),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.rxprogdivreset_int (\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .i_in_out_reg_0(bit_synchronizer_rxcdrlock_inst_n_0),
        .rxcdrlock_out(rxcdrlock_out),
        .sm_reset_rx_cdr_to_clr(sm_reset_rx_cdr_to_clr),
        .sm_reset_rx_cdr_to_clr_reg(bit_synchronizer_plllock_rx_inst_n_2),
        .sm_reset_rx_cdr_to_sat(sm_reset_rx_cdr_to_sat));
  FDRE #(
    .INIT(1'b1)) 
    gtrxreset_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_4),
        .Q(\gen_gtwizard_gtye4.gtrxreset_int ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    gttxreset_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_3),
        .Q(\gen_gtwizard_gtye4.gttxreset_int ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'hF740)) 
    gtwiz_reset_rx_datapath_int_i_1
       (.I0(sm_reset_all[2]),
        .I1(sm_reset_all[0]),
        .I2(sm_reset_all[1]),
        .I3(gtwiz_reset_rx_datapath_int_reg_n_0),
        .O(gtwiz_reset_rx_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_datapath_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_rx_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_rx_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_done_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_3),
        .Q(gtwiz_reset_rx_done_int_reg_n_0),
        .R(gtwiz_reset_rx_any_sync));
  LUT4 #(
    .INIT(16'hF704)) 
    gtwiz_reset_rx_pll_and_datapath_int_i_1
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[2]),
        .I2(sm_reset_all[1]),
        .I3(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .O(gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_pll_and_datapath_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_tx_done_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_2),
        .Q(gtwiz_reset_tx_done_int_reg_n_0),
        .R(gtwiz_reset_tx_any_sync));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'hFB02)) 
    gtwiz_reset_tx_pll_and_datapath_int_i_1
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[2]),
        .I3(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .O(gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_tx_pll_and_datapath_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  LUT3 #(
    .INIT(8'h8B)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_i_1 
       (.I0(\gen_gtwizard_gtye4.gttxreset_int ),
        .I1(gtpowergood_out),
        .I2(\gen_gtwizard_gtye4.gtpowergood_int ),
        .O(\gen_gtwizard_gtye4.gttxreset_ch_int ));
  FDRE #(
    .INIT(1'b0)) 
    pllreset_rx_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_rx_any_inst_n_1),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    pllreset_tx_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_tx_any_inst_n_1),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .R(1'b0));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer reset_synchronizer_gtwiz_reset_all_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_all_sync(gtwiz_reset_all_sync),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_41 reset_synchronizer_gtwiz_reset_rx_any_inst
       (.\FSM_sequential_sm_reset_rx_reg[1] (reset_synchronizer_gtwiz_reset_rx_any_inst_n_1),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .rst_in_out_reg_0(gtwiz_reset_rx_datapath_int_reg_n_0),
        .rst_in_out_reg_1(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_42 reset_synchronizer_gtwiz_reset_rx_datapath_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .in0(gtwiz_reset_rx_datapath_sync),
        .rst_in_out_reg_0(gtwiz_reset_rx_datapath_int_reg_n_0));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_43 reset_synchronizer_gtwiz_reset_rx_pll_and_datapath_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .in0(gtwiz_reset_rx_pll_and_datapath_sync),
        .rst_in_out_reg_0(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_44 reset_synchronizer_gtwiz_reset_tx_any_inst
       (.\FSM_sequential_sm_reset_tx_reg[1] (reset_synchronizer_gtwiz_reset_tx_any_inst_n_1),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .rst_in_out_reg_0(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_45 reset_synchronizer_gtwiz_reset_tx_datapath_inst
       (.drpclk_in(drpclk_in),
        .in0(gtwiz_reset_tx_datapath_sync));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_46 reset_synchronizer_gtwiz_reset_tx_pll_and_datapath_inst
       (.drpclk_in(drpclk_in),
        .in0(gtwiz_reset_tx_pll_and_datapath_sync),
        .rst_in_out_reg_0(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_inv_synchronizer reset_synchronizer_rx_done_inst
       (.gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .rst_in_sync2_reg_0(gtwiz_reset_rx_done_int_reg_n_0),
        .rxusrclk2_in(rxusrclk2_in));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_inv_synchronizer_47 reset_synchronizer_tx_done_inst
       (.gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .rst_in_sync2_reg_0(gtwiz_reset_tx_done_int_reg_n_0),
        .txusrclk_in(txusrclk_in));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_48 reset_synchronizer_txprogdivreset_inst
       (.drpclk_in(drpclk_in),
        .rst_in0(rst_in0),
        .rst_in_out_reg_0(rst_in_out_reg));
  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__2
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .I1(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .O(RESET_IN));
  FDRE #(
    .INIT(1'b1)) 
    rxprogdivreset_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_rxcdrlock_inst_n_2),
        .Q(\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxuserrdy_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_2),
        .Q(\gen_gtwizard_gtye4.rxuserrdy_int ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFA200A)) 
    sm_reset_all_timer_clr_i_1
       (.I0(sm_reset_all_timer_clr_i_2_n_0),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[2]),
        .I3(sm_reset_all[0]),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_clr_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000B0003333BB33)) 
    sm_reset_all_timer_clr_i_2
       (.I0(gtwiz_reset_rx_done_int_reg_n_0),
        .I1(sm_reset_all[2]),
        .I2(gtwiz_reset_tx_done_int_reg_n_0),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .I5(sm_reset_all[1]),
        .O(sm_reset_all_timer_clr_i_2_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_all_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_all_timer_clr_i_1_n_0),
        .Q(sm_reset_all_timer_clr_reg_n_0),
        .S(gtwiz_reset_all_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_all_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_all_timer_ctr[2]),
        .I1(sm_reset_all_timer_ctr[0]),
        .I2(sm_reset_all_timer_ctr[1]),
        .O(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_all_timer_ctr[0]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .O(\sm_reset_all_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_all_timer_ctr[1]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .I1(sm_reset_all_timer_ctr[1]),
        .O(\sm_reset_all_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_all_timer_ctr[2]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .I1(sm_reset_all_timer_ctr[1]),
        .I2(sm_reset_all_timer_ctr[2]),
        .O(\sm_reset_all_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[0]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[1]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[2]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_all_timer_sat_i_1
       (.I0(sm_reset_all_timer_ctr[2]),
        .I1(sm_reset_all_timer_ctr[0]),
        .I2(sm_reset_all_timer_ctr[1]),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_all_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_all_timer_sat_i_1_n_0),
        .Q(sm_reset_all_timer_sat),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_cdr_to_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_rxcdrlock_inst_n_1),
        .Q(sm_reset_rx_cdr_to_clr),
        .S(gtwiz_reset_rx_any_sync));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_1 
       (.I0(\sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ),
        .I1(sm_reset_rx_cdr_to_ctr_reg[10]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[14]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[15]),
        .I4(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ),
        .I5(\sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_3 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[4]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[0]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[9]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[6]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_4 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[5]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[2]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[3]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[1]),
        .I4(sm_reset_rx_cdr_to_ctr_reg[17]),
        .I5(sm_reset_rx_cdr_to_ctr_reg[18]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00020000)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_5 
       (.I0(\sm_reset_rx_cdr_to_ctr[0]_i_7_n_0 ),
        .I1(sm_reset_rx_cdr_to_ctr_reg[16]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[13]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[19]),
        .I4(\sm_reset_rx_cdr_to_ctr[0]_i_8_n_0 ),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_6 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[0]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_7 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[24]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[23]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[25]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[20]),
        .I4(sm_reset_rx_cdr_to_ctr_reg[21]),
        .I5(sm_reset_rx_cdr_to_ctr_reg[22]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_8 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[12]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[11]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[8]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[7]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_8_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[0]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_3 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_4 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 }),
        .S({sm_reset_rx_cdr_to_ctr_reg[7:1],\sm_reset_rx_cdr_to_ctr[0]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[10] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[10]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[11] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[11]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[12] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[12]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[13] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[13]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[14] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[14]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[15] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[15]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[16] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[16]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[16]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_3 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_4 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 }),
        .S(sm_reset_rx_cdr_to_ctr_reg[23:16]));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[17] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[17]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[18] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[18]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[19] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[19]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[1]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[20] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[20]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[21] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[21]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[22] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[22]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[23] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[23]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[24] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[24]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[24]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_CO_UNCONNECTED [7:1],\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_O_UNCONNECTED [7:2],\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 }),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,sm_reset_rx_cdr_to_ctr_reg[25:24]}));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[25] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[25]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[2]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[3]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[4]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[5]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[6]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[7]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[8]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[8]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_3 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_4 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 }),
        .S(sm_reset_rx_cdr_to_ctr_reg[15:8]));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[9]),
        .R(sm_reset_rx_cdr_to_clr));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_rx_cdr_to_sat_i_1
       (.I0(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .I1(sm_reset_rx_cdr_to_sat),
        .I2(sm_reset_rx_cdr_to_clr),
        .O(sm_reset_rx_cdr_to_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_cdr_to_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_cdr_to_sat_i_1_n_0),
        .Q(sm_reset_rx_cdr_to_sat),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFF3000B)) 
    sm_reset_rx_pll_timer_clr_i_1
       (.I0(sm_reset_rx_pll_timer_sat),
        .I1(sm_reset_rx[0]),
        .I2(sm_reset_rx[1]),
        .I3(sm_reset_rx[2]),
        .I4(sm_reset_rx_pll_timer_clr_reg_n_0),
        .O(sm_reset_rx_pll_timer_clr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_pll_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_pll_timer_clr_i_1_n_0),
        .Q(sm_reset_rx_pll_timer_clr_reg_n_0),
        .S(gtwiz_reset_rx_any_sync));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_pll_timer_ctr[0]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .O(p_0_in__3[0]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_pll_timer_ctr[1]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .O(p_0_in__3[1]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_pll_timer_ctr[2]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[2]),
        .O(p_0_in__3[2]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_rx_pll_timer_ctr[3]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[3]),
        .O(p_0_in__3[3]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_rx_pll_timer_ctr[4]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[4]),
        .O(p_0_in__3[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sm_reset_rx_pll_timer_ctr[5]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[4]),
        .I5(sm_reset_rx_pll_timer_ctr_reg[5]),
        .O(p_0_in__3[5]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_pll_timer_ctr[6]_i_1 
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_rx_pll_timer_ctr_reg[6]),
        .O(p_0_in__3[6]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_pll_timer_ctr[7]_i_1 
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[7]),
        .O(p_0_in__3[7]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_rx_pll_timer_ctr[8]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I1(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_rx_pll_timer_ctr_reg[7]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[8]),
        .O(p_0_in__3[8]));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFFFFFFF)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[5]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I5(\sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_2 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[7]),
        .I1(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[8]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[9]),
        .O(p_0_in__3[9]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_3 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[8]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[9]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[4]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[7]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_4 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[5]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I5(sm_reset_rx_pll_timer_ctr_reg[4]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[0]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[0]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[1]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[1]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[2]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[2]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[3]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[3]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[4]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[4]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[5]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[5]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[6]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[6]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[7]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[7]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[8]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[8]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__3[9]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[9]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_rx_pll_timer_sat_i_1
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .I1(sm_reset_rx_pll_timer_sat),
        .I2(sm_reset_rx_pll_timer_clr_reg_n_0),
        .O(sm_reset_rx_pll_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_pll_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_pll_timer_sat_i_1_n_0),
        .Q(sm_reset_rx_pll_timer_sat),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_1),
        .Q(sm_reset_rx_timer_clr_reg_n_0),
        .S(gtwiz_reset_rx_any_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_rx_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_rx_timer_ctr[2]),
        .I1(sm_reset_rx_timer_ctr[0]),
        .I2(sm_reset_rx_timer_ctr[1]),
        .O(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_timer_ctr[0]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .O(\sm_reset_rx_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_timer_ctr[1]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .I1(sm_reset_rx_timer_ctr[1]),
        .O(\sm_reset_rx_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_timer_ctr[2]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .I1(sm_reset_rx_timer_ctr[1]),
        .I2(sm_reset_rx_timer_ctr[2]),
        .O(\sm_reset_rx_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[0]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[1]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[2]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_rx_timer_sat_i_1
       (.I0(sm_reset_rx_timer_ctr[2]),
        .I1(sm_reset_rx_timer_ctr[0]),
        .I2(sm_reset_rx_timer_ctr[1]),
        .I3(sm_reset_rx_timer_sat),
        .I4(sm_reset_rx_timer_clr_reg_n_0),
        .O(sm_reset_rx_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_timer_sat_i_1_n_0),
        .Q(sm_reset_rx_timer_sat),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFF3000B)) 
    sm_reset_tx_pll_timer_clr_i_1
       (.I0(sm_reset_tx_pll_timer_sat),
        .I1(sm_reset_tx[0]),
        .I2(sm_reset_tx[1]),
        .I3(sm_reset_tx[2]),
        .I4(sm_reset_tx_pll_timer_clr_reg_n_0),
        .O(sm_reset_tx_pll_timer_clr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_tx_pll_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_tx_pll_timer_clr_i_1_n_0),
        .Q(sm_reset_tx_pll_timer_clr_reg_n_0),
        .S(gtwiz_reset_tx_any_sync));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_tx_pll_timer_ctr[0]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .O(p_0_in__2[0]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_pll_timer_ctr[1]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .O(p_0_in__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_pll_timer_ctr[2]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[2]),
        .O(p_0_in__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_tx_pll_timer_ctr[3]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[3]),
        .O(p_0_in__2[3]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_tx_pll_timer_ctr[4]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[4]),
        .O(p_0_in__2[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sm_reset_tx_pll_timer_ctr[5]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[4]),
        .I5(sm_reset_tx_pll_timer_ctr_reg[5]),
        .O(p_0_in__2[5]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_pll_timer_ctr[6]_i_1 
       (.I0(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_tx_pll_timer_ctr_reg[6]),
        .O(p_0_in__2[6]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_pll_timer_ctr[7]_i_1 
       (.I0(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[7]),
        .O(p_0_in__2[7]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_tx_pll_timer_ctr[8]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I1(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_tx_pll_timer_ctr_reg[7]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[8]),
        .O(p_0_in__2[8]));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFFFFFFF)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[5]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I5(\sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_2 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[7]),
        .I1(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[8]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[9]),
        .O(p_0_in__2[9]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_3 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[8]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[9]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[4]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[7]),
        .O(\sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_4 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[5]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I5(sm_reset_tx_pll_timer_ctr_reg[4]),
        .O(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[0]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[0]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[1]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[1]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[2]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[2]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[3]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[3]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[4]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[4]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[5]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[5]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[6]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[6]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[7]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[7]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[8]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[8]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__2[9]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[9]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_tx_pll_timer_sat_i_1
       (.I0(sel),
        .I1(sm_reset_tx_pll_timer_sat),
        .I2(sm_reset_tx_pll_timer_clr_reg_n_0),
        .O(sm_reset_tx_pll_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_tx_pll_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_tx_pll_timer_sat_i_1_n_0),
        .Q(sm_reset_tx_pll_timer_sat),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h2)) 
    sm_reset_tx_timer_clr_i_4
       (.I0(sm_reset_tx_timer_sat),
        .I1(sm_reset_tx_timer_clr_reg_n_0),
        .O(sm_reset_tx_timer_clr013_out__0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_tx_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_1),
        .Q(sm_reset_tx_timer_clr_reg_n_0),
        .S(gtwiz_reset_tx_any_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_tx_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_tx_timer_ctr[2]),
        .I1(sm_reset_tx_timer_ctr[0]),
        .I2(sm_reset_tx_timer_ctr[1]),
        .O(p_0_in));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_tx_timer_ctr[0]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .O(\sm_reset_tx_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_timer_ctr[1]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .I1(sm_reset_tx_timer_ctr[1]),
        .O(\sm_reset_tx_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_timer_ctr[2]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .I1(sm_reset_tx_timer_ctr[1]),
        .I2(sm_reset_tx_timer_ctr[2]),
        .O(\sm_reset_tx_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(p_0_in),
        .D(\sm_reset_tx_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_tx_timer_ctr[0]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(p_0_in),
        .D(\sm_reset_tx_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_tx_timer_ctr[1]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(p_0_in),
        .D(\sm_reset_tx_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_tx_timer_ctr[2]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_tx_timer_sat_i_1
       (.I0(sm_reset_tx_timer_ctr[2]),
        .I1(sm_reset_tx_timer_ctr[0]),
        .I2(sm_reset_tx_timer_ctr[1]),
        .I3(sm_reset_tx_timer_sat),
        .I4(sm_reset_tx_timer_clr_reg_n_0),
        .O(sm_reset_tx_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_tx_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_tx_timer_sat_i_1_n_0),
        .Q(sm_reset_tx_timer_sat),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    txuserrdy_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .Q(\gen_gtwizard_gtye4.txuserrdy_int ),
        .R(1'b0));
endmodule

module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gtye4_channel
   (in0,
    \gen_gtwizard_gtye4.drprdy_int ,
    \gen_gtwizard_gtye4.gtpowergood_int ,
    gtytxn_out,
    gtytxp_out,
    rxcdrlock_out,
    rxoutclk_out,
    rxpmaresetdone_out,
    rxresetdone_out,
    txoutclk_out,
    txoutclkpcs_out,
    txpmaresetdone_out,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ,
    txresetdone_out,
    gtwiz_userdata_rx_out,
    D,
    rxdatavalid_out,
    rxheadervalid_out,
    txbufstatus_out,
    rxbufstatus_out,
    rxheader_out,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_3 ,
    drpclk_in,
    \gen_gtwizard_gtye4.drpen_ch_int ,
    \gen_gtwizard_gtye4.drpwe_ch_int ,
    gtrefclk0_in,
    \gen_gtwizard_gtye4.gtrxreset_int ,
    \gen_gtwizard_gtye4.gttxreset_ch_int ,
    gtyrxn_in,
    gtyrxp_in,
    rxcdrovrden_in,
    rxgearboxslip_in,
    rxpolarity_in,
    \gen_gtwizard_gtye4.rxprogdivreset_int ,
    \gen_gtwizard_gtye4.rxuserrdy_int ,
    rxusrclk_in,
    rxusrclk2_in,
    TXRATE,
    \gen_gtwizard_gtye4.txprogdivreset_ch_int ,
    \gen_gtwizard_gtye4.txuserrdy_int ,
    txusrclk_in,
    gtwiz_userdata_tx_in,
    Q,
    loopback_in,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_4 ,
    txheader_in,
    txsequence_in,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_5 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  output in0;
  output \gen_gtwizard_gtye4.drprdy_int ;
  output \gen_gtwizard_gtye4.gtpowergood_int ;
  output [0:0]gtytxn_out;
  output [0:0]gtytxp_out;
  output [0:0]rxcdrlock_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxresetdone_out;
  output [0:0]txoutclk_out;
  output [0:0]txoutclkpcs_out;
  output [0:0]txpmaresetdone_out;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ;
  output [0:0]txresetdone_out;
  output [63:0]gtwiz_userdata_rx_out;
  output [15:0]D;
  output [0:0]rxdatavalid_out;
  output [0:0]rxheadervalid_out;
  output [0:0]txbufstatus_out;
  output [0:0]rxbufstatus_out;
  output [1:0]rxheader_out;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 ;
  input \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 ;
  input \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_3 ;
  input [0:0]drpclk_in;
  input \gen_gtwizard_gtye4.drpen_ch_int ;
  input \gen_gtwizard_gtye4.drpwe_ch_int ;
  input [0:0]gtrefclk0_in;
  input \gen_gtwizard_gtye4.gtrxreset_int ;
  input \gen_gtwizard_gtye4.gttxreset_ch_int ;
  input [0:0]gtyrxn_in;
  input [0:0]gtyrxp_in;
  input [0:0]rxcdrovrden_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxpolarity_in;
  input \gen_gtwizard_gtye4.rxprogdivreset_int ;
  input \gen_gtwizard_gtye4.rxuserrdy_int ;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]TXRATE;
  input \gen_gtwizard_gtye4.txprogdivreset_ch_int ;
  input \gen_gtwizard_gtye4.txuserrdy_int ;
  input [0:0]txusrclk_in;
  input [63:0]gtwiz_userdata_tx_in;
  input [15:0]Q;
  input [2:0]loopback_in;
  input [2:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_4 ;
  input [1:0]txheader_in;
  input [6:0]txsequence_in;
  input [9:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_5 ;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire [15:0]D;
  wire [15:0]Q;
  wire [0:0]TXRATE;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.drpen_ch_int ;
  wire \gen_gtwizard_gtye4.drprdy_int ;
  wire \gen_gtwizard_gtye4.drpwe_ch_int ;
  wire \gen_gtwizard_gtye4.gtpowergood_int ;
  wire \gen_gtwizard_gtye4.gtrxreset_int ;
  wire \gen_gtwizard_gtye4.gttxreset_ch_int ;
  wire \gen_gtwizard_gtye4.rxprogdivreset_int ;
  wire \gen_gtwizard_gtye4.rxuserrdy_int ;
  wire \gen_gtwizard_gtye4.txprogdivreset_ch_int ;
  wire \gen_gtwizard_gtye4.txuserrdy_int ;
  wire [0:0]gtrefclk0_in;
  wire [63:0]gtwiz_userdata_rx_out;
  wire [63:0]gtwiz_userdata_tx_in;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_3 ;
  wire [2:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_4 ;
  wire [9:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_5 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_1 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_100 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_101 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_102 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_103 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_104 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_105 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_106 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_107 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_108 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_109 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_110 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_111 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_112 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_113 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_114 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_115 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_116 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_117 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_118 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_119 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_12 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_120 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_121 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_122 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_123 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_124 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_125 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_126 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_127 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_128 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_129 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_13 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_130 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_131 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_132 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_133 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_134 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_135 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_136 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_137 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_138 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_14 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_15 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_16 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_17 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_18 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_19 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_2 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_20 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_203 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_204 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_205 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_206 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_207 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_208 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_209 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_21 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_210 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_211 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_212 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_213 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_214 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_215 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_216 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_217 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_218 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_22 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_235 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_236 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_237 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_238 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_239 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_24 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_240 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_241 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_242 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_243 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_244 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_245 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_246 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_247 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_248 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_249 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_25 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_250 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_251 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_252 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_253 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_254 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_255 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_256 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_257 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_258 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_259 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_26 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_260 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_261 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_262 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_263 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_264 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_265 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_266 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_267 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_268 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_269 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_27 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_270 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_271 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_272 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_273 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_274 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_275 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_276 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_277 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_278 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_279 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_28 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_280 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_281 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_282 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_283 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_284 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_285 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_286 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_287 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_288 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_289 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_29 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_290 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_291 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_292 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_293 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_294 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_295 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_296 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_297 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_298 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_299 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_30 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_300 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_301 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_302 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_303 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_304 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_305 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_307 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_309 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_31 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_310 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_312 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_313 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_314 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_315 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_316 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_317 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_318 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_32 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_320 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_321 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_322 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_323 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_324 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_325 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_326 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_327 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_328 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_329 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_33 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_330 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_331 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_332 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_333 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_336 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_337 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_338 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_339 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_34 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_340 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_341 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_342 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_343 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_344 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_345 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_346 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_347 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_348 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_349 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_35 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_350 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_351 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_352 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_353 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_354 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_355 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_356 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_357 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_358 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_359 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_36 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_360 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_361 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_362 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_363 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_364 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_365 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_366 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_367 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_368 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_369 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_37 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_370 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_371 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_372 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_373 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_374 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_375 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_376 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_38 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_39 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_4 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_40 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_41 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_43 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_44 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_45 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_46 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_48 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_49 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_5 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_50 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_51 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_52 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_54 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_55 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_56 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_57 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_58 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_59 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_60 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_61 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_62 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_63 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_65 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_67 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_68 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_7 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_71 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_73 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_74 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_75 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_76 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_77 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_78 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_79 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_80 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_81 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_82 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_83 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_84 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_85 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_86 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_87 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_88 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_89 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_9 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_90 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_91 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_92 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_93 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_94 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_95 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_96 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_97 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_98 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_99 ;
  wire [0:0]gtyrxn_in;
  wire [0:0]gtyrxp_in;
  wire [0:0]gtytxn_out;
  wire [0:0]gtytxp_out;
  wire in0;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire [0:0]rxbufstatus_out;
  wire [0:0]rxcdrlock_out;
  wire [0:0]rxcdrovrden_in;
  wire [0:0]rxdatavalid_out;
  wire [0:0]rxgearboxslip_in;
  wire [1:0]rxheader_out;
  wire [0:0]rxheadervalid_out;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxresetdone_out;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [0:0]txbufstatus_out;
  wire [1:0]txheader_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txoutclkpcs_out;
  wire [0:0]txpmaresetdone_out;
  wire [0:0]txresetdone_out;
  wire [6:0]txsequence_in;
  wire [0:0]txusrclk_in;
  wire xlnx_opt_;
  wire xlnx_opt__1;
  wire xlnx_opt__2;
  wire xlnx_opt__3;

  assign \^lopt_2  = lopt_4;
  assign \^lopt_3  = lopt_5;
  assign lopt_2 = xlnx_opt_;
  assign lopt_3 = xlnx_opt__1;
  assign lopt_6 = xlnx_opt__2;
  assign lopt_7 = xlnx_opt__3;
  (* OPT_MODIFIED = "MLO" *) 
  BUFG_GT_SYNC BUFG_GT_SYNC
       (.CE(lopt),
        .CESYNC(xlnx_opt_),
        .CLK(txoutclk_out),
        .CLR(lopt_1),
        .CLRSYNC(xlnx_opt__1));
  (* OPT_MODIFIED = "MLO" *) 
  BUFG_GT_SYNC BUFG_GT_SYNC_1
       (.CE(\^lopt_2 ),
        .CESYNC(xlnx_opt__2),
        .CLK(rxoutclk_out),
        .CLR(\^lopt_3 ),
        .CLRSYNC(xlnx_opt__3));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_2 
       (.I0(\gen_gtwizard_gtye4.gtpowergood_int ),
        .O(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_1 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTYE4_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'h0000),
    .ADAPT_CFG1(16'hF81C),
    .ADAPT_CFG2(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0000000000),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("FALSE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("FALSE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_RXTERMINATION(1'b1),
    .A_TXDIFFCTRL(5'b01100),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("ENCODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CFOK_PWRSVE_EN(1'b1),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CH_HSPMUX(16'h2020),
    .CKCAL1_CFG_0(16'b1100000011000000),
    .CKCAL1_CFG_1(16'b0001000011000000),
    .CKCAL1_CFG_2(16'b0010000000001000),
    .CKCAL1_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_0(16'b1100000011000000),
    .CKCAL2_CFG_1(16'b1000000011000000),
    .CKCAL2_CFG_2(16'b0001000000000000),
    .CKCAL2_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_4(16'b0000000000000000),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(24),
    .CLK_COR_MIN_LAT(16),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0000000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h01FA),
    .CPLL_CFG1(16'h002B),
    .CPLL_CFG2(16'h0002),
    .CPLL_CFG3(16'h0000),
    .CPLL_FBDIV(4),
    .CPLL_FBDIV_45(4),
    .CPLL_INIT_CFG0(16'h02B2),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .CTLE3_OCAP_EXT_CTRL(3'b000),
    .CTLE3_OCAP_EXT_EN(1'b0),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("FALSE"),
    .DEC_PCOMMA_DETECT("FALSE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DELAY_ELEC(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUALIFIER5(16'h0000),
    .ES_QUALIFIER6(16'h0000),
    .ES_QUALIFIER7(16'h0000),
    .ES_QUALIFIER8(16'h0000),
    .ES_QUALIFIER9(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_QUAL_MASK5(16'h0000),
    .ES_QUAL_MASK6(16'h0000),
    .ES_QUAL_MASK7(16'h0000),
    .ES_QUAL_MASK8(16'h0000),
    .ES_QUAL_MASK9(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .ES_SDATA_MASK5(16'h0000),
    .ES_SDATA_MASK6(16'h0000),
    .ES_SDATA_MASK7(16'h0000),
    .ES_SDATA_MASK8(16'h0000),
    .ES_SDATA_MASK9(16'h0000),
    .EYESCAN_VP_RANGE(0),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(5'b00001),
    .ISCAN_CK_PH_SEL2(1'b0),
    .LOCAL_MASTER(1'b1),
    .LPBK_BIAS_CTRL(4),
    .LPBK_EN_RCAL_B(1'b0),
    .LPBK_EXT_RCAL(4'b1000),
    .LPBK_IND_CTRL0(5),
    .LPBK_IND_CTRL1(5),
    .LPBK_IND_CTRL2(5),
    .LPBK_RG_CTRL(2),
    .OOBDIVCTL(2'b00),
    .OOB_PWRUP(1'b0),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE3_CLK_COR_EMPTY_THRSH(5'b00000),
    .PCIE3_CLK_COR_FULL_THRSH(6'b010000),
    .PCIE3_CLK_COR_MAX_LAT(5'b00100),
    .PCIE3_CLK_COR_MIN_LAT(5'b00000),
    .PCIE3_CLK_COR_THRSH_TIMER(6'b001000),
    .PCIE_64B_DYN_CLKSW_DIS("FALSE"),
    .PCIE_BUFG_DIV_CTRL(16'h1000),
    .PCIE_GEN4_64BIT_INT_EN("FALSE"),
    .PCIE_PLL_SEL_MODE_GEN12(2'h0),
    .PCIE_PLL_SEL_MODE_GEN3(2'h3),
    .PCIE_PLL_SEL_MODE_GEN4(2'h2),
    .PCIE_RXPCS_CFG_GEN3(16'h0AA5),
    .PCIE_RXPMA_CFG(16'h280A),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h280A),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD0(16'h0000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PREIQ_FREQ_BST(0),
    .RATE_SW_USE_DRP(1'b1),
    .RCLK_SIPO_DLY_ENB(1'b0),
    .RCLK_SIPO_INV_EN(1'b0),
    .RTX_BUF_CML_CTRL(3'b011),
    .RTX_BUF_TERM_CTRL(2'b00),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(49),
    .RXBUF_THRESH_OVRD("TRUE"),
    .RXBUF_THRESH_UNDFLW(7),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0003),
    .RXCDR_CFG0_GEN3(16'h0003),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h0249),
    .RXCDR_CFG2_GEN2(10'h249),
    .RXCDR_CFG2_GEN3(16'h0249),
    .RXCDR_CFG2_GEN4(16'h0164),
    .RXCDR_CFG3(16'h0012),
    .RXCDR_CFG3_GEN2(6'h12),
    .RXCDR_CFG3_GEN3(16'h0012),
    .RXCDR_CFG3_GEN4(16'h0012),
    .RXCDR_CFG4(16'h5CF6),
    .RXCDR_CFG4_GEN3(16'h5CF6),
    .RXCDR_CFG5(16'hB46B),
    .RXCDR_CFG5_GEN3(16'h146B),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG0(16'h2201),
    .RXCDR_LOCK_CFG1(16'h9FFF),
    .RXCDR_LOCK_CFG2(16'h0000),
    .RXCDR_LOCK_CFG3(16'h0000),
    .RXCDR_LOCK_CFG4(16'h0000),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h0000),
    .RXCFOK_CFG1(16'h8015),
    .RXCFOK_CFG2(16'h02AE),
    .RXCKCAL1_IQ_LOOP_RST_CFG(16'h0000),
    .RXCKCAL1_I_LOOP_RST_CFG(16'h0000),
    .RXCKCAL1_Q_LOOP_RST_CFG(16'h0000),
    .RXCKCAL2_DX_LOOP_RST_CFG(16'h0000),
    .RXCKCAL2_D_LOOP_RST_CFG(16'h0000),
    .RXCKCAL2_S_LOOP_RST_CFG(16'h0000),
    .RXCKCAL2_X_LOOP_RST_CFG(16'h0000),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'hA082),
    .RXDFELPM_KL_CFG2(16'h0100),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h8000),
    .RXDFE_GC_CFG2(16'hFFE0),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0002),
    .RXDFE_H3_CFG0(16'h0000),
    .RXDFE_H3_CFG1(16'h8002),
    .RXDFE_H4_CFG0(16'h0000),
    .RXDFE_H4_CFG1(16'h8002),
    .RXDFE_H5_CFG0(16'h0000),
    .RXDFE_H5_CFG1(16'h8002),
    .RXDFE_H6_CFG0(16'h0000),
    .RXDFE_H6_CFG1(16'h8002),
    .RXDFE_H7_CFG0(16'h0000),
    .RXDFE_H7_CFG1(16'h8002),
    .RXDFE_H8_CFG0(16'h0000),
    .RXDFE_H8_CFG1(16'h8002),
    .RXDFE_H9_CFG0(16'h0000),
    .RXDFE_H9_CFG1(16'h8002),
    .RXDFE_HA_CFG0(16'h0000),
    .RXDFE_HA_CFG1(16'h8002),
    .RXDFE_HB_CFG0(16'h0000),
    .RXDFE_HB_CFG1(16'h8002),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h8002),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h8002),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h8002),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h8002),
    .RXDFE_KH_CFG0(16'h8000),
    .RXDFE_KH_CFG1(16'hFE00),
    .RXDFE_KH_CFG2(16'h0200),
    .RXDFE_KH_CFG3(16'h4101),
    .RXDFE_OS_CFG0(16'h2000),
    .RXDFE_OS_CFG1(16'h8000),
    .RXDFE_UT_CFG0(16'h0000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_UT_CFG2(16'h0000),
    .RXDFE_VP_CFG0(16'h0000),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h0010),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("SIGCFG_4"),
    .RXGBOX_FIFO_INIT_RD_ADDR(3),
    .RXGEARBOX_EN("TRUE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'hF800),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'hA002),
    .RXLPM_OS_CFG0(16'h0000),
    .RXLPM_OS_CFG1(16'h8002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(4),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2070),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h9933),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(16'h0301),
    .RXPI_CFG1(16'b0000000011111100),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXREFCLKDIV2_SEL(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b0),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b1),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h12B0),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(3),
    .RX_CM_TRIM(10),
    .RX_CTLE_PWR_SAVING(1'b0),
    .RX_CTLE_RES_CTRL(4'b0000),
    .RX_DATA_WIDTH(64),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DEGEN_CTRL(3'b111),
    .RX_DFELPM_CFG0(10),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG1(4),
    .RX_DFE_KL_LPM_KH_CFG0(3),
    .RX_DFE_KL_LPM_KH_CFG1(2),
    .RX_DFE_KL_LPM_KL_CFG0(2'b11),
    .RX_DFE_KL_LPM_KL_CFG1(2),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_CTLE_RCAL_B(1'b0),
    .RX_EN_SUM_RCAL_B(0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b10),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_I2V_FILTER_EN(1'b1),
    .RX_INT_DATAWIDTH(2),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PMA_RSV0(16'h002F),
    .RX_PROGDIV_CFG(0.000000),
    .RX_PROGDIV_RATE(16'h0001),
    .RX_RESLOAD_CTRL(4'b0000),
    .RX_RESLOAD_OVRD(1'b0),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(11),
    .RX_SUM_DEGEN_AVTT_OVERITE(1),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_PWR_SAVING(0),
    .RX_SUM_RES_CTRL(4'b0000),
    .RX_SUM_VCMTUNE(4'b1001),
    .RX_SUM_VCM_BIAS_TUNE_EN(1'b1),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b100),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_VREG_CTRL(3'b010),
    .RX_VREG_PDB(1'b1),
    .RX_WIDEMODE_CDR(2'b01),
    .RX_WIDEMODE_CDR_GEN3(2'b00),
    .RX_WIDEMODE_CDR_GEN4(2'b01),
    .RX_XCLK_SEL("RXDES"),
    .RX_XMODE_SEL(1'b1),
    .SAMPLE_CLK_PHASE(1'b0),
    .SAS_12G_MODE(1'b0),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_DEVICE("ULTRASCALE_PLUS"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("Z"),
    .SRSTMODE(1'b0),
    .TAPDLY_SET_TX(2'h0),
    .TERM_RCAL_CFG(15'b100001000000010),
    .TERM_RCAL_OVRD(3'b001),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h8010),
    .TXDLY_LCFG(16'h0030),
    .TXDRV_FREQBAND(0),
    .TXFE_CFG0(16'b0000001111000010),
    .TXFE_CFG1(16'b0110110000000000),
    .TXFE_CFG2(16'b0110110000000000),
    .TXFE_CFG3(16'b0110110000000000),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("TRUE"),
    .TXOUT_DIV(4),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h6070),
    .TXPHDLY_CFG1(16'h000F),
    .TXPH_CFG(16'h0723),
    .TXPH_CFG2(16'h0000),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(16'b0000001100000000),
    .TXPI_CFG1(16'b0111010101010101),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPM(1'b0),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPMARESET_TIME(5'b00011),
    .TXREFCLKDIV2_SEL(1'b0),
    .TXSWBST_BST(1),
    .TXSWBST_EN(0),
    .TXSWBST_MAG(4),
    .TXSYNC_MULTILANE(1'b0),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(64),
    .TX_DCC_LOOP_RST_CFG(16'h0004),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DEEMPH2(6'b000000),
    .TX_DEEMPH3(6'b000000),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_FIFO_BYP_EN(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(2),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1011000),
    .TX_MARGIN_FULL_1(7'b1010111),
    .TX_MARGIN_FULL_2(7'b1010101),
    .TX_MARGIN_FULL_3(7'b1010011),
    .TX_MARGIN_FULL_4(7'b1010001),
    .TX_MARGIN_LOW_0(7'b1001100),
    .TX_MARGIN_LOW_1(7'b1001011),
    .TX_MARGIN_LOW_2(7'b1001000),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PHICAL_CFG0(16'h0020),
    .TX_PHICAL_CFG1(16'h0040),
    .TX_PI_BIASSET(0),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PMA_RSV0(16'h0000),
    .TX_PMA_RSV1(16'h0000),
    .TX_PROGCLK_SEL("PREPI"),
    .TX_PROGDIV_CFG(0.000000),
    .TX_PROGDIV_RATE(16'h0001),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(5),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SW_MEAS(2'b00),
    .TX_VREG_CTRL(3'b011),
    .TX_VREG_PDB(1'b1),
    .TX_VREG_VREFSEL(2'b10),
    .TX_XCLK_SEL("TXOUT"),
    .USB_BOTH_BURST_IDLE(1'b0),
    .USB_BURSTMAX_U3WAKE(7'b1111111),
    .USB_BURSTMIN_U3WAKE(7'b1100011),
    .USB_CLK_COR_EQ_EN(1'b0),
    .USB_EXT_CNTL(1'b1),
    .USB_IDLEMAX_POLLING(10'b1010111011),
    .USB_IDLEMIN_POLLING(10'b0100101011),
    .USB_LFPSPING_BURST(9'b000000101),
    .USB_LFPSPOLLING_BURST(9'b000110001),
    .USB_LFPSPOLLING_IDLE_MS(9'b000000100),
    .USB_LFPSU1EXIT_BURST(9'b000011101),
    .USB_LFPSU2LPEXIT_BURST_MS(9'b001100011),
    .USB_LFPSU3WAKE_BURST_MS(9'b111110011),
    .USB_LFPS_TPERIOD(4'b0011),
    .USB_LFPS_TPERIOD_ACCURATE(1'b1),
    .USB_MODE(1'b0),
    .USB_PCIE_ERR_REP_DIS(1'b0),
    .USB_PING_SATA_MAX_INIT(21),
    .USB_PING_SATA_MIN_INIT(12),
    .USB_POLL_SATA_MAX_BURST(8),
    .USB_POLL_SATA_MIN_BURST(4),
    .USB_RAW_ELEC(1'b0),
    .USB_RXIDLE_P0_CTRL(1'b1),
    .USB_TXIDLE_TUNE_ENABLE(1'b1),
    .USB_U1_SATA_MAX_WAKE(7),
    .USB_U1_SATA_MIN_WAKE(4),
    .USB_U2_SAS_MAX_COM(64),
    .USB_U2_SAS_MIN_COM(36),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .Y_ALL_MODE(1'b0)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST 
       (.BUFGTCE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_0 ),
        .BUFGTCEMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_313 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_314 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_315 }),
        .BUFGTDIV({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_368 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_369 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_370 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_371 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_372 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_373 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_374 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_375 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_376 }),
        .BUFGTRESET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_1 ),
        .BUFGTRSTMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_316 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_317 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_318 }),
        .CDRSTEPDIR(1'b0),
        .CDRSTEPSQ(1'b0),
        .CDRSTEPSX(1'b0),
        .CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_2 ),
        .CPLLFREQLOCK(1'b0),
        .CPLLLOCK(in0),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_2 ),
        .CPLLREFCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_4 ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_3 ),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_203 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_204 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_205 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_206 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_207 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_208 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_209 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_210 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_211 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_212 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_213 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_214 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_215 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_216 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_217 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_218 }),
        .DMONITOROUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_5 ),
        .DRPADDR(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_5 ),
        .DRPCLK(drpclk_in),
        .DRPDI(Q),
        .DRPDO(D),
        .DRPEN(\gen_gtwizard_gtye4.drpen_ch_int ),
        .DRPRDY(\gen_gtwizard_gtye4.drprdy_int ),
        .DRPRST(1'b0),
        .DRPWE(\gen_gtwizard_gtye4.drpwe_ch_int ),
        .EYESCANDATAERROR(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_7 ),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .FREQOS(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTPOWERGOOD(\gen_gtwizard_gtye4.gtpowergood_int ),
        .GTREFCLK0(gtrefclk0_in),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_9 ),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(\gen_gtwizard_gtye4.gtrxreset_int ),
        .GTRXRESETSEL(1'b0),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(\gen_gtwizard_gtye4.gttxreset_ch_int ),
        .GTTXRESETSEL(1'b0),
        .GTYRXN(gtyrxn_in),
        .GTYRXP(gtyrxp_in),
        .GTYTXN(gtytxn_out),
        .GTYTXP(gtytxp_out),
        .INCPCTRL(1'b0),
        .LOOPBACK(loopback_in),
        .PCIEEQRXEQADAPTDONE(1'b0),
        .PCIERATEGEN3(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_12 ),
        .PCIERATEIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_13 ),
        .PCIERATEQPLLPD({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_299 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_300 }),
        .PCIERATEQPLLRESET({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_301 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_302 }),
        .PCIERSTIDLE(1'b0),
        .PCIERSTTXSYNCSTART(1'b0),
        .PCIESYNCTXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_14 ),
        .PCIEUSERGEN3RDY(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_15 ),
        .PCIEUSERPHYSTATUSRST(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_16 ),
        .PCIEUSERRATEDONE(1'b0),
        .PCIEUSERRATESTART(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_17 ),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_235 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_236 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_237 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_238 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_239 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_240 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_241 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_242 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_243 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_244 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_245 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_246 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_247 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_248 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_249 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_250 }),
        .PHYSTATUS(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_18 ),
        .PINRSRVDAS({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_251 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_252 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_253 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_254 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_255 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_256 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_257 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_258 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_259 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_260 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_261 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_262 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_263 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_264 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_265 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_266 }),
        .POWERPRESENT(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_19 ),
        .QPLL0CLK(1'b0),
        .QPLL0FREQLOCK(1'b0),
        .QPLL0REFCLK(1'b0),
        .QPLL1CLK(1'b0),
        .QPLL1FREQLOCK(1'b0),
        .QPLL1REFCLK(1'b0),
        .RESETEXCEPTION(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_20 ),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b0),
        .RXAFECFOKEN(1'b1),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({rxbufstatus_out,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_320 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_321 }),
        .RXBYTEISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_21 ),
        .RXBYTEREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_22 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(rxcdrlock_out),
        .RXCDROVRDEN(rxcdrovrden_in),
        .RXCDRPHDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_24 ),
        .RXCDRRESET(1'b0),
        .RXCHANBONDSEQ(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_25 ),
        .RXCHANISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_26 ),
        .RXCHANREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_27 ),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_325 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_326 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_327 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_328 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_329 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCKCALDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_28 ),
        .RXCKCALRESET(1'b0),
        .RXCKCALSTART({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCLKCORCNT({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_303 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_304 }),
        .RXCOMINITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_29 ),
        .RXCOMMADET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_30 ),
        .RXCOMMADETEN(1'b0),
        .RXCOMSASDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_31 ),
        .RXCOMWAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_32 ),
        .RXCTRL0({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_267 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_268 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_269 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_270 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_271 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_272 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_273 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_274 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_275 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_276 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_277 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_278 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_279 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_280 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_281 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_282 }),
        .RXCTRL1({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_283 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_284 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_285 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_286 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_287 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_288 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_289 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_290 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_291 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_292 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_293 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_294 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_295 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_296 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_297 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_298 }),
        .RXCTRL2({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_336 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_337 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_338 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_339 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_340 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_341 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_342 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_343 }),
        .RXCTRL3({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_344 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_345 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_346 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_347 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_348 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_349 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_350 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_351 }),
        .RXDATA({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_75 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_76 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_77 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_78 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_79 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_80 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_81 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_82 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_83 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_84 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_85 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_86 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_87 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_88 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_89 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_90 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_91 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_92 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_93 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_94 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_95 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_96 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_97 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_98 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_99 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_100 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_101 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_102 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_103 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_104 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_105 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_106 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_107 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_108 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_109 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_110 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_111 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_112 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_113 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_114 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_115 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_116 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_117 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_118 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_119 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_120 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_121 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_122 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_123 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_124 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_125 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_126 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_127 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_128 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_129 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_130 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_131 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_132 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_133 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_134 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_135 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_136 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_137 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_138 ,gtwiz_userdata_rx_out}),
        .RXDATAEXTENDRSVD({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_352 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_353 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_354 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_355 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_356 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_357 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_358 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_359 }),
        .RXDATAVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_305 ,rxdatavalid_out}),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECFOKFCNUM({1'b1,1'b1,1'b0,1'b1}),
        .RXDFECFOKFEN(1'b0),
        .RXDFECFOKFPULSE(1'b0),
        .RXDFECFOKHOLD(1'b0),
        .RXDFECFOKOVREN(1'b0),
        .RXDFEKHHOLD(1'b0),
        .RXDFEKHOVRDEN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP10HOLD(1'b0),
        .RXDFETAP10OVRDEN(1'b0),
        .RXDFETAP11HOLD(1'b0),
        .RXDFETAP11OVRDEN(1'b0),
        .RXDFETAP12HOLD(1'b0),
        .RXDFETAP12OVRDEN(1'b0),
        .RXDFETAP13HOLD(1'b0),
        .RXDFETAP13OVRDEN(1'b0),
        .RXDFETAP14HOLD(1'b0),
        .RXDFETAP14OVRDEN(1'b0),
        .RXDFETAP15HOLD(1'b0),
        .RXDFETAP15OVRDEN(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFETAP8HOLD(1'b0),
        .RXDFETAP8OVRDEN(1'b0),
        .RXDFETAP9HOLD(1'b0),
        .RXDFETAP9OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_33 ),
        .RXELECIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_34 ),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXEQTRAINING(1'b0),
        .RXGEARBOXSLIP(rxgearboxslip_in),
        .RXHEADER({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_330 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_331 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_332 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_333 ,rxheader_out}),
        .RXHEADERVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_307 ,rxheadervalid_out}),
        .RXLATCLK(1'b0),
        .RXLFPSTRESETDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_35 ),
        .RXLFPSU2LPEXITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_36 ),
        .RXLFPSU3WAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_37 ),
        .RXLPMEN(1'b0),
        .RXLPMGCHOLD(1'b0),
        .RXLPMGCOVRDEN(1'b0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXLPMOSHOLD(1'b0),
        .RXLPMOSOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(1'b0),
        .RXMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_360 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_361 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_362 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_363 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_364 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_365 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_366 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_367 }),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_38 ),
        .RXOSINTSTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_39 ),
        .RXOSINTSTROBEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_40 ),
        .RXOSINTSTROBESTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_41 ),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(rxoutclk_out),
        .RXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_43 ),
        .RXOUTCLKPCS(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_44 ),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(1'b0),
        .RXPCSRESET(1'b0),
        .RXPD({1'b0,1'b0}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_45 ),
        .RXPHALIGNEN(1'b0),
        .RXPHALIGNERR(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_46 ),
        .RXPHDLYPD(1'b1),
        .RXPHDLYRESET(1'b0),
        .RXPLLCLKSEL({1'b0,1'b0}),
        .RXPMARESET(1'b0),
        .RXPMARESETDONE(rxpmaresetdone_out),
        .RXPOLARITY(rxpolarity_in),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_48 ),
        .RXPRBSLOCKED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_49 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .RXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_50 ),
        .RXPROGDIVRESET(\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .RXRATE({1'b0,1'b0,1'b0}),
        .RXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_51 ),
        .RXRATEMODE(1'b0),
        .RXRECCLKOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_52 ),
        .RXRESETDONE(rxresetdone_out),
        .RXSLIDE(1'b0),
        .RXSLIDERDY(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_54 ),
        .RXSLIPDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_55 ),
        .RXSLIPOUTCLK(1'b0),
        .RXSLIPOUTCLKRDY(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_56 ),
        .RXSLIPPMA(1'b0),
        .RXSLIPPMARDY(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_57 ),
        .RXSTARTOFSEQ({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_309 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_310 }),
        .RXSTATUS({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_322 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_323 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_324 }),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_58 ),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_59 ),
        .RXSYSCLKSEL({1'b0,1'b0}),
        .RXTERMINATION(1'b0),
        .RXUSERRDY(\gen_gtwizard_gtye4.rxuserrdy_int ),
        .RXUSRCLK(rxusrclk_in),
        .RXUSRCLK2(rxusrclk2_in),
        .RXVALID(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_60 ),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b0),
        .TXBUFSTATUS({txbufstatus_out,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_312 }),
        .TXCOMFINISH(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_61 ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXCTRL0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gtwiz_userdata_tx_in}),
        .TXDATAEXTENDRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDCCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_62 ),
        .TXDCCFORCESTART(1'b0),
        .TXDCCRESET(1'b0),
        .TXDEEMPH({1'b0,1'b0}),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL({1'b0,1'b1,1'b0,1'b0,1'b0}),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_63 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(1'b0),
        .TXHEADER({1'b0,1'b0,1'b0,1'b0,txheader_in}),
        .TXINHIBIT(1'b0),
        .TXLATCLK(1'b0),
        .TXLFPSTRESET(1'b0),
        .TXLFPSU2LPEXIT(1'b0),
        .TXLFPSU3WAKE(1'b0),
        .TXMAINCURSOR({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXMUXDCDEXHOLD(1'b0),
        .TXMUXDCDORWREN(1'b0),
        .TXONESZEROS(1'b0),
        .TXOUTCLK(txoutclk_out),
        .TXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_65 ),
        .TXOUTCLKPCS(txoutclkpcs_out),
        .TXOUTCLKSEL(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_4 ),
        .TXPCSRESET(1'b0),
        .TXPD({1'b0,1'b0}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_67 ),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b1),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_68 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b1),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(TXRATE),
        .TXPLLCLKSEL({1'b0,1'b0}),
        .TXPMARESET(1'b0),
        .TXPMARESETDONE(txpmaresetdone_out),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .TXPRECURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ),
        .TXPROGDIVRESET(\gen_gtwizard_gtye4.txprogdivreset_ch_int ),
        .TXRATE({1'b0,1'b0,TXRATE}),
        .TXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_71 ),
        .TXRATEMODE(TXRATE),
        .TXRESETDONE(txresetdone_out),
        .TXSEQUENCE(txsequence_in),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_73 ),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_74 ),
        .TXSYSCLKSEL({1'b0,1'b0}),
        .TXUSERRDY(\gen_gtwizard_gtye4.txuserrdy_int ),
        .TXUSRCLK(txusrclk_in),
        .TXUSRCLK2(txusrclk_in));
endmodule

module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal
   (\gen_gtwizard_gtye4.txprogdivreset_ch_int ,
    \gen_gtwizard_gtye4.drpen_ch_int ,
    \gen_gtwizard_gtye4.drpwe_ch_int ,
    cpllpd_int_reg,
    cpllreset_int_reg,
    USER_CPLLLOCK_OUT_reg,
    rst_in0,
    Q,
    drpdo_out,
    drprdy_out,
    \DADDR_O_reg[9] ,
    \DI_O_reg[15] ,
    in0,
    i_in_meta_reg,
    i_in_meta_reg_0,
    txoutclk_out,
    gtwiz_userclk_tx_reset_in,
    drpclk_in,
    drpaddr_in,
    drpdi_in,
    D,
    drpen_in,
    RESET_IN,
    drpwe_in,
    \gen_gtwizard_gtye4.drprdy_int ,
    lopt,
    lopt_1);
  output \gen_gtwizard_gtye4.txprogdivreset_ch_int ;
  output \gen_gtwizard_gtye4.drpen_ch_int ;
  output \gen_gtwizard_gtye4.drpwe_ch_int ;
  output cpllpd_int_reg;
  output cpllreset_int_reg;
  output USER_CPLLLOCK_OUT_reg;
  output rst_in0;
  output [2:0]Q;
  output [15:0]drpdo_out;
  output [0:0]drprdy_out;
  output [9:0]\DADDR_O_reg[9] ;
  output [15:0]\DI_O_reg[15] ;
  input in0;
  input i_in_meta_reg;
  input i_in_meta_reg_0;
  input [0:0]txoutclk_out;
  input [0:0]gtwiz_userclk_tx_reset_in;
  input [0:0]drpclk_in;
  input [9:0]drpaddr_in;
  input [15:0]drpdi_in;
  input [15:0]D;
  input [0:0]drpen_in;
  input RESET_IN;
  input [0:0]drpwe_in;
  input \gen_gtwizard_gtye4.drprdy_int ;
  input lopt;
  input lopt_1;

  wire [15:0]D;
  wire [9:0]\DADDR_O_reg[9] ;
  wire [15:0]\DI_O_reg[15] ;
  wire [2:0]Q;
  wire RESET_IN;
  wire USER_CPLLLOCK_OUT_reg;
  wire [17:1]\U_TXOUTCLK_FREQ_COUNTER/testclk_cnt_reg ;
  wire bit_synchronizer_drprst_inst_n_1;
  wire bit_synchronizer_drprst_inst_n_2;
  wire [15:0]cal_on_tx_dout;
  wire cal_on_tx_drdy;
  wire [7:1]cal_on_tx_drpaddr_out;
  wire [15:0]cal_on_tx_drpdi_out;
  wire cal_on_tx_drpen_out;
  wire cal_on_tx_drpwe_out;
  wire cal_on_tx_reset_in_sync;
  wire cpllpd_int_reg;
  wire cpllreset_int_reg;
  wire [9:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire drprst_in_sync;
  wire [0:0]drpwe_in;
  wire \gen_gtwizard_gtye4.drpen_ch_int ;
  wire \gen_gtwizard_gtye4.drprdy_int ;
  wire \gen_gtwizard_gtye4.drpwe_ch_int ;
  wire \gen_gtwizard_gtye4.txprogdivreset_ch_int ;
  wire [0:0]gtwiz_userclk_tx_reset_in;
  wire gtwizard_ultrascale_v1_7_13_gte4_drp_arb_i_n_2;
  wire gtwizard_ultrascale_v1_7_13_gte4_drp_arb_i_n_3;
  wire gtwizard_ultrascale_v1_7_13_gte4_drp_arb_i_n_4;
  wire gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_23;
  wire gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_24;
  wire gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_25;
  wire gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_28;
  wire gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_29;
  wire gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_30;
  wire gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_32;
  wire \i_/i_/i__carry__0_n_0 ;
  wire \i_/i_/i__carry__0_n_1 ;
  wire \i_/i_/i__carry__0_n_10 ;
  wire \i_/i_/i__carry__0_n_11 ;
  wire \i_/i_/i__carry__0_n_12 ;
  wire \i_/i_/i__carry__0_n_13 ;
  wire \i_/i_/i__carry__0_n_14 ;
  wire \i_/i_/i__carry__0_n_15 ;
  wire \i_/i_/i__carry__0_n_2 ;
  wire \i_/i_/i__carry__0_n_3 ;
  wire \i_/i_/i__carry__0_n_4 ;
  wire \i_/i_/i__carry__0_n_5 ;
  wire \i_/i_/i__carry__0_n_6 ;
  wire \i_/i_/i__carry__0_n_7 ;
  wire \i_/i_/i__carry__0_n_8 ;
  wire \i_/i_/i__carry__0_n_9 ;
  wire \i_/i_/i__carry__1_n_14 ;
  wire \i_/i_/i__carry__1_n_15 ;
  wire \i_/i_/i__carry__1_n_7 ;
  wire \i_/i_/i__carry_n_0 ;
  wire \i_/i_/i__carry_n_1 ;
  wire \i_/i_/i__carry_n_10 ;
  wire \i_/i_/i__carry_n_11 ;
  wire \i_/i_/i__carry_n_12 ;
  wire \i_/i_/i__carry_n_13 ;
  wire \i_/i_/i__carry_n_14 ;
  wire \i_/i_/i__carry_n_15 ;
  wire \i_/i_/i__carry_n_2 ;
  wire \i_/i_/i__carry_n_3 ;
  wire \i_/i_/i__carry_n_4 ;
  wire \i_/i_/i__carry_n_5 ;
  wire \i_/i_/i__carry_n_6 ;
  wire \i_/i_/i__carry_n_7 ;
  wire \i_/i_/i__carry_n_8 ;
  wire \i_/i_/i__carry_n_9 ;
  wire i_in_meta_reg;
  wire i_in_meta_reg_0;
  wire in0;
  wire lopt;
  wire lopt_1;
  wire [2:1]p_1_in;
  wire rst_in0;
  wire [0:0]txoutclk_out;
  wire [7:1]\NLW_i_/i_/i__carry__1_CO_UNCONNECTED ;
  wire [7:2]\NLW_i_/i_/i__carry__1_O_UNCONNECTED ;

  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_49 bit_synchronizer_drprst_inst
       (.E(bit_synchronizer_drprst_inst_n_1),
        .drpclk_in(drpclk_in),
        .drpen_in(drpen_in),
        .drprst_in_sync(drprst_in_sync),
        .i_in_out_reg_0(bit_synchronizer_drprst_inst_n_2),
        .\timeout_cntr_reg[0] (gtwizard_ultrascale_v1_7_13_gte4_drp_arb_i_n_2));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gte4_drp_arb gtwizard_ultrascale_v1_7_13_gte4_drp_arb_i
       (.D(D),
        .\DADDR_O_reg[9]_0 (\DADDR_O_reg[9] ),
        .\DI_O_reg[15]_0 (\DI_O_reg[15] ),
        .E(bit_synchronizer_drprst_inst_n_1),
        .Q({cal_on_tx_dout,drpdo_out}),
        .\addr_i_reg[0]_0 (gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_29),
        .\addr_i_reg[27]_0 (cal_on_tx_drpaddr_out),
        .\addr_i_reg[2]_0 (bit_synchronizer_drprst_inst_n_2),
        .\addr_i_reg[2]_1 (p_1_in),
        .\addr_i_reg[3]_0 (gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_23),
        .\addr_i_reg[5]_0 (gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_28),
        .\addr_i_reg[6]_0 (gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_24),
        .\addr_i_reg[7]_0 (gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_25),
        .cal_on_tx_drdy(cal_on_tx_drdy),
        .cal_on_tx_drpen_out(cal_on_tx_drpen_out),
        .cal_on_tx_drpwe_out(cal_on_tx_drpwe_out),
        .\data_i_reg[15]_0 (gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_30),
        .\data_i_reg[47]_0 (cal_on_tx_drpdi_out),
        .\drp_state_reg[6]_0 (gtwizard_ultrascale_v1_7_13_gte4_drp_arb_i_n_2),
        .drpaddr_in({drpaddr_in[9:8],drpaddr_in[6:4],drpaddr_in[2:0]}),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in[14:0]),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drprst_in_sync(drprst_in_sync),
        .drpwe_in(drpwe_in),
        .\gen_gtwizard_gtye4.drpen_ch_int (\gen_gtwizard_gtye4.drpen_ch_int ),
        .\gen_gtwizard_gtye4.drprdy_int (\gen_gtwizard_gtye4.drprdy_int ),
        .\gen_gtwizard_gtye4.drpwe_ch_int (\gen_gtwizard_gtye4.drpwe_ch_int ),
        .\gt0_drpaddr[8] (gtwizard_ultrascale_v1_7_13_gte4_drp_arb_i_n_3),
        .\gt0_drpaddr[8]_0 (gtwizard_ultrascale_v1_7_13_gte4_drp_arb_i_n_4));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i
       (.D(\U_TXOUTCLK_FREQ_COUNTER/testclk_cnt_reg ),
        .O({\i_/i_/i__carry_n_8 ,\i_/i_/i__carry_n_9 ,\i_/i_/i__carry_n_10 ,\i_/i_/i__carry_n_11 ,\i_/i_/i__carry_n_12 ,\i_/i_/i__carry_n_13 ,\i_/i_/i__carry_n_14 ,\i_/i_/i__carry_n_15 }),
        .Q(cal_on_tx_dout),
        .S(gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_32),
        .USER_CPLLLOCK_OUT_reg_0(USER_CPLLLOCK_OUT_reg),
        .cal_on_tx_drdy(cal_on_tx_drdy),
        .cal_on_tx_drpen_out(cal_on_tx_drpen_out),
        .cal_on_tx_drpwe_out(cal_on_tx_drpwe_out),
        .cal_on_tx_reset_in_sync(cal_on_tx_reset_in_sync),
        .cpllpd_int_reg_0(cpllpd_int_reg),
        .cpllreset_int_reg_0(cpllreset_int_reg),
        .\daddr_reg[7]_0 (cal_on_tx_drpaddr_out),
        .\data_i_reg[15] (gtwizard_ultrascale_v1_7_13_gte4_drp_arb_i_n_4),
        .\data_i_reg[15]_0 (gtwizard_ultrascale_v1_7_13_gte4_drp_arb_i_n_3),
        .\di_reg[15]_0 (cal_on_tx_drpdi_out),
        .drpaddr_in(drpaddr_in[7:0]),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in[15]),
        .drprst_in_sync(drprst_in_sync),
        .drpwe_in(drpwe_in),
        .\gen_gtwizard_gtye4.txprogdivreset_ch_int (\gen_gtwizard_gtye4.txprogdivreset_ch_int ),
        .\gt0_drpaddr[0] (gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_29),
        .\gt0_drpaddr[3] (gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_23),
        .\gt0_drpaddr[5] (gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_28),
        .\gt0_drpaddr[6] (gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_24),
        .\gt0_drpaddr[7] (gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_25),
        .\gt0_drpdi[15] (gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_30),
        .gtwiz_userclk_tx_reset_in(gtwiz_userclk_tx_reset_in),
        .i_in_meta_reg(i_in_meta_reg),
        .i_in_meta_reg_0(i_in_meta_reg_0),
        .i_in_out_reg(p_1_in),
        .in0(in0),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .\non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[2]_0 (Q),
        .rst_in0(rst_in0),
        .\testclk_cnt_reg[15] ({\i_/i_/i__carry__0_n_8 ,\i_/i_/i__carry__0_n_9 ,\i_/i_/i__carry__0_n_10 ,\i_/i_/i__carry__0_n_11 ,\i_/i_/i__carry__0_n_12 ,\i_/i_/i__carry__0_n_13 ,\i_/i_/i__carry__0_n_14 ,\i_/i_/i__carry__0_n_15 }),
        .\testclk_cnt_reg[17] ({\i_/i_/i__carry__1_n_14 ,\i_/i_/i__carry__1_n_15 }),
        .txoutclk_out(txoutclk_out));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \i_/i_/i__carry 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\i_/i_/i__carry_n_0 ,\i_/i_/i__carry_n_1 ,\i_/i_/i__carry_n_2 ,\i_/i_/i__carry_n_3 ,\i_/i_/i__carry_n_4 ,\i_/i_/i__carry_n_5 ,\i_/i_/i__carry_n_6 ,\i_/i_/i__carry_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\i_/i_/i__carry_n_8 ,\i_/i_/i__carry_n_9 ,\i_/i_/i__carry_n_10 ,\i_/i_/i__carry_n_11 ,\i_/i_/i__carry_n_12 ,\i_/i_/i__carry_n_13 ,\i_/i_/i__carry_n_14 ,\i_/i_/i__carry_n_15 }),
        .S({\U_TXOUTCLK_FREQ_COUNTER/testclk_cnt_reg [7:1],gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx_i_n_32}));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \i_/i_/i__carry__0 
       (.CI(\i_/i_/i__carry_n_0 ),
        .CI_TOP(1'b0),
        .CO({\i_/i_/i__carry__0_n_0 ,\i_/i_/i__carry__0_n_1 ,\i_/i_/i__carry__0_n_2 ,\i_/i_/i__carry__0_n_3 ,\i_/i_/i__carry__0_n_4 ,\i_/i_/i__carry__0_n_5 ,\i_/i_/i__carry__0_n_6 ,\i_/i_/i__carry__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\i_/i_/i__carry__0_n_8 ,\i_/i_/i__carry__0_n_9 ,\i_/i_/i__carry__0_n_10 ,\i_/i_/i__carry__0_n_11 ,\i_/i_/i__carry__0_n_12 ,\i_/i_/i__carry__0_n_13 ,\i_/i_/i__carry__0_n_14 ,\i_/i_/i__carry__0_n_15 }),
        .S(\U_TXOUTCLK_FREQ_COUNTER/testclk_cnt_reg [15:8]));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \i_/i_/i__carry__1 
       (.CI(\i_/i_/i__carry__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_i_/i_/i__carry__1_CO_UNCONNECTED [7:1],\i_/i_/i__carry__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_i_/i_/i__carry__1_O_UNCONNECTED [7:2],\i_/i_/i__carry__1_n_14 ,\i_/i_/i__carry__1_n_15 }),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\U_TXOUTCLK_FREQ_COUNTER/testclk_cnt_reg [17:16]}));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_50 reset_synchronizer_resetin_rx_inst
       (.drpclk_in(drpclk_in));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_51 reset_synchronizer_resetin_tx_inst
       (.RESET_IN(RESET_IN),
        .cal_on_tx_reset_in_sync(cal_on_tx_reset_in_sync),
        .drpclk_in(drpclk_in));
endmodule

module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_freq_counter
   (done_o_reg_0,
    D,
    rst_in_out_reg,
    rst_in_out_reg_0,
    S,
    done_o_reg_1,
    DI,
    \freq_cnt_o_reg[1]_0 ,
    \freq_cnt_o_reg[15]_0 ,
    \freq_cnt_o_reg[15]_1 ,
    \freq_cnt_o_reg[15]_2 ,
    \freq_cnt_o_reg[17]_0 ,
    \freq_cnt_o_reg[16]_0 ,
    \freq_cnt_o_reg[16]_1 ,
    drpclk_in,
    \state_reg[1]_0 ,
    txoutclkmon,
    O,
    \testclk_cnt_reg[15]_0 ,
    \testclk_cnt_reg[17]_0 ,
    cal_on_tx_reset_in_sync,
    CO,
    \repeat_ctr_reg[3] ,
    \repeat_ctr_reg[3]_0 ,
    Q,
    cal_fail_store_reg,
    cal_fail_store__0,
    \cpll_cal_state_reg[21] ,
    cal_fail_store_reg_0,
    cal_fail_store_reg_1,
    \cpll_cal_state_reg[13] ,
    \cpll_cal_state_reg[13]_0 ,
    \cpll_cal_state_reg[13]_1 ,
    \cpll_cal_state_reg[13]_2 );
  output done_o_reg_0;
  output [16:0]D;
  output rst_in_out_reg;
  output rst_in_out_reg_0;
  output [0:0]S;
  output [1:0]done_o_reg_1;
  output [3:0]DI;
  output [0:0]\freq_cnt_o_reg[1]_0 ;
  output [7:0]\freq_cnt_o_reg[15]_0 ;
  output [7:0]\freq_cnt_o_reg[15]_1 ;
  output [5:0]\freq_cnt_o_reg[15]_2 ;
  output [0:0]\freq_cnt_o_reg[17]_0 ;
  output [0:0]\freq_cnt_o_reg[16]_0 ;
  output [0:0]\freq_cnt_o_reg[16]_1 ;
  input [0:0]drpclk_in;
  input \state_reg[1]_0 ;
  input txoutclkmon;
  input [7:0]O;
  input [7:0]\testclk_cnt_reg[15]_0 ;
  input [1:0]\testclk_cnt_reg[17]_0 ;
  input cal_on_tx_reset_in_sync;
  input [0:0]CO;
  input [0:0]\repeat_ctr_reg[3] ;
  input \repeat_ctr_reg[3]_0 ;
  input [5:0]Q;
  input cal_fail_store_reg;
  input cal_fail_store__0;
  input [0:0]\cpll_cal_state_reg[21] ;
  input cal_fail_store_reg_0;
  input cal_fail_store_reg_1;
  input \cpll_cal_state_reg[13] ;
  input \cpll_cal_state_reg[13]_0 ;
  input \cpll_cal_state_reg[13]_1 ;
  input \cpll_cal_state_reg[13]_2 ;

  wire [0:0]CO;
  wire [16:0]D;
  wire [3:0]DI;
  wire [7:0]O;
  wire [5:0]Q;
  wire [0:0]S;
  wire cal_fail_store__0;
  wire cal_fail_store_i_2_n_0;
  wire cal_fail_store_i_3_n_0;
  wire cal_fail_store_reg;
  wire cal_fail_store_reg_0;
  wire cal_fail_store_reg_1;
  wire cal_on_tx_reset_in_sync;
  wire clear;
  wire \cpll_cal_state[21]_i_2_n_0 ;
  wire \cpll_cal_state_reg[13] ;
  wire \cpll_cal_state_reg[13]_0 ;
  wire \cpll_cal_state_reg[13]_1 ;
  wire \cpll_cal_state_reg[13]_2 ;
  wire [0:0]\cpll_cal_state_reg[21] ;
  wire done_o_reg_0;
  wire [1:0]done_o_reg_1;
  wire [0:0]drpclk_in;
  wire \freq_cnt_o[17]_i_1_n_0 ;
  wire [7:0]\freq_cnt_o_reg[15]_0 ;
  wire [7:0]\freq_cnt_o_reg[15]_1 ;
  wire [5:0]\freq_cnt_o_reg[15]_2 ;
  wire [0:0]\freq_cnt_o_reg[16]_0 ;
  wire [0:0]\freq_cnt_o_reg[16]_1 ;
  wire [0:0]\freq_cnt_o_reg[17]_0 ;
  wire [0:0]\freq_cnt_o_reg[1]_0 ;
  wire \freq_cnt_o_reg_n_0_[0] ;
  wire \freq_cnt_o_reg_n_0_[10] ;
  wire \freq_cnt_o_reg_n_0_[11] ;
  wire \freq_cnt_o_reg_n_0_[12] ;
  wire \freq_cnt_o_reg_n_0_[13] ;
  wire \freq_cnt_o_reg_n_0_[14] ;
  wire \freq_cnt_o_reg_n_0_[15] ;
  wire \freq_cnt_o_reg_n_0_[16] ;
  wire \freq_cnt_o_reg_n_0_[17] ;
  wire \freq_cnt_o_reg_n_0_[2] ;
  wire \freq_cnt_o_reg_n_0_[3] ;
  wire \freq_cnt_o_reg_n_0_[4] ;
  wire \freq_cnt_o_reg_n_0_[5] ;
  wire \freq_cnt_o_reg_n_0_[6] ;
  wire \freq_cnt_o_reg_n_0_[7] ;
  wire \freq_cnt_o_reg_n_0_[8] ;
  wire \freq_cnt_o_reg_n_0_[9] ;
  wire \hold_clk[2]_i_1_n_0 ;
  wire \hold_clk[5]_i_1_n_0 ;
  wire [5:0]hold_clk_reg;
  wire [5:0]p_0_in__0;
  wire [15:1]p_0_in__1;
  wire p_1_in;
  wire refclk_cnt0_carry__0_n_2;
  wire refclk_cnt0_carry__0_n_3;
  wire refclk_cnt0_carry__0_n_4;
  wire refclk_cnt0_carry__0_n_5;
  wire refclk_cnt0_carry__0_n_6;
  wire refclk_cnt0_carry__0_n_7;
  wire refclk_cnt0_carry_n_0;
  wire refclk_cnt0_carry_n_1;
  wire refclk_cnt0_carry_n_2;
  wire refclk_cnt0_carry_n_3;
  wire refclk_cnt0_carry_n_4;
  wire refclk_cnt0_carry_n_5;
  wire refclk_cnt0_carry_n_6;
  wire refclk_cnt0_carry_n_7;
  wire \refclk_cnt[0]_i_1_n_0 ;
  wire [15:0]refclk_cnt_reg;
  wire \repeat_ctr[3]_i_4_n_0 ;
  wire [0:0]\repeat_ctr_reg[3] ;
  wire \repeat_ctr_reg[3]_0 ;
  wire rst_in_out;
  wire rst_in_out_reg;
  wire rst_in_out_reg_0;
  wire \state[0]_i_1_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state[1]_i_2_n_0 ;
  wire \state[2]_i_1_n_0 ;
  wire \state[2]_i_2_n_0 ;
  wire \state[2]_i_3_n_0 ;
  wire \state[2]_i_4_n_0 ;
  wire \state[2]_i_5_n_0 ;
  wire \state[3]_i_1_n_0 ;
  wire \state[3]_i_2_n_0 ;
  wire \state[4]_i_1_n_0 ;
  wire \state_reg[1]_0 ;
  wire \state_reg_n_0_[2] ;
  wire \state_reg_n_0_[4] ;
  wire testclk_cnt0_n_0;
  wire [0:0]testclk_cnt_reg;
  wire [7:0]\testclk_cnt_reg[15]_0 ;
  wire [1:0]\testclk_cnt_reg[17]_0 ;
  wire [3:0]testclk_div4;
  wire testclk_en;
  (* async_reg = "true" *) wire testclk_en_dly1;
  (* async_reg = "true" *) wire testclk_en_dly2;
  wire testclk_rst;
  (* async_reg = "true" *) wire tstclk_rst_dly1;
  (* async_reg = "true" *) wire tstclk_rst_dly2;
  wire txoutclkmon;
  wire [7:6]NLW_refclk_cnt0_carry__0_CO_UNCONNECTED;
  wire [7:7]NLW_refclk_cnt0_carry__0_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'hFFFFDFDF30331010)) 
    cal_fail_store_i_1
       (.I0(cal_fail_store_i_2_n_0),
        .I1(cal_on_tx_reset_in_sync),
        .I2(cal_fail_store_i_3_n_0),
        .I3(cal_fail_store_reg),
        .I4(Q[5]),
        .I5(cal_fail_store__0),
        .O(rst_in_out_reg_0));
  LUT2 #(
    .INIT(4'h8)) 
    cal_fail_store_i_2
       (.I0(CO),
        .I1(\repeat_ctr_reg[3] ),
        .O(cal_fail_store_i_2_n_0));
  LUT6 #(
    .INIT(64'hF888000000000000)) 
    cal_fail_store_i_3
       (.I0(CO),
        .I1(\repeat_ctr_reg[3] ),
        .I2(cal_fail_store_reg_0),
        .I3(cal_fail_store_reg_1),
        .I4(Q[3]),
        .I5(done_o_reg_0),
        .O(cal_fail_store_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cpll_cal_state2_carry__0_i_1
       (.I0(\freq_cnt_o_reg_n_0_[16] ),
        .I1(\freq_cnt_o_reg_n_0_[17] ),
        .O(\freq_cnt_o_reg[16]_1 ));
  LUT1 #(
    .INIT(2'h1)) 
    cpll_cal_state2_carry_i_1
       (.I0(\freq_cnt_o_reg_n_0_[15] ),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h1)) 
    cpll_cal_state2_carry_i_10
       (.I0(\freq_cnt_o_reg_n_0_[5] ),
        .I1(\freq_cnt_o_reg_n_0_[4] ),
        .O(\freq_cnt_o_reg[15]_0 [2]));
  LUT2 #(
    .INIT(4'h1)) 
    cpll_cal_state2_carry_i_11
       (.I0(\freq_cnt_o_reg_n_0_[3] ),
        .I1(\freq_cnt_o_reg_n_0_[2] ),
        .O(\freq_cnt_o_reg[15]_0 [1]));
  LUT2 #(
    .INIT(4'h8)) 
    cpll_cal_state2_carry_i_12
       (.I0(\freq_cnt_o_reg_n_0_[0] ),
        .I1(\freq_cnt_o_reg[1]_0 ),
        .O(\freq_cnt_o_reg[15]_0 [0]));
  LUT2 #(
    .INIT(4'h7)) 
    cpll_cal_state2_carry_i_2
       (.I0(\freq_cnt_o_reg_n_0_[8] ),
        .I1(\freq_cnt_o_reg_n_0_[9] ),
        .O(DI[2]));
  LUT1 #(
    .INIT(2'h1)) 
    cpll_cal_state2_carry_i_3
       (.I0(\freq_cnt_o_reg_n_0_[7] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h7)) 
    cpll_cal_state2_carry_i_4
       (.I0(\freq_cnt_o_reg[1]_0 ),
        .I1(\freq_cnt_o_reg_n_0_[0] ),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    cpll_cal_state2_carry_i_5
       (.I0(\freq_cnt_o_reg_n_0_[15] ),
        .I1(\freq_cnt_o_reg_n_0_[14] ),
        .O(\freq_cnt_o_reg[15]_0 [7]));
  LUT2 #(
    .INIT(4'h1)) 
    cpll_cal_state2_carry_i_6
       (.I0(\freq_cnt_o_reg_n_0_[12] ),
        .I1(\freq_cnt_o_reg_n_0_[13] ),
        .O(\freq_cnt_o_reg[15]_0 [6]));
  LUT2 #(
    .INIT(4'h1)) 
    cpll_cal_state2_carry_i_7
       (.I0(\freq_cnt_o_reg_n_0_[10] ),
        .I1(\freq_cnt_o_reg_n_0_[11] ),
        .O(\freq_cnt_o_reg[15]_0 [5]));
  LUT2 #(
    .INIT(4'h8)) 
    cpll_cal_state2_carry_i_8
       (.I0(\freq_cnt_o_reg_n_0_[9] ),
        .I1(\freq_cnt_o_reg_n_0_[8] ),
        .O(\freq_cnt_o_reg[15]_0 [4]));
  LUT2 #(
    .INIT(4'h2)) 
    cpll_cal_state2_carry_i_9
       (.I0(\freq_cnt_o_reg_n_0_[7] ),
        .I1(\freq_cnt_o_reg_n_0_[6] ),
        .O(\freq_cnt_o_reg[15]_0 [3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFF8888888)) 
    \cpll_cal_state[13]_i_1 
       (.I0(\cpll_cal_state_reg[13] ),
        .I1(Q[2]),
        .I2(\cpll_cal_state[21]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(done_o_reg_0),
        .I5(Q[1]),
        .O(done_o_reg_1[0]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'h08FF0808)) 
    \cpll_cal_state[21]_i_1 
       (.I0(done_o_reg_0),
        .I1(Q[3]),
        .I2(\cpll_cal_state[21]_i_2_n_0 ),
        .I3(\cpll_cal_state_reg[21] ),
        .I4(Q[4]),
        .O(done_o_reg_1[1]));
  LUT6 #(
    .INIT(64'h00007FFF7FFF7FFF)) 
    \cpll_cal_state[21]_i_2 
       (.I0(\cpll_cal_state_reg[13]_0 ),
        .I1(\cpll_cal_state_reg[13]_1 ),
        .I2(\cpll_cal_state_reg[13]_2 ),
        .I3(cal_fail_store_reg_0),
        .I4(\repeat_ctr_reg[3] ),
        .I5(CO),
        .O(\cpll_cal_state[21]_i_2_n_0 ));
  FDCE done_o_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(\state_reg[1]_0 ),
        .D(\state_reg_n_0_[4] ),
        .Q(done_o_reg_0));
  LUT2 #(
    .INIT(4'h2)) 
    \freq_cnt_o[17]_i_1 
       (.I0(p_1_in),
        .I1(\state_reg[1]_0 ),
        .O(\freq_cnt_o[17]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[0] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(testclk_cnt_reg),
        .Q(\freq_cnt_o_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[10] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[9]),
        .Q(\freq_cnt_o_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[11] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[10]),
        .Q(\freq_cnt_o_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[12] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[11]),
        .Q(\freq_cnt_o_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[13] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[12]),
        .Q(\freq_cnt_o_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[14] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[13]),
        .Q(\freq_cnt_o_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[15] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[14]),
        .Q(\freq_cnt_o_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[16] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[15]),
        .Q(\freq_cnt_o_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[17] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[16]),
        .Q(\freq_cnt_o_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[1] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[0]),
        .Q(\freq_cnt_o_reg[1]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[2] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[1]),
        .Q(\freq_cnt_o_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[3] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[2]),
        .Q(\freq_cnt_o_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[4] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[3]),
        .Q(\freq_cnt_o_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[5] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[4]),
        .Q(\freq_cnt_o_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[6] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[5]),
        .Q(\freq_cnt_o_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[7] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[6]),
        .Q(\freq_cnt_o_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[8] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[7]),
        .Q(\freq_cnt_o_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \freq_cnt_o_reg[9] 
       (.C(drpclk_in),
        .CE(\freq_cnt_o[17]_i_1_n_0 ),
        .D(D[8]),
        .Q(\freq_cnt_o_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hold_clk[0]_i_1 
       (.I0(hold_clk_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \hold_clk[1]_i_1 
       (.I0(hold_clk_reg[0]),
        .I1(hold_clk_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \hold_clk[2]_i_1 
       (.I0(hold_clk_reg[0]),
        .I1(hold_clk_reg[1]),
        .I2(hold_clk_reg[2]),
        .O(\hold_clk[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \hold_clk[3]_i_1 
       (.I0(hold_clk_reg[1]),
        .I1(hold_clk_reg[0]),
        .I2(hold_clk_reg[2]),
        .I3(hold_clk_reg[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \hold_clk[4]_i_1 
       (.I0(hold_clk_reg[2]),
        .I1(hold_clk_reg[0]),
        .I2(hold_clk_reg[1]),
        .I3(hold_clk_reg[3]),
        .I4(hold_clk_reg[4]),
        .O(p_0_in__0[4]));
  LUT2 #(
    .INIT(4'h1)) 
    \hold_clk[5]_i_1 
       (.I0(testclk_rst),
        .I1(\state_reg_n_0_[2] ),
        .O(\hold_clk[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \hold_clk[5]_i_2 
       (.I0(hold_clk_reg[3]),
        .I1(hold_clk_reg[1]),
        .I2(hold_clk_reg[0]),
        .I3(hold_clk_reg[2]),
        .I4(hold_clk_reg[4]),
        .I5(hold_clk_reg[5]),
        .O(p_0_in__0[5]));
  FDRE #(
    .INIT(1'b0)) 
    \hold_clk_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(hold_clk_reg[0]),
        .R(\hold_clk[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hold_clk_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(hold_clk_reg[1]),
        .R(\hold_clk[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hold_clk_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\hold_clk[2]_i_1_n_0 ),
        .Q(hold_clk_reg[2]),
        .R(\hold_clk[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hold_clk_reg[3] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(hold_clk_reg[3]),
        .R(\hold_clk[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hold_clk_reg[4] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(hold_clk_reg[4]),
        .R(\hold_clk[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hold_clk_reg[5] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(hold_clk_reg[5]),
        .R(\hold_clk[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry__0_i_1
       (.I0(\freq_cnt_o_reg_n_0_[17] ),
        .I1(\freq_cnt_o_reg_n_0_[16] ),
        .O(\freq_cnt_o_reg[17]_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_2
       (.I0(\freq_cnt_o_reg_n_0_[16] ),
        .I1(\freq_cnt_o_reg_n_0_[17] ),
        .O(\freq_cnt_o_reg[16]_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1
       (.I0(testclk_cnt_reg),
        .O(S));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_10
       (.I0(\freq_cnt_o_reg_n_0_[9] ),
        .I1(\freq_cnt_o_reg_n_0_[8] ),
        .O(\freq_cnt_o_reg[15]_1 [4]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_11
       (.I0(\freq_cnt_o_reg_n_0_[7] ),
        .I1(\freq_cnt_o_reg_n_0_[6] ),
        .O(\freq_cnt_o_reg[15]_1 [3]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_12
       (.I0(\freq_cnt_o_reg_n_0_[5] ),
        .I1(\freq_cnt_o_reg_n_0_[4] ),
        .O(\freq_cnt_o_reg[15]_1 [2]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_13
       (.I0(\freq_cnt_o_reg_n_0_[3] ),
        .I1(\freq_cnt_o_reg_n_0_[2] ),
        .O(\freq_cnt_o_reg[15]_1 [1]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_14
       (.I0(\freq_cnt_o_reg_n_0_[0] ),
        .I1(\freq_cnt_o_reg[1]_0 ),
        .O(\freq_cnt_o_reg[15]_1 [0]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_1__0
       (.I0(\freq_cnt_o_reg_n_0_[15] ),
        .I1(\freq_cnt_o_reg_n_0_[14] ),
        .O(\freq_cnt_o_reg[15]_2 [5]));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry_i_2
       (.I0(\freq_cnt_o_reg_n_0_[13] ),
        .I1(\freq_cnt_o_reg_n_0_[12] ),
        .O(\freq_cnt_o_reg[15]_2 [4]));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry_i_3
       (.I0(\freq_cnt_o_reg_n_0_[11] ),
        .I1(\freq_cnt_o_reg_n_0_[10] ),
        .O(\freq_cnt_o_reg[15]_2 [3]));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry_i_4
       (.I0(\freq_cnt_o_reg_n_0_[8] ),
        .I1(\freq_cnt_o_reg_n_0_[9] ),
        .O(\freq_cnt_o_reg[15]_2 [2]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_5
       (.I0(\freq_cnt_o_reg_n_0_[5] ),
        .I1(\freq_cnt_o_reg_n_0_[4] ),
        .O(\freq_cnt_o_reg[15]_2 [1]));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_6
       (.I0(\freq_cnt_o_reg_n_0_[3] ),
        .I1(\freq_cnt_o_reg_n_0_[2] ),
        .O(\freq_cnt_o_reg[15]_2 [0]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_7
       (.I0(\freq_cnt_o_reg_n_0_[15] ),
        .I1(\freq_cnt_o_reg_n_0_[14] ),
        .O(\freq_cnt_o_reg[15]_1 [7]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_8
       (.I0(\freq_cnt_o_reg_n_0_[12] ),
        .I1(\freq_cnt_o_reg_n_0_[13] ),
        .O(\freq_cnt_o_reg[15]_1 [6]));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_9
       (.I0(\freq_cnt_o_reg_n_0_[10] ),
        .I1(\freq_cnt_o_reg_n_0_[11] ),
        .O(\freq_cnt_o_reg[15]_1 [5]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 refclk_cnt0_carry
       (.CI(refclk_cnt_reg[0]),
        .CI_TOP(1'b0),
        .CO({refclk_cnt0_carry_n_0,refclk_cnt0_carry_n_1,refclk_cnt0_carry_n_2,refclk_cnt0_carry_n_3,refclk_cnt0_carry_n_4,refclk_cnt0_carry_n_5,refclk_cnt0_carry_n_6,refclk_cnt0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__1[8:1]),
        .S(refclk_cnt_reg[8:1]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 refclk_cnt0_carry__0
       (.CI(refclk_cnt0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_refclk_cnt0_carry__0_CO_UNCONNECTED[7:6],refclk_cnt0_carry__0_n_2,refclk_cnt0_carry__0_n_3,refclk_cnt0_carry__0_n_4,refclk_cnt0_carry__0_n_5,refclk_cnt0_carry__0_n_6,refclk_cnt0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_refclk_cnt0_carry__0_O_UNCONNECTED[7],p_0_in__1[15:9]}),
        .S({1'b0,refclk_cnt_reg[15:9]}));
  LUT1 #(
    .INIT(2'h1)) 
    \refclk_cnt[0]_i_1 
       (.I0(refclk_cnt_reg[0]),
        .O(\refclk_cnt[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \refclk_cnt[15]_i_1 
       (.I0(testclk_en),
        .O(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\refclk_cnt[0]_i_1_n_0 ),
        .Q(refclk_cnt_reg[0]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[10] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[10]),
        .Q(refclk_cnt_reg[10]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[11] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[11]),
        .Q(refclk_cnt_reg[11]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[12] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[12]),
        .Q(refclk_cnt_reg[12]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[13] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[13]),
        .Q(refclk_cnt_reg[13]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[14] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[14]),
        .Q(refclk_cnt_reg[14]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[15] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[15]),
        .Q(refclk_cnt_reg[15]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[1]),
        .Q(refclk_cnt_reg[1]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[2]),
        .Q(refclk_cnt_reg[2]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[3] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[3]),
        .Q(refclk_cnt_reg[3]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[4] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[4]),
        .Q(refclk_cnt_reg[4]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[5] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[5]),
        .Q(refclk_cnt_reg[5]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[6] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[6]),
        .Q(refclk_cnt_reg[6]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[7] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[7]),
        .Q(refclk_cnt_reg[7]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[8] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[8]),
        .Q(refclk_cnt_reg[8]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \refclk_cnt_reg[9] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(p_0_in__1[9]),
        .Q(refclk_cnt_reg[9]),
        .R(clear));
  LUT6 #(
    .INIT(64'h5555555500001500)) 
    \repeat_ctr[3]_i_1 
       (.I0(cal_on_tx_reset_in_sync),
        .I1(CO),
        .I2(\repeat_ctr_reg[3] ),
        .I3(\repeat_ctr_reg[3]_0 ),
        .I4(\repeat_ctr[3]_i_4_n_0 ),
        .I5(Q[0]),
        .O(rst_in_out_reg));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \repeat_ctr[3]_i_4 
       (.I0(done_o_reg_0),
        .I1(Q[3]),
        .O(\repeat_ctr[3]_i_4_n_0 ));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_58 reset_synchronizer_testclk_rst_inst
       (.out(testclk_rst),
        .rst_in_out(rst_in_out),
        .txoutclkmon(txoutclkmon));
  LUT6 #(
    .INIT(64'hAA2AAAAAAAAAAAAA)) 
    \state[0]_i_1 
       (.I0(testclk_rst),
        .I1(hold_clk_reg[2]),
        .I2(hold_clk_reg[3]),
        .I3(\state[3]_i_2_n_0 ),
        .I4(hold_clk_reg[4]),
        .I5(hold_clk_reg[5]),
        .O(\state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \state[1]_i_1 
       (.I0(\state[1]_i_2_n_0 ),
        .I1(testclk_rst),
        .I2(\state[2]_i_2_n_0 ),
        .I3(testclk_en),
        .O(\state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \state[1]_i_2 
       (.I0(hold_clk_reg[5]),
        .I1(hold_clk_reg[4]),
        .I2(hold_clk_reg[1]),
        .I3(hold_clk_reg[0]),
        .I4(hold_clk_reg[3]),
        .I5(hold_clk_reg[2]),
        .O(\state[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \state[2]_i_1 
       (.I0(\state[2]_i_2_n_0 ),
        .I1(testclk_en),
        .I2(\state[2]_i_3_n_0 ),
        .I3(\state_reg_n_0_[2] ),
        .O(\state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \state[2]_i_2 
       (.I0(refclk_cnt_reg[13]),
        .I1(refclk_cnt_reg[14]),
        .I2(refclk_cnt_reg[12]),
        .I3(refclk_cnt_reg[15]),
        .I4(\state[2]_i_4_n_0 ),
        .I5(\state[2]_i_5_n_0 ),
        .O(\state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFF7FFFFFFFFFFFF)) 
    \state[2]_i_3 
       (.I0(hold_clk_reg[0]),
        .I1(hold_clk_reg[1]),
        .I2(hold_clk_reg[4]),
        .I3(hold_clk_reg[5]),
        .I4(hold_clk_reg[3]),
        .I5(hold_clk_reg[2]),
        .O(\state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \state[2]_i_4 
       (.I0(refclk_cnt_reg[0]),
        .I1(refclk_cnt_reg[1]),
        .I2(refclk_cnt_reg[2]),
        .I3(refclk_cnt_reg[3]),
        .I4(refclk_cnt_reg[4]),
        .I5(refclk_cnt_reg[5]),
        .O(\state[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFFFFFFFFFF)) 
    \state[2]_i_5 
       (.I0(refclk_cnt_reg[6]),
        .I1(refclk_cnt_reg[7]),
        .I2(refclk_cnt_reg[8]),
        .I3(refclk_cnt_reg[10]),
        .I4(refclk_cnt_reg[11]),
        .I5(refclk_cnt_reg[9]),
        .O(\state[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    \state[3]_i_1 
       (.I0(\state_reg_n_0_[2] ),
        .I1(hold_clk_reg[2]),
        .I2(hold_clk_reg[3]),
        .I3(\state[3]_i_2_n_0 ),
        .I4(hold_clk_reg[4]),
        .I5(hold_clk_reg[5]),
        .O(\state[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \state[3]_i_2 
       (.I0(hold_clk_reg[1]),
        .I1(hold_clk_reg[0]),
        .O(\state[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \state[4]_i_1 
       (.I0(p_1_in),
        .I1(\state_reg_n_0_[4] ),
        .O(\state[4]_i_1_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \state_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\state[0]_i_1_n_0 ),
        .PRE(\state_reg[1]_0 ),
        .Q(testclk_rst));
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(\state_reg[1]_0 ),
        .D(\state[1]_i_1_n_0 ),
        .Q(testclk_en));
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(\state_reg[1]_0 ),
        .D(\state[2]_i_1_n_0 ),
        .Q(\state_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[3] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(\state_reg[1]_0 ),
        .D(\state[3]_i_1_n_0 ),
        .Q(p_1_in));
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[4] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(\state_reg[1]_0 ),
        .D(\state[4]_i_1_n_0 ),
        .Q(\state_reg_n_0_[4] ));
  LUT5 #(
    .INIT(32'h00000020)) 
    testclk_cnt0
       (.I0(testclk_en_dly2),
        .I1(testclk_div4[1]),
        .I2(testclk_div4[3]),
        .I3(testclk_div4[2]),
        .I4(testclk_div4[0]),
        .O(testclk_cnt0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[0] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[0]),
        .Q(testclk_cnt_reg));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[10] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [2]),
        .Q(D[9]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[11] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [3]),
        .Q(D[10]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[12] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [4]),
        .Q(D[11]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[13] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [5]),
        .Q(D[12]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[14] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [6]),
        .Q(D[13]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[15] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [7]),
        .Q(D[14]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[16] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[17]_0 [0]),
        .Q(D[15]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[17] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[17]_0 [1]),
        .Q(D[16]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[1] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[1]),
        .Q(D[0]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[2] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[2]),
        .Q(D[1]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[3] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[3]),
        .Q(D[2]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[4] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[4]),
        .Q(D[3]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[5] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[5]),
        .Q(D[4]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[6] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[6]),
        .Q(D[5]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[7] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(O[7]),
        .Q(D[6]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[8] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [0]),
        .Q(D[7]));
  FDCE #(
    .INIT(1'b0)) 
    \testclk_cnt_reg[9] 
       (.C(txoutclkmon),
        .CE(testclk_cnt0_n_0),
        .CLR(rst_in_out),
        .D(\testclk_cnt_reg[15]_0 [1]),
        .Q(D[8]));
  FDSE #(
    .INIT(1'b1)) 
    \testclk_div4_reg[0] 
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_div4[3]),
        .Q(testclk_div4[0]),
        .S(tstclk_rst_dly2));
  FDRE #(
    .INIT(1'b0)) 
    \testclk_div4_reg[1] 
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_div4[0]),
        .Q(testclk_div4[1]),
        .R(tstclk_rst_dly2));
  FDRE #(
    .INIT(1'b0)) 
    \testclk_div4_reg[2] 
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_div4[1]),
        .Q(testclk_div4[2]),
        .R(tstclk_rst_dly2));
  FDRE #(
    .INIT(1'b0)) 
    \testclk_div4_reg[3] 
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_div4[2]),
        .Q(testclk_div4[3]),
        .R(tstclk_rst_dly2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE testclk_en_dly1_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_en),
        .Q(testclk_en_dly1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE testclk_en_dly2_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_en_dly1),
        .Q(testclk_en_dly2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE tstclk_rst_dly1_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(testclk_rst),
        .Q(tstclk_rst_dly1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE tstclk_rst_dly2_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(tstclk_rst_dly1),
        .Q(tstclk_rst_dly2),
        .R(1'b0));
endmodule

module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_tx
   (\gen_gtwizard_gtye4.txprogdivreset_ch_int ,
    cpllpd_int_reg_0,
    cpllreset_int_reg_0,
    USER_CPLLLOCK_OUT_reg_0,
    cal_on_tx_drpen_out,
    cal_on_tx_drpwe_out,
    D,
    \gt0_drpaddr[3] ,
    \gt0_drpaddr[6] ,
    \gt0_drpaddr[7] ,
    i_in_out_reg,
    \gt0_drpaddr[5] ,
    \gt0_drpaddr[0] ,
    \gt0_drpdi[15] ,
    rst_in0,
    S,
    \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[2]_0 ,
    \daddr_reg[7]_0 ,
    \di_reg[15]_0 ,
    in0,
    i_in_meta_reg,
    i_in_meta_reg_0,
    txoutclk_out,
    gtwiz_userclk_tx_reset_in,
    drpclk_in,
    cal_on_tx_reset_in_sync,
    O,
    \testclk_cnt_reg[15] ,
    \testclk_cnt_reg[17] ,
    drpaddr_in,
    drprst_in_sync,
    drpdi_in,
    Q,
    cal_on_tx_drdy,
    \data_i_reg[15] ,
    \data_i_reg[15]_0 ,
    drpwe_in,
    lopt,
    lopt_1);
  output \gen_gtwizard_gtye4.txprogdivreset_ch_int ;
  output cpllpd_int_reg_0;
  output cpllreset_int_reg_0;
  output USER_CPLLLOCK_OUT_reg_0;
  output cal_on_tx_drpen_out;
  output cal_on_tx_drpwe_out;
  output [16:0]D;
  output \gt0_drpaddr[3] ;
  output \gt0_drpaddr[6] ;
  output \gt0_drpaddr[7] ;
  output [1:0]i_in_out_reg;
  output \gt0_drpaddr[5] ;
  output \gt0_drpaddr[0] ;
  output \gt0_drpdi[15] ;
  output rst_in0;
  output [0:0]S;
  output [2:0]\non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[2]_0 ;
  output [6:0]\daddr_reg[7]_0 ;
  output [15:0]\di_reg[15]_0 ;
  input in0;
  input i_in_meta_reg;
  input i_in_meta_reg_0;
  input [0:0]txoutclk_out;
  input [0:0]gtwiz_userclk_tx_reset_in;
  input [0:0]drpclk_in;
  input cal_on_tx_reset_in_sync;
  input [7:0]O;
  input [7:0]\testclk_cnt_reg[15] ;
  input [1:0]\testclk_cnt_reg[17] ;
  input [7:0]drpaddr_in;
  input drprst_in_sync;
  input [0:0]drpdi_in;
  input [15:0]Q;
  input cal_on_tx_drdy;
  input \data_i_reg[15] ;
  input \data_i_reg[15]_0 ;
  input [0:0]drpwe_in;
  input lopt;
  input lopt_1;

  wire [16:0]D;
  wire [7:0]O;
  wire [15:0]Q;
  wire [0:0]S;
  wire USER_CPLLLOCK_OUT_reg_0;
  wire U_TXOUTCLK_FREQ_COUNTER_n_0;
  wire U_TXOUTCLK_FREQ_COUNTER_n_18;
  wire U_TXOUTCLK_FREQ_COUNTER_n_19;
  wire U_TXOUTCLK_FREQ_COUNTER_n_23;
  wire U_TXOUTCLK_FREQ_COUNTER_n_24;
  wire U_TXOUTCLK_FREQ_COUNTER_n_25;
  wire U_TXOUTCLK_FREQ_COUNTER_n_26;
  wire U_TXOUTCLK_FREQ_COUNTER_n_27;
  wire U_TXOUTCLK_FREQ_COUNTER_n_28;
  wire U_TXOUTCLK_FREQ_COUNTER_n_29;
  wire U_TXOUTCLK_FREQ_COUNTER_n_30;
  wire U_TXOUTCLK_FREQ_COUNTER_n_31;
  wire U_TXOUTCLK_FREQ_COUNTER_n_32;
  wire U_TXOUTCLK_FREQ_COUNTER_n_33;
  wire U_TXOUTCLK_FREQ_COUNTER_n_34;
  wire U_TXOUTCLK_FREQ_COUNTER_n_35;
  wire U_TXOUTCLK_FREQ_COUNTER_n_36;
  wire U_TXOUTCLK_FREQ_COUNTER_n_37;
  wire U_TXOUTCLK_FREQ_COUNTER_n_38;
  wire U_TXOUTCLK_FREQ_COUNTER_n_39;
  wire U_TXOUTCLK_FREQ_COUNTER_n_40;
  wire U_TXOUTCLK_FREQ_COUNTER_n_41;
  wire U_TXOUTCLK_FREQ_COUNTER_n_42;
  wire U_TXOUTCLK_FREQ_COUNTER_n_43;
  wire U_TXOUTCLK_FREQ_COUNTER_n_44;
  wire U_TXOUTCLK_FREQ_COUNTER_n_45;
  wire U_TXOUTCLK_FREQ_COUNTER_n_46;
  wire U_TXOUTCLK_FREQ_COUNTER_n_47;
  wire U_TXOUTCLK_FREQ_COUNTER_n_48;
  wire U_TXOUTCLK_FREQ_COUNTER_n_49;
  wire U_TXOUTCLK_FREQ_COUNTER_n_50;
  wire U_TXOUTCLK_FREQ_COUNTER_n_51;
  wire U_TXOUTCLK_FREQ_COUNTER_n_52;
  wire \addr_i[2]_i_3_n_0 ;
  wire \addr_i[2]_i_4_n_0 ;
  wire \addr_i[2]_i_6_n_0 ;
  wire bit_synchronizer_cplllock_inst_n_0;
  wire bit_synchronizer_cplllock_inst_n_1;
  wire bit_synchronizer_txoutclksel_inst0_n_0;
  wire bit_synchronizer_txoutclksel_inst1_n_0;
  wire bit_synchronizer_txoutclksel_inst2_n_0;
  wire bit_synchronizer_txprgdivresetdone_inst_n_0;
  wire bit_synchronizer_txprogdivreset_inst_n_0;
  wire cal_fail_store__0;
  wire cal_fail_store_i_4_n_0;
  wire cal_on_tx_drdy;
  wire cal_on_tx_drpen_out;
  wire cal_on_tx_drpwe_out;
  wire cal_on_tx_reset_in_sync;
  wire cpll_cal_state2;
  wire cpll_cal_state26_in;
  wire cpll_cal_state2_carry_n_0;
  wire cpll_cal_state2_carry_n_1;
  wire cpll_cal_state2_carry_n_2;
  wire cpll_cal_state2_carry_n_3;
  wire cpll_cal_state2_carry_n_4;
  wire cpll_cal_state2_carry_n_5;
  wire cpll_cal_state2_carry_n_6;
  wire cpll_cal_state2_carry_n_7;
  wire \cpll_cal_state2_inferred__0/i__carry_n_0 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_1 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_2 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_3 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_4 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_5 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_6 ;
  wire \cpll_cal_state2_inferred__0/i__carry_n_7 ;
  wire [31:1]cpll_cal_state7_out;
  wire \cpll_cal_state_reg_n_0_[0] ;
  wire \cpll_cal_state_reg_n_0_[12] ;
  wire \cpll_cal_state_reg_n_0_[27] ;
  wire \cpll_cal_state_reg_n_0_[28] ;
  wire \cpll_cal_state_reg_n_0_[29] ;
  wire \cpll_cal_state_reg_n_0_[30] ;
  wire \cpll_cal_state_reg_n_0_[31] ;
  wire cpllpd_int_i_1_n_0;
  wire cpllpd_int_reg_0;
  wire cpllreset_int_i_1_n_0;
  wire cpllreset_int_reg_0;
  wire [6:1]daddr0_in;
  wire \daddr[4]_i_2_n_0 ;
  wire \daddr[5]_i_1__0_n_0 ;
  wire \daddr[6]_i_2_n_0 ;
  wire \daddr[6]_i_3_n_0 ;
  wire \daddr[7]_i_1_n_0 ;
  wire \daddr[7]_i_2_n_0 ;
  wire [6:0]\daddr_reg[7]_0 ;
  wire \data_i_reg[15] ;
  wire \data_i_reg[15]_0 ;
  wire den_i_1_n_0;
  wire \di_msk[0]_i_1_n_0 ;
  wire \di_msk[10]_i_1_n_0 ;
  wire \di_msk[11]_i_1_n_0 ;
  wire \di_msk[12]_i_1_n_0 ;
  wire \di_msk[12]_i_2_n_0 ;
  wire \di_msk[12]_i_3_n_0 ;
  wire \di_msk[13]_i_1_n_0 ;
  wire \di_msk[13]_i_2_n_0 ;
  wire \di_msk[14]_i_1_n_0 ;
  wire \di_msk[14]_i_2_n_0 ;
  wire \di_msk[15]_i_1_n_0 ;
  wire \di_msk[15]_i_2_n_0 ;
  wire \di_msk[15]_i_3_n_0 ;
  wire \di_msk[15]_i_4_n_0 ;
  wire \di_msk[1]_i_1_n_0 ;
  wire \di_msk[1]_i_2_n_0 ;
  wire \di_msk[2]_i_1_n_0 ;
  wire \di_msk[3]_i_1_n_0 ;
  wire \di_msk[4]_i_1_n_0 ;
  wire \di_msk[5]_i_1_n_0 ;
  wire \di_msk[5]_i_2_n_0 ;
  wire \di_msk[6]_i_1_n_0 ;
  wire \di_msk[6]_i_2_n_0 ;
  wire \di_msk[7]_i_1_n_0 ;
  wire \di_msk[8]_i_1_n_0 ;
  wire \di_msk[9]_i_1_n_0 ;
  wire \di_msk_reg_n_0_[0] ;
  wire \di_msk_reg_n_0_[10] ;
  wire \di_msk_reg_n_0_[11] ;
  wire \di_msk_reg_n_0_[12] ;
  wire \di_msk_reg_n_0_[13] ;
  wire \di_msk_reg_n_0_[14] ;
  wire \di_msk_reg_n_0_[15] ;
  wire \di_msk_reg_n_0_[1] ;
  wire \di_msk_reg_n_0_[2] ;
  wire \di_msk_reg_n_0_[3] ;
  wire \di_msk_reg_n_0_[4] ;
  wire \di_msk_reg_n_0_[5] ;
  wire \di_msk_reg_n_0_[6] ;
  wire \di_msk_reg_n_0_[7] ;
  wire \di_msk_reg_n_0_[8] ;
  wire \di_msk_reg_n_0_[9] ;
  wire [15:0]\di_reg[15]_0 ;
  wire drp_done;
  wire \drp_state[0]_i_1__0_n_0 ;
  wire \drp_state[1]_i_1_n_0 ;
  wire \drp_state[2]_i_1_n_0 ;
  wire \drp_state[3]_i_1_n_0 ;
  wire \drp_state[4]_i_1_n_0 ;
  wire \drp_state[5]_i_1_n_0 ;
  wire \drp_state[6]_i_1__0_n_0 ;
  wire \drp_state_reg_n_0_[0] ;
  wire \drp_state_reg_n_0_[1] ;
  wire \drp_state_reg_n_0_[2] ;
  wire \drp_state_reg_n_0_[3] ;
  wire \drp_state_reg_n_0_[4] ;
  wire \drp_state_reg_n_0_[5] ;
  wire [7:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [0:0]drpdi_in;
  wire drprst_in_sync;
  wire [0:0]drpwe_in;
  wire dwe_i_1_n_0;
  wire freq_counter_rst_i_2_n_0;
  wire freq_counter_rst_i_3_n_0;
  wire freq_counter_rst_i_5_n_0;
  wire freq_counter_rst_i_6_n_0;
  wire freq_counter_rst_i_7_n_0;
  wire freq_counter_rst_reg_n_0;
  wire \gen_gtwizard_gtye4.txprogdivreset_ch_int ;
  wire \gt0_drpaddr[0] ;
  wire \gt0_drpaddr[3] ;
  wire \gt0_drpaddr[5] ;
  wire \gt0_drpaddr[6] ;
  wire \gt0_drpaddr[7] ;
  wire \gt0_drpdi[15] ;
  wire [0:0]gtwiz_userclk_tx_reset_in;
  wire i_in_meta_reg;
  wire i_in_meta_reg_0;
  wire [1:0]i_in_out_reg;
  wire in0;
  wire lopt;
  wire lopt_1;
  wire mask_user_in_i_1_n_0;
  wire mask_user_in_reg_n_0;
  wire [2:0]\non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[2]_0 ;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in3_in;
  wire p_0_in7_in;
  wire p_11_in;
  wire p_12_in;
  wire p_13_in;
  wire p_14_in;
  wire p_15_in;
  wire p_16_in;
  wire p_17_in;
  wire p_18_in;
  wire p_1_in;
  wire p_1_in10_in;
  wire p_1_in2_in;
  wire p_1_in5_in;
  wire p_25_in;
  wire p_29_in;
  wire p_2_in;
  wire p_2_in1_in;
  wire p_2_in4_in;
  wire p_2_in8_in;
  wire p_3_in;
  wire p_3_in9_in;
  wire p_4_in;
  wire progclk_sel_store;
  wire \progclk_sel_store_reg_n_0_[0] ;
  wire \progclk_sel_store_reg_n_0_[10] ;
  wire \progclk_sel_store_reg_n_0_[11] ;
  wire \progclk_sel_store_reg_n_0_[12] ;
  wire \progclk_sel_store_reg_n_0_[13] ;
  wire \progclk_sel_store_reg_n_0_[14] ;
  wire \progclk_sel_store_reg_n_0_[1] ;
  wire \progclk_sel_store_reg_n_0_[2] ;
  wire \progclk_sel_store_reg_n_0_[3] ;
  wire \progclk_sel_store_reg_n_0_[4] ;
  wire \progclk_sel_store_reg_n_0_[5] ;
  wire \progclk_sel_store_reg_n_0_[6] ;
  wire \progclk_sel_store_reg_n_0_[7] ;
  wire \progclk_sel_store_reg_n_0_[8] ;
  wire \progclk_sel_store_reg_n_0_[9] ;
  wire progdiv_cfg_store;
  wire \progdiv_cfg_store[15]_i_1_n_0 ;
  wire \progdiv_cfg_store_reg_n_0_[0] ;
  wire \progdiv_cfg_store_reg_n_0_[10] ;
  wire \progdiv_cfg_store_reg_n_0_[11] ;
  wire \progdiv_cfg_store_reg_n_0_[12] ;
  wire \progdiv_cfg_store_reg_n_0_[13] ;
  wire \progdiv_cfg_store_reg_n_0_[14] ;
  wire \progdiv_cfg_store_reg_n_0_[15] ;
  wire \progdiv_cfg_store_reg_n_0_[1] ;
  wire \progdiv_cfg_store_reg_n_0_[2] ;
  wire \progdiv_cfg_store_reg_n_0_[3] ;
  wire \progdiv_cfg_store_reg_n_0_[4] ;
  wire \progdiv_cfg_store_reg_n_0_[5] ;
  wire \progdiv_cfg_store_reg_n_0_[6] ;
  wire \progdiv_cfg_store_reg_n_0_[7] ;
  wire \progdiv_cfg_store_reg_n_0_[8] ;
  wire \progdiv_cfg_store_reg_n_0_[9] ;
  wire rd;
  wire rd_i_1__0_n_0;
  wire rd_i_2_n_0;
  wire \repeat_ctr[0]_i_1_n_0 ;
  wire \repeat_ctr[1]_i_1_n_0 ;
  wire \repeat_ctr[2]_i_1_n_0 ;
  wire \repeat_ctr[3]_i_2_n_0 ;
  wire \repeat_ctr[3]_i_3_n_0 ;
  wire \repeat_ctr_reg_n_0_[0] ;
  wire \repeat_ctr_reg_n_0_[1] ;
  wire \repeat_ctr_reg_n_0_[2] ;
  wire \repeat_ctr_reg_n_0_[3] ;
  wire rst_in0;
  wire status_store__0;
  wire status_store_i_1_n_0;
  wire [7:0]\testclk_cnt_reg[15] ;
  wire [1:0]\testclk_cnt_reg[17] ;
  wire [0:0]txoutclk_out;
  wire txoutclkmon;
  wire [2:2]txoutclksel_int;
  wire \txoutclksel_int[2]_i_1_n_0 ;
  wire txprogdivreset_int;
  wire txprogdivreset_int_i_1_n_0;
  wire wait_ctr0_carry__0_n_0;
  wire wait_ctr0_carry__0_n_1;
  wire wait_ctr0_carry__0_n_10;
  wire wait_ctr0_carry__0_n_11;
  wire wait_ctr0_carry__0_n_12;
  wire wait_ctr0_carry__0_n_13;
  wire wait_ctr0_carry__0_n_14;
  wire wait_ctr0_carry__0_n_15;
  wire wait_ctr0_carry__0_n_2;
  wire wait_ctr0_carry__0_n_3;
  wire wait_ctr0_carry__0_n_4;
  wire wait_ctr0_carry__0_n_5;
  wire wait_ctr0_carry__0_n_6;
  wire wait_ctr0_carry__0_n_7;
  wire wait_ctr0_carry__0_n_8;
  wire wait_ctr0_carry__0_n_9;
  wire wait_ctr0_carry__1_n_1;
  wire wait_ctr0_carry__1_n_10;
  wire wait_ctr0_carry__1_n_11;
  wire wait_ctr0_carry__1_n_12;
  wire wait_ctr0_carry__1_n_13;
  wire wait_ctr0_carry__1_n_14;
  wire wait_ctr0_carry__1_n_15;
  wire wait_ctr0_carry__1_n_2;
  wire wait_ctr0_carry__1_n_3;
  wire wait_ctr0_carry__1_n_4;
  wire wait_ctr0_carry__1_n_5;
  wire wait_ctr0_carry__1_n_6;
  wire wait_ctr0_carry__1_n_7;
  wire wait_ctr0_carry__1_n_8;
  wire wait_ctr0_carry__1_n_9;
  wire wait_ctr0_carry_n_0;
  wire wait_ctr0_carry_n_1;
  wire wait_ctr0_carry_n_10;
  wire wait_ctr0_carry_n_11;
  wire wait_ctr0_carry_n_12;
  wire wait_ctr0_carry_n_13;
  wire wait_ctr0_carry_n_14;
  wire wait_ctr0_carry_n_15;
  wire wait_ctr0_carry_n_2;
  wire wait_ctr0_carry_n_3;
  wire wait_ctr0_carry_n_4;
  wire wait_ctr0_carry_n_5;
  wire wait_ctr0_carry_n_6;
  wire wait_ctr0_carry_n_7;
  wire wait_ctr0_carry_n_8;
  wire wait_ctr0_carry_n_9;
  wire \wait_ctr[0]_i_1_n_0 ;
  wire \wait_ctr[10]_i_10_n_0 ;
  wire \wait_ctr[10]_i_11_n_0 ;
  wire \wait_ctr[10]_i_12_n_0 ;
  wire \wait_ctr[10]_i_1_n_0 ;
  wire \wait_ctr[10]_i_2_n_0 ;
  wire \wait_ctr[10]_i_3_n_0 ;
  wire \wait_ctr[10]_i_4_n_0 ;
  wire \wait_ctr[10]_i_5_n_0 ;
  wire \wait_ctr[10]_i_6_n_0 ;
  wire \wait_ctr[10]_i_7_n_0 ;
  wire \wait_ctr[10]_i_8_n_0 ;
  wire \wait_ctr[10]_i_9_n_0 ;
  wire \wait_ctr[11]_i_1_n_0 ;
  wire \wait_ctr[12]_i_1_n_0 ;
  wire \wait_ctr[13]_i_1_n_0 ;
  wire \wait_ctr[14]_i_1_n_0 ;
  wire \wait_ctr[15]_i_1_n_0 ;
  wire \wait_ctr[16]_i_1_n_0 ;
  wire \wait_ctr[17]_i_1_n_0 ;
  wire \wait_ctr[18]_i_1_n_0 ;
  wire \wait_ctr[19]_i_1_n_0 ;
  wire \wait_ctr[20]_i_1_n_0 ;
  wire \wait_ctr[21]_i_1_n_0 ;
  wire \wait_ctr[22]_i_1_n_0 ;
  wire \wait_ctr[23]_i_1_n_0 ;
  wire \wait_ctr[24]_i_10_n_0 ;
  wire \wait_ctr[24]_i_1_n_0 ;
  wire \wait_ctr[24]_i_2_n_0 ;
  wire \wait_ctr[24]_i_3_n_0 ;
  wire \wait_ctr[24]_i_4_n_0 ;
  wire \wait_ctr[24]_i_5_n_0 ;
  wire \wait_ctr[24]_i_6_n_0 ;
  wire \wait_ctr[24]_i_7_n_0 ;
  wire \wait_ctr[24]_i_8_n_0 ;
  wire \wait_ctr[24]_i_9_n_0 ;
  wire \wait_ctr[4]_i_1_n_0 ;
  wire \wait_ctr[5]_i_1_n_0 ;
  wire \wait_ctr[6]_i_1_n_0 ;
  wire \wait_ctr[9]_i_1_n_0 ;
  wire \wait_ctr_reg_n_0_[0] ;
  wire \wait_ctr_reg_n_0_[10] ;
  wire \wait_ctr_reg_n_0_[11] ;
  wire \wait_ctr_reg_n_0_[12] ;
  wire \wait_ctr_reg_n_0_[13] ;
  wire \wait_ctr_reg_n_0_[14] ;
  wire \wait_ctr_reg_n_0_[15] ;
  wire \wait_ctr_reg_n_0_[16] ;
  wire \wait_ctr_reg_n_0_[17] ;
  wire \wait_ctr_reg_n_0_[18] ;
  wire \wait_ctr_reg_n_0_[19] ;
  wire \wait_ctr_reg_n_0_[1] ;
  wire \wait_ctr_reg_n_0_[20] ;
  wire \wait_ctr_reg_n_0_[21] ;
  wire \wait_ctr_reg_n_0_[22] ;
  wire \wait_ctr_reg_n_0_[23] ;
  wire \wait_ctr_reg_n_0_[24] ;
  wire \wait_ctr_reg_n_0_[2] ;
  wire \wait_ctr_reg_n_0_[3] ;
  wire \wait_ctr_reg_n_0_[4] ;
  wire \wait_ctr_reg_n_0_[5] ;
  wire \wait_ctr_reg_n_0_[6] ;
  wire \wait_ctr_reg_n_0_[7] ;
  wire \wait_ctr_reg_n_0_[8] ;
  wire \wait_ctr_reg_n_0_[9] ;
  wire wr;
  wire wr_i_1__0_n_0;
  wire \x0e1_store[14]_i_1_n_0 ;
  wire \x0e1_store_reg_n_0_[0] ;
  wire \x0e1_store_reg_n_0_[12] ;
  wire \x0e1_store_reg_n_0_[13] ;
  wire \x0e1_store_reg_n_0_[14] ;
  wire \x0e1_store_reg_n_0_[1] ;
  wire \x0e1_store_reg_n_0_[2] ;
  wire \x0e1_store_reg_n_0_[3] ;
  wire \x0e1_store_reg_n_0_[4] ;
  wire \x0e1_store_reg_n_0_[5] ;
  wire \x0e1_store_reg_n_0_[6] ;
  wire \x0e1_store_reg_n_0_[7] ;
  wire \x0e1_store_reg_n_0_[8] ;
  wire \x0e1_store_reg_n_0_[9] ;
  wire [7:0]NLW_cpll_cal_state2_carry_O_UNCONNECTED;
  wire [7:1]NLW_cpll_cal_state2_carry__0_CO_UNCONNECTED;
  wire [7:0]NLW_cpll_cal_state2_carry__0_O_UNCONNECTED;
  wire [7:0]\NLW_cpll_cal_state2_inferred__0/i__carry_O_UNCONNECTED ;
  wire [7:1]\NLW_cpll_cal_state2_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [7:0]\NLW_cpll_cal_state2_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [7:7]NLW_wait_ctr0_carry__1_CO_UNCONNECTED;

  FDRE USER_CPLLLOCK_OUT_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_cplllock_inst_n_1),
        .Q(USER_CPLLLOCK_OUT_reg_0),
        .R(1'b0));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gtye4_cpll_cal_freq_counter U_TXOUTCLK_FREQ_COUNTER
       (.CO(cpll_cal_state2),
        .D(D),
        .DI({U_TXOUTCLK_FREQ_COUNTER_n_23,U_TXOUTCLK_FREQ_COUNTER_n_24,U_TXOUTCLK_FREQ_COUNTER_n_25,U_TXOUTCLK_FREQ_COUNTER_n_26}),
        .O(O),
        .Q({\cpll_cal_state_reg_n_0_[27] ,p_2_in8_in,p_11_in,p_18_in,\cpll_cal_state_reg_n_0_[12] ,\cpll_cal_state_reg_n_0_[0] }),
        .S(S),
        .cal_fail_store__0(cal_fail_store__0),
        .cal_fail_store_reg(bit_synchronizer_cplllock_inst_n_0),
        .cal_fail_store_reg_0(\repeat_ctr_reg_n_0_[3] ),
        .cal_fail_store_reg_1(cal_fail_store_i_4_n_0),
        .cal_on_tx_reset_in_sync(cal_on_tx_reset_in_sync),
        .\cpll_cal_state_reg[13] (\wait_ctr[24]_i_3_n_0 ),
        .\cpll_cal_state_reg[13]_0 (\repeat_ctr_reg_n_0_[1] ),
        .\cpll_cal_state_reg[13]_1 (\repeat_ctr_reg_n_0_[0] ),
        .\cpll_cal_state_reg[13]_2 (\repeat_ctr_reg_n_0_[2] ),
        .\cpll_cal_state_reg[21] (drp_done),
        .done_o_reg_0(U_TXOUTCLK_FREQ_COUNTER_n_0),
        .done_o_reg_1({cpll_cal_state7_out[21],cpll_cal_state7_out[13]}),
        .drpclk_in(drpclk_in),
        .\freq_cnt_o_reg[15]_0 ({U_TXOUTCLK_FREQ_COUNTER_n_28,U_TXOUTCLK_FREQ_COUNTER_n_29,U_TXOUTCLK_FREQ_COUNTER_n_30,U_TXOUTCLK_FREQ_COUNTER_n_31,U_TXOUTCLK_FREQ_COUNTER_n_32,U_TXOUTCLK_FREQ_COUNTER_n_33,U_TXOUTCLK_FREQ_COUNTER_n_34,U_TXOUTCLK_FREQ_COUNTER_n_35}),
        .\freq_cnt_o_reg[15]_1 ({U_TXOUTCLK_FREQ_COUNTER_n_36,U_TXOUTCLK_FREQ_COUNTER_n_37,U_TXOUTCLK_FREQ_COUNTER_n_38,U_TXOUTCLK_FREQ_COUNTER_n_39,U_TXOUTCLK_FREQ_COUNTER_n_40,U_TXOUTCLK_FREQ_COUNTER_n_41,U_TXOUTCLK_FREQ_COUNTER_n_42,U_TXOUTCLK_FREQ_COUNTER_n_43}),
        .\freq_cnt_o_reg[15]_2 ({U_TXOUTCLK_FREQ_COUNTER_n_44,U_TXOUTCLK_FREQ_COUNTER_n_45,U_TXOUTCLK_FREQ_COUNTER_n_46,U_TXOUTCLK_FREQ_COUNTER_n_47,U_TXOUTCLK_FREQ_COUNTER_n_48,U_TXOUTCLK_FREQ_COUNTER_n_49}),
        .\freq_cnt_o_reg[16]_0 (U_TXOUTCLK_FREQ_COUNTER_n_51),
        .\freq_cnt_o_reg[16]_1 (U_TXOUTCLK_FREQ_COUNTER_n_52),
        .\freq_cnt_o_reg[17]_0 (U_TXOUTCLK_FREQ_COUNTER_n_50),
        .\freq_cnt_o_reg[1]_0 (U_TXOUTCLK_FREQ_COUNTER_n_27),
        .\repeat_ctr_reg[3] (cpll_cal_state26_in),
        .\repeat_ctr_reg[3]_0 (\repeat_ctr[3]_i_3_n_0 ),
        .rst_in_out_reg(U_TXOUTCLK_FREQ_COUNTER_n_18),
        .rst_in_out_reg_0(U_TXOUTCLK_FREQ_COUNTER_n_19),
        .\state_reg[1]_0 (freq_counter_rst_reg_n_0),
        .\testclk_cnt_reg[15]_0 (\testclk_cnt_reg[15] ),
        .\testclk_cnt_reg[17]_0 (\testclk_cnt_reg[17] ),
        .txoutclkmon(txoutclkmon));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \addr_i[0]_i_1 
       (.I0(\addr_i[2]_i_3_n_0 ),
        .I1(\addr_i[2]_i_4_n_0 ),
        .I2(drpaddr_in[0]),
        .O(\gt0_drpaddr[0] ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    \addr_i[1]_i_1 
       (.I0(\addr_i[2]_i_3_n_0 ),
        .I1(\addr_i[2]_i_4_n_0 ),
        .I2(drprst_in_sync),
        .I3(drpaddr_in[1]),
        .O(i_in_out_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    \addr_i[2]_i_2 
       (.I0(\addr_i[2]_i_3_n_0 ),
        .I1(\addr_i[2]_i_4_n_0 ),
        .I2(drprst_in_sync),
        .I3(drpaddr_in[2]),
        .O(i_in_out_reg[1]));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \addr_i[2]_i_3 
       (.I0(\data_i_reg[15]_0 ),
        .I1(drpaddr_in[3]),
        .I2(drpaddr_in[0]),
        .I3(drpaddr_in[7]),
        .I4(drpaddr_in[6]),
        .I5(\addr_i[2]_i_6_n_0 ),
        .O(\addr_i[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \addr_i[2]_i_4 
       (.I0(\data_i_reg[15] ),
        .I1(drpaddr_in[3]),
        .I2(drpaddr_in[7]),
        .I3(drpaddr_in[4]),
        .I4(drpaddr_in[1]),
        .I5(\addr_i[2]_i_6_n_0 ),
        .O(\addr_i[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \addr_i[2]_i_6 
       (.I0(drpwe_in),
        .I1(\cpll_cal_state_reg_n_0_[31] ),
        .I2(\cpll_cal_state_reg_n_0_[0] ),
        .O(\addr_i[2]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hAE)) 
    \addr_i[3]_i_1 
       (.I0(\addr_i[2]_i_4_n_0 ),
        .I1(drpaddr_in[3]),
        .I2(\addr_i[2]_i_3_n_0 ),
        .O(\gt0_drpaddr[3] ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \addr_i[5]_i_1 
       (.I0(\addr_i[2]_i_3_n_0 ),
        .I1(\addr_i[2]_i_4_n_0 ),
        .I2(drpaddr_in[5]),
        .O(\gt0_drpaddr[5] ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \addr_i[6]_i_1 
       (.I0(drpaddr_in[6]),
        .I1(\addr_i[2]_i_3_n_0 ),
        .O(\gt0_drpaddr[6] ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \addr_i[7]_i_1 
       (.I0(drpaddr_in[7]),
        .I1(\addr_i[2]_i_3_n_0 ),
        .O(\gt0_drpaddr[7] ));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_52 bit_synchronizer_cplllock_inst
       (.Q({\cpll_cal_state_reg_n_0_[30] ,\cpll_cal_state_reg_n_0_[0] }),
        .USER_CPLLLOCK_OUT_reg(mask_user_in_reg_n_0),
        .cal_on_tx_reset_in_sync(cal_on_tx_reset_in_sync),
        .\cpll_cal_state_reg[0] (bit_synchronizer_cplllock_inst_n_1),
        .drpclk_in(drpclk_in),
        .i_in_out_reg_0(bit_synchronizer_cplllock_inst_n_0),
        .in0(in0));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_53 bit_synchronizer_txoutclksel_inst0
       (.D(bit_synchronizer_txoutclksel_inst0_n_0),
        .drpclk_in(drpclk_in),
        .\non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[0] (mask_user_in_reg_n_0),
        .txoutclksel_int(txoutclksel_int));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_54 bit_synchronizer_txoutclksel_inst1
       (.D(bit_synchronizer_txoutclksel_inst1_n_0),
        .drpclk_in(drpclk_in),
        .\non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[1] (mask_user_in_reg_n_0));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_55 bit_synchronizer_txoutclksel_inst2
       (.D(bit_synchronizer_txoutclksel_inst2_n_0),
        .drpclk_in(drpclk_in),
        .\non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[2] (mask_user_in_reg_n_0),
        .txoutclksel_int(txoutclksel_int));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_56 bit_synchronizer_txprgdivresetdone_inst
       (.D({cpll_cal_state7_out[31:29],cpll_cal_state7_out[20:19]}),
        .Q({\cpll_cal_state_reg_n_0_[31] ,\cpll_cal_state_reg_n_0_[30] ,\cpll_cal_state_reg_n_0_[29] ,\cpll_cal_state_reg_n_0_[28] ,p_11_in,p_12_in,p_13_in}),
        .cal_fail_store__0(cal_fail_store__0),
        .cal_on_tx_reset_in_sync(cal_on_tx_reset_in_sync),
        .\cpll_cal_state_reg[20] (U_TXOUTCLK_FREQ_COUNTER_n_0),
        .\cpll_cal_state_reg[29] (\wait_ctr[24]_i_3_n_0 ),
        .drpclk_in(drpclk_in),
        .freq_counter_rst_reg(freq_counter_rst_i_2_n_0),
        .freq_counter_rst_reg_0(freq_counter_rst_i_3_n_0),
        .freq_counter_rst_reg_1(freq_counter_rst_i_5_n_0),
        .freq_counter_rst_reg_2(freq_counter_rst_reg_n_0),
        .i_in_meta_reg_0(i_in_meta_reg_0),
        .rst_in_out_reg(bit_synchronizer_txprgdivresetdone_inst_n_0));
  aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_bit_synchronizer_57 bit_synchronizer_txprogdivreset_inst
       (.drpclk_in(drpclk_in),
        .i_in_meta_reg_0(i_in_meta_reg),
        .\non_pcie_txoutclksel.GTYE4_TXPROGDIVRESET_OUT_reg (mask_user_in_reg_n_0),
        .txprogdivreset_int(txprogdivreset_int),
        .txprogdivreset_int_reg(bit_synchronizer_txprogdivreset_inst_n_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  BUFG_GT #(
    .SIM_DEVICE("ULTRASCALE"),
    .STARTUP_SYNC("FALSE")) 
    bufg_gt_txoutclkmon_inst
       (.CE(lopt),
        .CEMASK(1'b1),
        .CLR(lopt_1),
        .CLRMASK(1'b1),
        .DIV({1'b0,1'b0,1'b0}),
        .I(txoutclk_out),
        .O(txoutclkmon));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h80)) 
    cal_fail_store_i_4
       (.I0(\repeat_ctr_reg_n_0_[1] ),
        .I1(\repeat_ctr_reg_n_0_[0] ),
        .I2(\repeat_ctr_reg_n_0_[2] ),
        .O(cal_fail_store_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cal_fail_store_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(U_TXOUTCLK_FREQ_COUNTER_n_19),
        .Q(cal_fail_store__0),
        .R(1'b0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY8 cpll_cal_state2_carry
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({cpll_cal_state2_carry_n_0,cpll_cal_state2_carry_n_1,cpll_cal_state2_carry_n_2,cpll_cal_state2_carry_n_3,cpll_cal_state2_carry_n_4,cpll_cal_state2_carry_n_5,cpll_cal_state2_carry_n_6,cpll_cal_state2_carry_n_7}),
        .DI({U_TXOUTCLK_FREQ_COUNTER_n_23,1'b0,1'b0,U_TXOUTCLK_FREQ_COUNTER_n_24,U_TXOUTCLK_FREQ_COUNTER_n_25,1'b0,1'b0,U_TXOUTCLK_FREQ_COUNTER_n_26}),
        .O(NLW_cpll_cal_state2_carry_O_UNCONNECTED[7:0]),
        .S({U_TXOUTCLK_FREQ_COUNTER_n_28,U_TXOUTCLK_FREQ_COUNTER_n_29,U_TXOUTCLK_FREQ_COUNTER_n_30,U_TXOUTCLK_FREQ_COUNTER_n_31,U_TXOUTCLK_FREQ_COUNTER_n_32,U_TXOUTCLK_FREQ_COUNTER_n_33,U_TXOUTCLK_FREQ_COUNTER_n_34,U_TXOUTCLK_FREQ_COUNTER_n_35}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY8 cpll_cal_state2_carry__0
       (.CI(cpll_cal_state2_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_cpll_cal_state2_carry__0_CO_UNCONNECTED[7:1],cpll_cal_state2}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_cpll_cal_state2_carry__0_O_UNCONNECTED[7:0]),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,U_TXOUTCLK_FREQ_COUNTER_n_52}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY8 \cpll_cal_state2_inferred__0/i__carry 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\cpll_cal_state2_inferred__0/i__carry_n_0 ,\cpll_cal_state2_inferred__0/i__carry_n_1 ,\cpll_cal_state2_inferred__0/i__carry_n_2 ,\cpll_cal_state2_inferred__0/i__carry_n_3 ,\cpll_cal_state2_inferred__0/i__carry_n_4 ,\cpll_cal_state2_inferred__0/i__carry_n_5 ,\cpll_cal_state2_inferred__0/i__carry_n_6 ,\cpll_cal_state2_inferred__0/i__carry_n_7 }),
        .DI({U_TXOUTCLK_FREQ_COUNTER_n_44,U_TXOUTCLK_FREQ_COUNTER_n_45,U_TXOUTCLK_FREQ_COUNTER_n_46,U_TXOUTCLK_FREQ_COUNTER_n_47,1'b0,U_TXOUTCLK_FREQ_COUNTER_n_48,U_TXOUTCLK_FREQ_COUNTER_n_49,U_TXOUTCLK_FREQ_COUNTER_n_27}),
        .O(\NLW_cpll_cal_state2_inferred__0/i__carry_O_UNCONNECTED [7:0]),
        .S({U_TXOUTCLK_FREQ_COUNTER_n_36,U_TXOUTCLK_FREQ_COUNTER_n_37,U_TXOUTCLK_FREQ_COUNTER_n_38,U_TXOUTCLK_FREQ_COUNTER_n_39,U_TXOUTCLK_FREQ_COUNTER_n_40,U_TXOUTCLK_FREQ_COUNTER_n_41,U_TXOUTCLK_FREQ_COUNTER_n_42,U_TXOUTCLK_FREQ_COUNTER_n_43}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY8 \cpll_cal_state2_inferred__0/i__carry__0 
       (.CI(\cpll_cal_state2_inferred__0/i__carry_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_cpll_cal_state2_inferred__0/i__carry__0_CO_UNCONNECTED [7:1],cpll_cal_state26_in}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,U_TXOUTCLK_FREQ_COUNTER_n_50}),
        .O(\NLW_cpll_cal_state2_inferred__0/i__carry__0_O_UNCONNECTED [7:0]),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,U_TXOUTCLK_FREQ_COUNTER_n_51}));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cpll_cal_state[12]_i_1 
       (.I0(drp_done),
        .I1(p_0_in),
        .O(cpll_cal_state7_out[12]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'hF444)) 
    \cpll_cal_state[14]_i_1 
       (.I0(\wait_ctr[24]_i_3_n_0 ),
        .I1(p_18_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .O(cpll_cal_state7_out[14]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \cpll_cal_state[15]_i_1 
       (.I0(\wait_ctr[24]_i_4_n_0 ),
        .I1(p_17_in),
        .I2(\wait_ctr[10]_i_4_n_0 ),
        .I3(p_16_in),
        .O(cpll_cal_state7_out[15]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \cpll_cal_state[16]_i_1 
       (.I0(\wait_ctr[10]_i_4_n_0 ),
        .I1(p_16_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_15_in),
        .O(cpll_cal_state7_out[16]));
  LUT4 #(
    .INIT(16'h4F44)) 
    \cpll_cal_state[17]_i_1 
       (.I0(\wait_ctr[24]_i_4_n_0 ),
        .I1(p_15_in),
        .I2(\wait_ctr[10]_i_4_n_0 ),
        .I3(p_14_in),
        .O(cpll_cal_state7_out[17]));
  LUT4 #(
    .INIT(16'hF888)) 
    \cpll_cal_state[18]_i_1 
       (.I0(\wait_ctr[24]_i_3_n_0 ),
        .I1(p_13_in),
        .I2(\wait_ctr[10]_i_4_n_0 ),
        .I3(p_14_in),
        .O(cpll_cal_state7_out[18]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \cpll_cal_state[1]_i_1 
       (.I0(\cpll_cal_state_reg_n_0_[0] ),
        .I1(drp_done),
        .I2(p_1_in10_in),
        .O(cpll_cal_state7_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cpll_cal_state[27]_i_1 
       (.I0(drp_done),
        .I1(p_3_in),
        .O(cpll_cal_state7_out[27]));
  LUT3 #(
    .INIT(8'hEA)) 
    \cpll_cal_state[28]_i_1 
       (.I0(\cpll_cal_state_reg_n_0_[27] ),
        .I1(\wait_ctr[24]_i_3_n_0 ),
        .I2(\cpll_cal_state_reg_n_0_[28] ),
        .O(cpll_cal_state7_out[28]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cpll_cal_state[2]_i_1 
       (.I0(p_1_in10_in),
        .I1(drp_done),
        .O(cpll_cal_state7_out[2]));
  LUT4 #(
    .INIT(16'h4F44)) 
    \cpll_cal_state[3]_i_1 
       (.I0(drp_done),
        .I1(p_1_in2_in),
        .I2(status_store__0),
        .I3(p_29_in),
        .O(cpll_cal_state7_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT5 #(
    .INIT(32'hFFF888F8)) 
    \cpll_cal_state[5]_i_1 
       (.I0(p_29_in),
        .I1(status_store__0),
        .I2(p_1_in5_in),
        .I3(drp_done),
        .I4(p_0_in7_in),
        .O(cpll_cal_state7_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cpll_cal_state[6]_i_1 
       (.I0(drp_done),
        .I1(p_1_in5_in),
        .O(cpll_cal_state7_out[6]));
  LUT4 #(
    .INIT(16'h4F44)) 
    \cpll_cal_state[7]_i_1 
       (.I0(drp_done),
        .I1(p_1_in),
        .I2(status_store__0),
        .I3(p_25_in),
        .O(cpll_cal_state7_out[7]));
  LUT5 #(
    .INIT(32'hFFF888F8)) 
    \cpll_cal_state[9]_i_1 
       (.I0(p_25_in),
        .I1(status_store__0),
        .I2(p_4_in),
        .I3(drp_done),
        .I4(p_0_in3_in),
        .O(cpll_cal_state7_out[9]));
  FDSE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(\cpll_cal_state_reg_n_0_[0] ),
        .S(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[10] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_4_in),
        .Q(p_0_in0_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[11] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_0_in0_in),
        .Q(p_0_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[12] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[12]),
        .Q(\cpll_cal_state_reg_n_0_[12] ),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[13] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[13]),
        .Q(p_18_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[14] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[14]),
        .Q(p_17_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[15] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[15]),
        .Q(p_16_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[16] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[16]),
        .Q(p_15_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[17] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[17]),
        .Q(p_14_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[18] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[18]),
        .Q(p_13_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[19] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[19]),
        .Q(p_12_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[1]),
        .Q(p_1_in10_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[20] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[20]),
        .Q(p_11_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[21] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[21]),
        .Q(p_2_in8_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[22] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_2_in8_in),
        .Q(p_2_in4_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[23] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_2_in4_in),
        .Q(p_2_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[24] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_2_in),
        .Q(p_2_in1_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[25] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_2_in1_in),
        .Q(p_3_in9_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[26] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_3_in9_in),
        .Q(p_3_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[27] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[27]),
        .Q(\cpll_cal_state_reg_n_0_[27] ),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[28] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[28]),
        .Q(\cpll_cal_state_reg_n_0_[28] ),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[29] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[29]),
        .Q(\cpll_cal_state_reg_n_0_[29] ),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[2]),
        .Q(p_29_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[30] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[30]),
        .Q(\cpll_cal_state_reg_n_0_[30] ),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[31] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[31]),
        .Q(\cpll_cal_state_reg_n_0_[31] ),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[3] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[3]),
        .Q(p_1_in2_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[4] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_1_in2_in),
        .Q(p_0_in7_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[5] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[5]),
        .Q(p_1_in5_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[6] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[6]),
        .Q(p_25_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[7] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[7]),
        .Q(p_1_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[8] 
       (.C(drpclk_in),
        .CE(drp_done),
        .D(p_1_in),
        .Q(p_0_in3_in),
        .R(cal_on_tx_reset_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \cpll_cal_state_reg[9] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpll_cal_state7_out[9]),
        .Q(p_4_in),
        .R(cal_on_tx_reset_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT5 #(
    .INIT(32'hFFBB4F00)) 
    cpllpd_int_i_1
       (.I0(\wait_ctr[24]_i_4_n_0 ),
        .I1(p_17_in),
        .I2(\wait_ctr[24]_i_3_n_0 ),
        .I3(p_18_in),
        .I4(cpllpd_int_reg_0),
        .O(cpllpd_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllpd_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpllpd_int_i_1_n_0),
        .Q(cpllpd_int_reg_0),
        .R(cal_on_tx_reset_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'hFCFF8C88)) 
    cpllreset_int_i_1
       (.I0(\wait_ctr[10]_i_4_n_0 ),
        .I1(p_16_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_15_in),
        .I4(cpllreset_int_reg_0),
        .O(cpllreset_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllreset_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(cpllreset_int_i_1_n_0),
        .Q(cpllreset_int_reg_0),
        .R(cal_on_tx_reset_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \daddr[1]_i_1 
       (.I0(\daddr[6]_i_3_n_0 ),
        .I1(p_1_in2_in),
        .I2(p_2_in1_in),
        .I3(p_0_in0_in),
        .I4(\daddr[4]_i_2_n_0 ),
        .O(daddr0_in[1]));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \daddr[2]_i_1 
       (.I0(p_3_in),
        .I1(p_0_in3_in),
        .I2(p_2_in4_in),
        .I3(p_1_in5_in),
        .I4(\daddr[6]_i_2_n_0 ),
        .I5(\cpll_cal_state_reg_n_0_[0] ),
        .O(daddr0_in[2]));
  LUT5 #(
    .INIT(32'h0000FFFE)) 
    \daddr[3]_i_1 
       (.I0(\daddr[6]_i_3_n_0 ),
        .I1(p_1_in2_in),
        .I2(p_2_in1_in),
        .I3(p_0_in0_in),
        .I4(\daddr[4]_i_2_n_0 ),
        .O(daddr0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'h44444445)) 
    \daddr[4]_i_1 
       (.I0(\daddr[4]_i_2_n_0 ),
        .I1(\daddr[6]_i_3_n_0 ),
        .I2(p_1_in2_in),
        .I3(p_2_in1_in),
        .I4(p_0_in0_in),
        .O(daddr0_in[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \daddr[4]_i_2 
       (.I0(\cpll_cal_state_reg_n_0_[0] ),
        .I1(p_4_in),
        .I2(p_2_in8_in),
        .I3(p_3_in9_in),
        .I4(p_1_in10_in),
        .I5(p_0_in7_in),
        .O(\daddr[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5555555455555555)) 
    \daddr[5]_i_1__0 
       (.I0(\cpll_cal_state_reg_n_0_[0] ),
        .I1(p_3_in),
        .I2(p_0_in3_in),
        .I3(p_2_in4_in),
        .I4(p_1_in5_in),
        .I5(\daddr[6]_i_2_n_0 ),
        .O(\daddr[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF5557)) 
    \daddr[6]_i_1 
       (.I0(\daddr[6]_i_2_n_0 ),
        .I1(p_0_in0_in),
        .I2(p_2_in1_in),
        .I3(p_1_in2_in),
        .I4(\daddr[6]_i_3_n_0 ),
        .I5(\cpll_cal_state_reg_n_0_[0] ),
        .O(daddr0_in[6]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \daddr[6]_i_2 
       (.I0(p_0_in7_in),
        .I1(p_1_in10_in),
        .I2(p_3_in9_in),
        .I3(p_2_in8_in),
        .I4(p_4_in),
        .O(\daddr[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \daddr[6]_i_3 
       (.I0(p_3_in),
        .I1(p_0_in3_in),
        .I2(p_2_in4_in),
        .I3(p_1_in5_in),
        .O(\daddr[6]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \daddr[7]_i_1 
       (.I0(daddr0_in[1]),
        .I1(p_0_in),
        .I2(p_2_in),
        .I3(p_1_in),
        .O(\daddr[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555554)) 
    \daddr[7]_i_2 
       (.I0(\cpll_cal_state_reg_n_0_[0] ),
        .I1(p_4_in),
        .I2(p_2_in8_in),
        .I3(p_3_in9_in),
        .I4(p_1_in10_in),
        .I5(p_0_in7_in),
        .O(\daddr[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[1] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1_n_0 ),
        .D(daddr0_in[1]),
        .Q(\daddr_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[2] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1_n_0 ),
        .D(daddr0_in[2]),
        .Q(\daddr_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[3] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1_n_0 ),
        .D(daddr0_in[3]),
        .Q(\daddr_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[4] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1_n_0 ),
        .D(daddr0_in[4]),
        .Q(\daddr_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[5] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1_n_0 ),
        .D(\daddr[5]_i_1__0_n_0 ),
        .Q(\daddr_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[6] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1_n_0 ),
        .D(daddr0_in[6]),
        .Q(\daddr_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \daddr_reg[7] 
       (.C(drpclk_in),
        .CE(\daddr[7]_i_1_n_0 ),
        .D(\daddr[7]_i_2_n_0 ),
        .Q(\daddr_reg[7]_0 [6]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \data_i[15]_i_1 
       (.I0(\addr_i[2]_i_3_n_0 ),
        .I1(\addr_i[2]_i_4_n_0 ),
        .I2(drpdi_in),
        .O(\gt0_drpdi[15] ));
  LUT5 #(
    .INIT(32'hFFCDFFCC)) 
    den_i_1
       (.I0(\drp_state_reg_n_0_[5] ),
        .I1(\drp_state_reg_n_0_[4] ),
        .I2(\drp_state_reg_n_0_[2] ),
        .I3(\drp_state_reg_n_0_[1] ),
        .I4(cal_on_tx_drpen_out),
        .O(den_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    den_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(den_i_1_n_0),
        .Q(cal_on_tx_drpen_out));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \di_msk[0]_i_1 
       (.I0(\di_msk[12]_i_2_n_0 ),
        .I1(\progclk_sel_store_reg_n_0_[0] ),
        .I2(\progdiv_cfg_store_reg_n_0_[0] ),
        .I3(\di_msk[12]_i_3_n_0 ),
        .I4(p_0_in0_in),
        .I5(\x0e1_store_reg_n_0_[0] ),
        .O(\di_msk[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFE0E0E0E0E0)) 
    \di_msk[10]_i_1 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[10] ),
        .I3(p_0_in7_in),
        .I4(p_2_in1_in),
        .I5(\progclk_sel_store_reg_n_0_[10] ),
        .O(\di_msk[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFE0E0FFE0)) 
    \di_msk[11]_i_1 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[11] ),
        .I3(\progclk_sel_store_reg_n_0_[11] ),
        .I4(\di_msk[12]_i_2_n_0 ),
        .I5(p_0_in0_in),
        .O(\di_msk[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \di_msk[12]_i_1 
       (.I0(\di_msk[12]_i_2_n_0 ),
        .I1(\progclk_sel_store_reg_n_0_[12] ),
        .I2(\progdiv_cfg_store_reg_n_0_[12] ),
        .I3(\di_msk[12]_i_3_n_0 ),
        .I4(p_0_in0_in),
        .I5(\x0e1_store_reg_n_0_[12] ),
        .O(\di_msk[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \di_msk[12]_i_2 
       (.I0(p_0_in7_in),
        .I1(p_2_in1_in),
        .O(\di_msk[12]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \di_msk[12]_i_3 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .O(\di_msk[12]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFE0)) 
    \di_msk[13]_i_1 
       (.I0(p_0_in7_in),
        .I1(p_2_in1_in),
        .I2(\progclk_sel_store_reg_n_0_[13] ),
        .I3(\di_msk[13]_i_2_n_0 ),
        .O(\di_msk[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \di_msk[13]_i_2 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[13] ),
        .I3(p_0_in0_in),
        .I4(\x0e1_store_reg_n_0_[13] ),
        .I5(p_0_in),
        .O(\di_msk[13]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFE0)) 
    \di_msk[14]_i_1 
       (.I0(p_0_in7_in),
        .I1(p_2_in1_in),
        .I2(\progclk_sel_store_reg_n_0_[14] ),
        .I3(\di_msk[14]_i_2_n_0 ),
        .O(\di_msk[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \di_msk[14]_i_2 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[14] ),
        .I3(p_0_in0_in),
        .I4(\x0e1_store_reg_n_0_[14] ),
        .I5(p_0_in),
        .O(\di_msk[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h54)) 
    \di_msk[15]_i_1 
       (.I0(cal_on_tx_reset_in_sync),
        .I1(\di_msk[15]_i_3_n_0 ),
        .I2(\cpll_cal_state_reg_n_0_[0] ),
        .O(\di_msk[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'hFFFFFFE0)) 
    \di_msk[15]_i_2 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[15] ),
        .I3(p_0_in7_in),
        .I4(p_0_in),
        .O(\di_msk[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \di_msk[15]_i_3 
       (.I0(p_0_in0_in),
        .I1(p_3_in9_in),
        .I2(p_0_in3_in),
        .I3(p_3_in),
        .I4(\di_msk[12]_i_2_n_0 ),
        .I5(\di_msk[15]_i_4_n_0 ),
        .O(\di_msk[15]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \di_msk[15]_i_4 
       (.I0(p_0_in),
        .I1(p_2_in),
        .O(\di_msk[15]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'hFFE0)) 
    \di_msk[1]_i_1 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[1] ),
        .I3(\di_msk[1]_i_2_n_0 ),
        .O(\di_msk[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \di_msk[1]_i_2 
       (.I0(p_0_in7_in),
        .I1(p_2_in1_in),
        .I2(\progclk_sel_store_reg_n_0_[1] ),
        .I3(p_0_in0_in),
        .I4(\x0e1_store_reg_n_0_[1] ),
        .I5(p_0_in),
        .O(\di_msk[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \di_msk[2]_i_1 
       (.I0(\di_msk[12]_i_2_n_0 ),
        .I1(\progclk_sel_store_reg_n_0_[2] ),
        .I2(\progdiv_cfg_store_reg_n_0_[2] ),
        .I3(\di_msk[12]_i_3_n_0 ),
        .I4(p_0_in0_in),
        .I5(\x0e1_store_reg_n_0_[2] ),
        .O(\di_msk[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \di_msk[3]_i_1 
       (.I0(\di_msk[12]_i_2_n_0 ),
        .I1(\progclk_sel_store_reg_n_0_[3] ),
        .I2(\progdiv_cfg_store_reg_n_0_[3] ),
        .I3(\di_msk[12]_i_3_n_0 ),
        .I4(p_0_in0_in),
        .I5(\x0e1_store_reg_n_0_[3] ),
        .O(\di_msk[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \di_msk[4]_i_1 
       (.I0(\di_msk[12]_i_2_n_0 ),
        .I1(\progclk_sel_store_reg_n_0_[4] ),
        .I2(\progdiv_cfg_store_reg_n_0_[4] ),
        .I3(\di_msk[12]_i_3_n_0 ),
        .I4(p_0_in0_in),
        .I5(\x0e1_store_reg_n_0_[4] ),
        .O(\di_msk[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'hFFE0)) 
    \di_msk[5]_i_1 
       (.I0(p_0_in7_in),
        .I1(p_2_in1_in),
        .I2(\progclk_sel_store_reg_n_0_[5] ),
        .I3(\di_msk[5]_i_2_n_0 ),
        .O(\di_msk[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \di_msk[5]_i_2 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[5] ),
        .I3(p_0_in0_in),
        .I4(\x0e1_store_reg_n_0_[5] ),
        .I5(p_0_in),
        .O(\di_msk[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFE0)) 
    \di_msk[6]_i_1 
       (.I0(p_2_in),
        .I1(p_0_in3_in),
        .I2(\progdiv_cfg_store_reg_n_0_[6] ),
        .I3(\di_msk[6]_i_2_n_0 ),
        .O(\di_msk[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \di_msk[6]_i_2 
       (.I0(p_0_in7_in),
        .I1(p_2_in1_in),
        .I2(\progclk_sel_store_reg_n_0_[6] ),
        .I3(p_0_in0_in),
        .I4(\x0e1_store_reg_n_0_[6] ),
        .I5(p_0_in),
        .O(\di_msk[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \di_msk[7]_i_1 
       (.I0(\di_msk[12]_i_2_n_0 ),
        .I1(\progclk_sel_store_reg_n_0_[7] ),
        .I2(\progdiv_cfg_store_reg_n_0_[7] ),
        .I3(\di_msk[12]_i_3_n_0 ),
        .I4(p_0_in0_in),
        .I5(\x0e1_store_reg_n_0_[7] ),
        .O(\di_msk[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \di_msk[8]_i_1 
       (.I0(\di_msk[12]_i_2_n_0 ),
        .I1(\progclk_sel_store_reg_n_0_[8] ),
        .I2(\progdiv_cfg_store_reg_n_0_[8] ),
        .I3(\di_msk[12]_i_3_n_0 ),
        .I4(p_0_in0_in),
        .I5(\x0e1_store_reg_n_0_[8] ),
        .O(\di_msk[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44F444F444F4)) 
    \di_msk[9]_i_1 
       (.I0(\di_msk[12]_i_2_n_0 ),
        .I1(\progclk_sel_store_reg_n_0_[9] ),
        .I2(\progdiv_cfg_store_reg_n_0_[9] ),
        .I3(\di_msk[12]_i_3_n_0 ),
        .I4(p_0_in0_in),
        .I5(\x0e1_store_reg_n_0_[9] ),
        .O(\di_msk[9]_i_1_n_0 ));
  FDRE \di_msk_reg[0] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[0]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \di_msk_reg[10] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[10]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \di_msk_reg[11] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[11]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \di_msk_reg[12] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[12]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \di_msk_reg[13] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[13]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \di_msk_reg[14] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[14]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \di_msk_reg[15] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[15]_i_2_n_0 ),
        .Q(\di_msk_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \di_msk_reg[1] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[1]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \di_msk_reg[2] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[2]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \di_msk_reg[3] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[3]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \di_msk_reg[4] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[4]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \di_msk_reg[5] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[5]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \di_msk_reg[6] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[6]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \di_msk_reg[7] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[7]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \di_msk_reg[8] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[8]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \di_msk_reg[9] 
       (.C(drpclk_in),
        .CE(\di_msk[15]_i_1_n_0 ),
        .D(\di_msk[9]_i_1_n_0 ),
        .Q(\di_msk_reg_n_0_[9] ),
        .R(1'b0));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[0] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[0] ),
        .Q(\di_reg[15]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[10] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[10] ),
        .Q(\di_reg[15]_0 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[11] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[11] ),
        .Q(\di_reg[15]_0 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[12] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[12] ),
        .Q(\di_reg[15]_0 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[13] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[13] ),
        .Q(\di_reg[15]_0 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[14] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[14] ),
        .Q(\di_reg[15]_0 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[15] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[15] ),
        .Q(\di_reg[15]_0 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[1] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[1] ),
        .Q(\di_reg[15]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[2] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[2] ),
        .Q(\di_reg[15]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[3] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[3] ),
        .Q(\di_reg[15]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[4] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[4] ),
        .Q(\di_reg[15]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[5] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[5] ),
        .Q(\di_reg[15]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[6] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[6] ),
        .Q(\di_reg[15]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[7] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[7] ),
        .Q(\di_reg[15]_0 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[8] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[8] ),
        .Q(\di_reg[15]_0 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \di_reg[9] 
       (.C(drpclk_in),
        .CE(\drp_state_reg_n_0_[4] ),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\di_msk_reg_n_0_[9] ),
        .Q(\di_reg[15]_0 [9]));
  LUT4 #(
    .INIT(16'hAABA)) 
    \drp_state[0]_i_1__0 
       (.I0(drp_done),
        .I1(rd),
        .I2(\drp_state_reg_n_0_[0] ),
        .I3(wr),
        .O(\drp_state[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_state[1]_i_1 
       (.I0(rd),
        .I1(\drp_state_reg_n_0_[0] ),
        .O(\drp_state[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \drp_state[2]_i_1 
       (.I0(\drp_state_reg_n_0_[1] ),
        .I1(cal_on_tx_drdy),
        .I2(\drp_state_reg_n_0_[2] ),
        .O(\drp_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \drp_state[3]_i_1 
       (.I0(\drp_state_reg_n_0_[2] ),
        .I1(cal_on_tx_drdy),
        .I2(rd),
        .O(\drp_state[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'hBAAA)) 
    \drp_state[4]_i_1 
       (.I0(\drp_state_reg_n_0_[3] ),
        .I1(rd),
        .I2(\drp_state_reg_n_0_[0] ),
        .I3(wr),
        .O(\drp_state[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \drp_state[5]_i_1 
       (.I0(\drp_state_reg_n_0_[4] ),
        .I1(cal_on_tx_drdy),
        .I2(\drp_state_reg_n_0_[5] ),
        .O(\drp_state[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'hA888)) 
    \drp_state[6]_i_1__0 
       (.I0(cal_on_tx_drdy),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(rd),
        .I3(\drp_state_reg_n_0_[2] ),
        .O(\drp_state[6]_i_1__0_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \drp_state_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\drp_state[0]_i_1__0_n_0 ),
        .PRE(cal_on_tx_reset_in_sync),
        .Q(\drp_state_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \drp_state_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\drp_state[1]_i_1_n_0 ),
        .Q(\drp_state_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \drp_state_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\drp_state[2]_i_1_n_0 ),
        .Q(\drp_state_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \drp_state_reg[3] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\drp_state[3]_i_1_n_0 ),
        .Q(\drp_state_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \drp_state_reg[4] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\drp_state[4]_i_1_n_0 ),
        .Q(\drp_state_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \drp_state_reg[5] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\drp_state[5]_i_1_n_0 ),
        .Q(\drp_state_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \drp_state_reg[6] 
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(\drp_state[6]_i_1__0_n_0 ),
        .Q(drp_done));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    dwe_i_1
       (.I0(\drp_state_reg_n_0_[4] ),
        .I1(\drp_state_reg_n_0_[5] ),
        .I2(cal_on_tx_drpwe_out),
        .O(dwe_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    dwe_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .CLR(cal_on_tx_reset_in_sync),
        .D(dwe_i_1_n_0),
        .Q(cal_on_tx_drpwe_out));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'hE)) 
    freq_counter_rst_i_2
       (.I0(p_16_in),
        .I1(p_17_in),
        .O(freq_counter_rst_i_2_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAA80000000)) 
    freq_counter_rst_i_3
       (.I0(p_16_in),
        .I1(\wait_ctr_reg_n_0_[12] ),
        .I2(\wait_ctr_reg_n_0_[11] ),
        .I3(\wait_ctr_reg_n_0_[13] ),
        .I4(freq_counter_rst_i_6_n_0),
        .I5(\wait_ctr[10]_i_10_n_0 ),
        .O(freq_counter_rst_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT5 #(
    .INIT(32'hAAAA8088)) 
    freq_counter_rst_i_5
       (.I0(p_17_in),
        .I1(\wait_ctr_reg_n_0_[10] ),
        .I2(\wait_ctr_reg_n_0_[9] ),
        .I3(\wait_ctr[10]_i_9_n_0 ),
        .I4(\wait_ctr[10]_i_8_n_0 ),
        .O(freq_counter_rst_i_5_n_0));
  LUT6 #(
    .INIT(64'hEEEAEEEAEEEAEAEA)) 
    freq_counter_rst_i_6
       (.I0(\wait_ctr_reg_n_0_[10] ),
        .I1(\wait_ctr_reg_n_0_[9] ),
        .I2(\wait_ctr_reg_n_0_[8] ),
        .I3(\wait_ctr_reg_n_0_[7] ),
        .I4(freq_counter_rst_i_7_n_0),
        .I5(\wait_ctr[10]_i_12_n_0 ),
        .O(freq_counter_rst_i_6_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    freq_counter_rst_i_7
       (.I0(\wait_ctr_reg_n_0_[6] ),
        .I1(\wait_ctr_reg_n_0_[5] ),
        .O(freq_counter_rst_i_7_n_0));
  FDRE #(
    .INIT(1'b1)) 
    freq_counter_rst_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_txprgdivresetdone_inst_n_0),
        .Q(freq_counter_rst_reg_n_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFCDFFCC)) 
    mask_user_in_i_1
       (.I0(\cpll_cal_state_reg_n_0_[31] ),
        .I1(\cpll_cal_state_reg_n_0_[0] ),
        .I2(\cpll_cal_state_reg_n_0_[30] ),
        .I3(p_1_in10_in),
        .I4(mask_user_in_reg_n_0),
        .O(mask_user_in_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mask_user_in_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(mask_user_in_i_1_n_0),
        .Q(mask_user_in_reg_n_0),
        .R(cal_on_tx_reset_in_sync));
  FDRE \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[0] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_txoutclksel_inst0_n_0),
        .Q(\non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[2]_0 [0]),
        .R(1'b0));
  FDRE \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[1] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_txoutclksel_inst1_n_0),
        .Q(\non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[2]_0 [1]),
        .R(1'b0));
  FDRE \non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_txoutclksel_inst2_n_0),
        .Q(\non_pcie_txoutclksel.GTYE4_TXOUTCLKSEL_OUT_reg[2]_0 [2]),
        .R(1'b0));
  FDRE \non_pcie_txoutclksel.GTYE4_TXPROGDIVRESET_OUT_reg 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_txprogdivreset_inst_n_0),
        .Q(\gen_gtwizard_gtye4.txprogdivreset_ch_int ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h4440)) 
    \progclk_sel_store[14]_i_1 
       (.I0(cal_on_tx_reset_in_sync),
        .I1(drp_done),
        .I2(p_2_in8_in),
        .I3(p_1_in2_in),
        .O(progclk_sel_store));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[0] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[0]),
        .Q(\progclk_sel_store_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[10] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[10]),
        .Q(\progclk_sel_store_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[11] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[11]),
        .Q(\progclk_sel_store_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[12] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[12]),
        .Q(\progclk_sel_store_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[13] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[13]),
        .Q(\progclk_sel_store_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[14] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[14]),
        .Q(\progclk_sel_store_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[1] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[1]),
        .Q(\progclk_sel_store_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[2] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[2]),
        .Q(\progclk_sel_store_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[3] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[3]),
        .Q(\progclk_sel_store_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[4] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[4]),
        .Q(\progclk_sel_store_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[5] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[5]),
        .Q(\progclk_sel_store_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[6] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[6]),
        .Q(\progclk_sel_store_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[7] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[7]),
        .Q(\progclk_sel_store_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[8] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[8]),
        .Q(\progclk_sel_store_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progclk_sel_store_reg[9] 
       (.C(drpclk_in),
        .CE(progclk_sel_store),
        .D(Q[9]),
        .Q(\progclk_sel_store_reg_n_0_[9] ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h4440)) 
    \progdiv_cfg_store[14]_i_1 
       (.I0(cal_on_tx_reset_in_sync),
        .I1(drp_done),
        .I2(p_2_in4_in),
        .I3(p_1_in),
        .O(progdiv_cfg_store));
  LUT6 #(
    .INIT(64'hFFFFEFFF30302000)) 
    \progdiv_cfg_store[15]_i_1 
       (.I0(Q[15]),
        .I1(cal_on_tx_reset_in_sync),
        .I2(drp_done),
        .I3(p_2_in4_in),
        .I4(p_1_in),
        .I5(\progdiv_cfg_store_reg_n_0_[15] ),
        .O(\progdiv_cfg_store[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[0] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[0]),
        .Q(\progdiv_cfg_store_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[10] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[10]),
        .Q(\progdiv_cfg_store_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[11] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[11]),
        .Q(\progdiv_cfg_store_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[12] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[12]),
        .Q(\progdiv_cfg_store_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[13] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[13]),
        .Q(\progdiv_cfg_store_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[14] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[14]),
        .Q(\progdiv_cfg_store_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[15] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\progdiv_cfg_store[15]_i_1_n_0 ),
        .Q(\progdiv_cfg_store_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[1] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[1]),
        .Q(\progdiv_cfg_store_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[2] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[2]),
        .Q(\progdiv_cfg_store_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[3] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[3]),
        .Q(\progdiv_cfg_store_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[4] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[4]),
        .Q(\progdiv_cfg_store_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[5] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[5]),
        .Q(\progdiv_cfg_store_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[6] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[6]),
        .Q(\progdiv_cfg_store_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[7] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[7]),
        .Q(\progdiv_cfg_store_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[8] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[8]),
        .Q(\progdiv_cfg_store_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \progdiv_cfg_store_reg[9] 
       (.C(drpclk_in),
        .CE(progdiv_cfg_store),
        .D(Q[9]),
        .Q(\progdiv_cfg_store_reg_n_0_[9] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h5555555755555554)) 
    rd_i_1__0
       (.I0(drp_done),
        .I1(p_1_in),
        .I2(p_2_in4_in),
        .I3(p_4_in),
        .I4(rd_i_2_n_0),
        .I5(rd),
        .O(rd_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    rd_i_2
       (.I0(p_1_in5_in),
        .I1(p_1_in10_in),
        .I2(p_2_in8_in),
        .I3(p_1_in2_in),
        .O(rd_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rd_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rd_i_1__0_n_0),
        .Q(rd),
        .R(cal_on_tx_reset_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \repeat_ctr[0]_i_1 
       (.I0(p_11_in),
        .I1(\repeat_ctr_reg_n_0_[0] ),
        .O(\repeat_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \repeat_ctr[1]_i_1 
       (.I0(p_11_in),
        .I1(\repeat_ctr_reg_n_0_[0] ),
        .I2(\repeat_ctr_reg_n_0_[1] ),
        .O(\repeat_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'h2888)) 
    \repeat_ctr[2]_i_1 
       (.I0(p_11_in),
        .I1(\repeat_ctr_reg_n_0_[2] ),
        .I2(\repeat_ctr_reg_n_0_[1] ),
        .I3(\repeat_ctr_reg_n_0_[0] ),
        .O(\repeat_ctr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'h28888888)) 
    \repeat_ctr[3]_i_2 
       (.I0(p_11_in),
        .I1(\repeat_ctr_reg_n_0_[3] ),
        .I2(\repeat_ctr_reg_n_0_[2] ),
        .I3(\repeat_ctr_reg_n_0_[0] ),
        .I4(\repeat_ctr_reg_n_0_[1] ),
        .O(\repeat_ctr[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \repeat_ctr[3]_i_3 
       (.I0(\repeat_ctr_reg_n_0_[3] ),
        .I1(\repeat_ctr_reg_n_0_[2] ),
        .I2(\repeat_ctr_reg_n_0_[0] ),
        .I3(\repeat_ctr_reg_n_0_[1] ),
        .O(\repeat_ctr[3]_i_3_n_0 ));
  FDRE \repeat_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(U_TXOUTCLK_FREQ_COUNTER_n_18),
        .D(\repeat_ctr[0]_i_1_n_0 ),
        .Q(\repeat_ctr_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \repeat_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(U_TXOUTCLK_FREQ_COUNTER_n_18),
        .D(\repeat_ctr[1]_i_1_n_0 ),
        .Q(\repeat_ctr_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \repeat_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(U_TXOUTCLK_FREQ_COUNTER_n_18),
        .D(\repeat_ctr[2]_i_1_n_0 ),
        .Q(\repeat_ctr_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \repeat_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(U_TXOUTCLK_FREQ_COUNTER_n_18),
        .D(\repeat_ctr[3]_i_2_n_0 ),
        .Q(\repeat_ctr_reg_n_0_[3] ),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_meta_i_1__3
       (.I0(USER_CPLLLOCK_OUT_reg_0),
        .O(rst_in0));
  LUT6 #(
    .INIT(64'hFFABFFFF00A80000)) 
    status_store_i_1
       (.I0(Q[15]),
        .I1(p_1_in5_in),
        .I2(p_1_in10_in),
        .I3(cal_on_tx_reset_in_sync),
        .I4(drp_done),
        .I5(status_store__0),
        .O(status_store_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    status_store_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(status_store_i_1_n_0),
        .Q(status_store__0),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h0E)) 
    \txoutclksel_int[2]_i_1 
       (.I0(txoutclksel_int),
        .I1(\cpll_cal_state_reg_n_0_[12] ),
        .I2(\cpll_cal_state_reg_n_0_[0] ),
        .O(\txoutclksel_int[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txoutclksel_int_reg[2] 
       (.C(drpclk_in),
        .CE(1'b1),
        .D(\txoutclksel_int[2]_i_1_n_0 ),
        .Q(txoutclksel_int),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    txprogdivreset_int_i_1
       (.I0(\wait_ctr[24]_i_3_n_0 ),
        .I1(\cpll_cal_state_reg_n_0_[28] ),
        .I2(p_13_in),
        .I3(txprogdivreset_int),
        .O(txprogdivreset_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txprogdivreset_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(txprogdivreset_int_i_1_n_0),
        .Q(txprogdivreset_int),
        .R(cal_on_tx_reset_in_sync));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 wait_ctr0_carry
       (.CI(\wait_ctr_reg_n_0_[0] ),
        .CI_TOP(1'b0),
        .CO({wait_ctr0_carry_n_0,wait_ctr0_carry_n_1,wait_ctr0_carry_n_2,wait_ctr0_carry_n_3,wait_ctr0_carry_n_4,wait_ctr0_carry_n_5,wait_ctr0_carry_n_6,wait_ctr0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({wait_ctr0_carry_n_8,wait_ctr0_carry_n_9,wait_ctr0_carry_n_10,wait_ctr0_carry_n_11,wait_ctr0_carry_n_12,wait_ctr0_carry_n_13,wait_ctr0_carry_n_14,wait_ctr0_carry_n_15}),
        .S({\wait_ctr_reg_n_0_[8] ,\wait_ctr_reg_n_0_[7] ,\wait_ctr_reg_n_0_[6] ,\wait_ctr_reg_n_0_[5] ,\wait_ctr_reg_n_0_[4] ,\wait_ctr_reg_n_0_[3] ,\wait_ctr_reg_n_0_[2] ,\wait_ctr_reg_n_0_[1] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 wait_ctr0_carry__0
       (.CI(wait_ctr0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({wait_ctr0_carry__0_n_0,wait_ctr0_carry__0_n_1,wait_ctr0_carry__0_n_2,wait_ctr0_carry__0_n_3,wait_ctr0_carry__0_n_4,wait_ctr0_carry__0_n_5,wait_ctr0_carry__0_n_6,wait_ctr0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({wait_ctr0_carry__0_n_8,wait_ctr0_carry__0_n_9,wait_ctr0_carry__0_n_10,wait_ctr0_carry__0_n_11,wait_ctr0_carry__0_n_12,wait_ctr0_carry__0_n_13,wait_ctr0_carry__0_n_14,wait_ctr0_carry__0_n_15}),
        .S({\wait_ctr_reg_n_0_[16] ,\wait_ctr_reg_n_0_[15] ,\wait_ctr_reg_n_0_[14] ,\wait_ctr_reg_n_0_[13] ,\wait_ctr_reg_n_0_[12] ,\wait_ctr_reg_n_0_[11] ,\wait_ctr_reg_n_0_[10] ,\wait_ctr_reg_n_0_[9] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 wait_ctr0_carry__1
       (.CI(wait_ctr0_carry__0_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_wait_ctr0_carry__1_CO_UNCONNECTED[7],wait_ctr0_carry__1_n_1,wait_ctr0_carry__1_n_2,wait_ctr0_carry__1_n_3,wait_ctr0_carry__1_n_4,wait_ctr0_carry__1_n_5,wait_ctr0_carry__1_n_6,wait_ctr0_carry__1_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({wait_ctr0_carry__1_n_8,wait_ctr0_carry__1_n_9,wait_ctr0_carry__1_n_10,wait_ctr0_carry__1_n_11,wait_ctr0_carry__1_n_12,wait_ctr0_carry__1_n_13,wait_ctr0_carry__1_n_14,wait_ctr0_carry__1_n_15}),
        .S({\wait_ctr_reg_n_0_[24] ,\wait_ctr_reg_n_0_[23] ,\wait_ctr_reg_n_0_[22] ,\wait_ctr_reg_n_0_[21] ,\wait_ctr_reg_n_0_[20] ,\wait_ctr_reg_n_0_[19] ,\wait_ctr_reg_n_0_[18] ,\wait_ctr_reg_n_0_[17] }));
  LUT6 #(
    .INIT(64'h00000000FFFFBBBA)) 
    \wait_ctr[0]_i_1 
       (.I0(\wait_ctr[10]_i_3_n_0 ),
        .I1(\wait_ctr[10]_i_4_n_0 ),
        .I2(p_16_in),
        .I3(p_14_in),
        .I4(\wait_ctr[10]_i_5_n_0 ),
        .I5(\wait_ctr_reg_n_0_[0] ),
        .O(\wait_ctr[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000444500000000)) 
    \wait_ctr[10]_i_1 
       (.I0(\wait_ctr[10]_i_3_n_0 ),
        .I1(\wait_ctr[10]_i_4_n_0 ),
        .I2(p_16_in),
        .I3(p_14_in),
        .I4(\wait_ctr[10]_i_5_n_0 ),
        .I5(\wait_ctr[10]_i_2_n_0 ),
        .O(\wait_ctr[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \wait_ctr[10]_i_10 
       (.I0(\wait_ctr[24]_i_6_n_0 ),
        .I1(\wait_ctr[24]_i_7_n_0 ),
        .I2(\wait_ctr_reg_n_0_[16] ),
        .I3(\wait_ctr_reg_n_0_[15] ),
        .I4(\wait_ctr_reg_n_0_[14] ),
        .O(\wait_ctr[10]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFE0000000000)) 
    \wait_ctr[10]_i_11 
       (.I0(\wait_ctr[10]_i_12_n_0 ),
        .I1(\wait_ctr_reg_n_0_[5] ),
        .I2(\wait_ctr_reg_n_0_[6] ),
        .I3(\wait_ctr_reg_n_0_[7] ),
        .I4(\wait_ctr_reg_n_0_[8] ),
        .I5(\wait_ctr_reg_n_0_[9] ),
        .O(\wait_ctr[10]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \wait_ctr[10]_i_12 
       (.I0(\wait_ctr_reg_n_0_[4] ),
        .I1(\wait_ctr_reg_n_0_[3] ),
        .O(\wait_ctr[10]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h45)) 
    \wait_ctr[10]_i_2 
       (.I0(cal_on_tx_reset_in_sync),
        .I1(\wait_ctr[10]_i_6_n_0 ),
        .I2(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0030333300202222)) 
    \wait_ctr[10]_i_3 
       (.I0(p_15_in),
        .I1(\wait_ctr[10]_i_8_n_0 ),
        .I2(\wait_ctr[10]_i_9_n_0 ),
        .I3(\wait_ctr_reg_n_0_[9] ),
        .I4(\wait_ctr_reg_n_0_[10] ),
        .I5(p_17_in),
        .O(\wait_ctr[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFEAAAAAAAAAAAAAA)) 
    \wait_ctr[10]_i_4 
       (.I0(\wait_ctr[10]_i_10_n_0 ),
        .I1(\wait_ctr_reg_n_0_[10] ),
        .I2(\wait_ctr[10]_i_11_n_0 ),
        .I3(\wait_ctr_reg_n_0_[13] ),
        .I4(\wait_ctr_reg_n_0_[11] ),
        .I5(\wait_ctr_reg_n_0_[12] ),
        .O(\wait_ctr[10]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \wait_ctr[10]_i_5 
       (.I0(\wait_ctr[24]_i_3_n_0 ),
        .I1(\cpll_cal_state_reg_n_0_[28] ),
        .I2(p_13_in),
        .I3(p_18_in),
        .O(\wait_ctr[10]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'hFFFFFFF4)) 
    \wait_ctr[10]_i_6 
       (.I0(drp_done),
        .I1(p_0_in),
        .I2(\cpll_cal_state_reg_n_0_[0] ),
        .I3(p_17_in),
        .I4(p_15_in),
        .O(\wait_ctr[10]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \wait_ctr[10]_i_7 
       (.I0(\cpll_cal_state_reg_n_0_[28] ),
        .I1(p_13_in),
        .I2(p_18_in),
        .I3(p_14_in),
        .I4(p_16_in),
        .O(\wait_ctr[10]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_ctr[10]_i_8 
       (.I0(\wait_ctr_reg_n_0_[14] ),
        .I1(\wait_ctr_reg_n_0_[15] ),
        .I2(\wait_ctr_reg_n_0_[16] ),
        .I3(\wait_ctr[24]_i_7_n_0 ),
        .I4(\wait_ctr[24]_i_6_n_0 ),
        .I5(\wait_ctr[24]_i_5_n_0 ),
        .O(\wait_ctr[10]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F7F7F7FFFFFFF)) 
    \wait_ctr[10]_i_9 
       (.I0(\wait_ctr_reg_n_0_[7] ),
        .I1(\wait_ctr_reg_n_0_[8] ),
        .I2(\wait_ctr_reg_n_0_[6] ),
        .I3(\wait_ctr[10]_i_12_n_0 ),
        .I4(\wait_ctr_reg_n_0_[2] ),
        .I5(\wait_ctr_reg_n_0_[5] ),
        .O(\wait_ctr[10]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[11]_i_1 
       (.I0(wait_ctr0_carry__0_n_13),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[12]_i_1 
       (.I0(wait_ctr0_carry__0_n_12),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[13]_i_1 
       (.I0(wait_ctr0_carry__0_n_11),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[14]_i_1 
       (.I0(wait_ctr0_carry__0_n_10),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[15]_i_1 
       (.I0(wait_ctr0_carry__0_n_9),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[16]_i_1 
       (.I0(wait_ctr0_carry__0_n_8),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[17]_i_1 
       (.I0(wait_ctr0_carry__1_n_15),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[18]_i_1 
       (.I0(wait_ctr0_carry__1_n_14),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[19]_i_1 
       (.I0(wait_ctr0_carry__1_n_13),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[20]_i_1 
       (.I0(wait_ctr0_carry__1_n_12),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[21]_i_1 
       (.I0(wait_ctr0_carry__1_n_11),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[22]_i_1 
       (.I0(wait_ctr0_carry__1_n_10),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[22]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[23]_i_1 
       (.I0(wait_ctr0_carry__1_n_9),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000020202022)) 
    \wait_ctr[24]_i_1 
       (.I0(\wait_ctr[10]_i_2_n_0 ),
        .I1(\wait_ctr[24]_i_3_n_0 ),
        .I2(\wait_ctr[10]_i_4_n_0 ),
        .I3(p_16_in),
        .I4(p_14_in),
        .I5(\wait_ctr[10]_i_3_n_0 ),
        .O(\wait_ctr[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \wait_ctr[24]_i_10 
       (.I0(\wait_ctr_reg_n_0_[5] ),
        .I1(\wait_ctr_reg_n_0_[6] ),
        .I2(\wait_ctr_reg_n_0_[9] ),
        .I3(\wait_ctr_reg_n_0_[10] ),
        .I4(\wait_ctr_reg_n_0_[7] ),
        .I5(\wait_ctr_reg_n_0_[8] ),
        .O(\wait_ctr[24]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[24]_i_2 
       (.I0(wait_ctr0_carry__1_n_8),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \wait_ctr[24]_i_3 
       (.I0(\wait_ctr[24]_i_5_n_0 ),
        .I1(\wait_ctr[24]_i_6_n_0 ),
        .I2(\wait_ctr[24]_i_7_n_0 ),
        .I3(\wait_ctr[24]_i_8_n_0 ),
        .I4(\wait_ctr[24]_i_9_n_0 ),
        .I5(\wait_ctr[24]_i_10_n_0 ),
        .O(\wait_ctr[24]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'h0455)) 
    \wait_ctr[24]_i_4 
       (.I0(\wait_ctr[10]_i_8_n_0 ),
        .I1(\wait_ctr[10]_i_9_n_0 ),
        .I2(\wait_ctr_reg_n_0_[9] ),
        .I3(\wait_ctr_reg_n_0_[10] ),
        .O(\wait_ctr[24]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \wait_ctr[24]_i_5 
       (.I0(\wait_ctr_reg_n_0_[13] ),
        .I1(\wait_ctr_reg_n_0_[11] ),
        .I2(\wait_ctr_reg_n_0_[12] ),
        .O(\wait_ctr[24]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_ctr[24]_i_6 
       (.I0(\wait_ctr_reg_n_0_[22] ),
        .I1(\wait_ctr_reg_n_0_[23] ),
        .I2(\wait_ctr_reg_n_0_[17] ),
        .I3(\wait_ctr_reg_n_0_[20] ),
        .O(\wait_ctr[24]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \wait_ctr[24]_i_7 
       (.I0(\wait_ctr_reg_n_0_[21] ),
        .I1(\wait_ctr_reg_n_0_[24] ),
        .I2(\wait_ctr_reg_n_0_[18] ),
        .I3(\wait_ctr_reg_n_0_[19] ),
        .O(\wait_ctr[24]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \wait_ctr[24]_i_8 
       (.I0(\wait_ctr_reg_n_0_[14] ),
        .I1(\wait_ctr_reg_n_0_[15] ),
        .I2(\wait_ctr_reg_n_0_[16] ),
        .O(\wait_ctr[24]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT5 #(
    .INIT(32'h88888880)) 
    \wait_ctr[24]_i_9 
       (.I0(\wait_ctr_reg_n_0_[3] ),
        .I1(\wait_ctr_reg_n_0_[4] ),
        .I2(\wait_ctr_reg_n_0_[0] ),
        .I3(\wait_ctr_reg_n_0_[1] ),
        .I4(\wait_ctr_reg_n_0_[2] ),
        .O(\wait_ctr[24]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[4]_i_1 
       (.I0(wait_ctr0_carry_n_12),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[5]_i_1 
       (.I0(wait_ctr0_carry_n_11),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[6]_i_1 
       (.I0(wait_ctr0_carry_n_10),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA080AAAA)) 
    \wait_ctr[9]_i_1 
       (.I0(wait_ctr0_carry__0_n_15),
        .I1(p_15_in),
        .I2(\wait_ctr[24]_i_4_n_0 ),
        .I3(p_17_in),
        .I4(\wait_ctr[10]_i_7_n_0 ),
        .O(\wait_ctr[9]_i_1_n_0 ));
  FDRE \wait_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[0]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \wait_ctr_reg[10] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(wait_ctr0_carry__0_n_14),
        .Q(\wait_ctr_reg_n_0_[10] ),
        .R(\wait_ctr[10]_i_1_n_0 ));
  FDRE \wait_ctr_reg[11] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[11]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[11] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[12] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[12]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[12] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[13] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[13]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[13] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[14] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[14]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[14] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[15] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[15]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[15] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[16] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[16]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[16] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[17] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[17]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[17] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[18] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[18]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[18] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[19] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[19]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[19] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(wait_ctr0_carry_n_15),
        .Q(\wait_ctr_reg_n_0_[1] ),
        .R(\wait_ctr[10]_i_1_n_0 ));
  FDRE \wait_ctr_reg[20] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[20]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[20] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[21] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[21]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[21] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[22] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[22]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[22] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[23] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[23]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[23] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[24] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[24]_i_2_n_0 ),
        .Q(\wait_ctr_reg_n_0_[24] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(wait_ctr0_carry_n_14),
        .Q(\wait_ctr_reg_n_0_[2] ),
        .R(\wait_ctr[10]_i_1_n_0 ));
  FDRE \wait_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(wait_ctr0_carry_n_13),
        .Q(\wait_ctr_reg_n_0_[3] ),
        .R(\wait_ctr[10]_i_1_n_0 ));
  FDRE \wait_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[4]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[4] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[5]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[5] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[6]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[6] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  FDRE \wait_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(wait_ctr0_carry_n_9),
        .Q(\wait_ctr_reg_n_0_[7] ),
        .R(\wait_ctr[10]_i_1_n_0 ));
  FDRE \wait_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(wait_ctr0_carry_n_8),
        .Q(\wait_ctr_reg_n_0_[8] ),
        .R(\wait_ctr[10]_i_1_n_0 ));
  FDRE \wait_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(\wait_ctr[10]_i_2_n_0 ),
        .D(\wait_ctr[9]_i_1_n_0 ),
        .Q(\wait_ctr_reg_n_0_[9] ),
        .R(\wait_ctr[24]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h74)) 
    wr_i_1__0
       (.I0(drp_done),
        .I1(\di_msk[15]_i_3_n_0 ),
        .I2(wr),
        .O(wr_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(wr_i_1__0_n_0),
        .Q(wr),
        .R(cal_on_tx_reset_in_sync));
  LUT3 #(
    .INIT(8'h40)) 
    \x0e1_store[14]_i_1 
       (.I0(cal_on_tx_reset_in_sync),
        .I1(p_4_in),
        .I2(drp_done),
        .O(\x0e1_store[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[0] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[0]),
        .Q(\x0e1_store_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[12] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[12]),
        .Q(\x0e1_store_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[13] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[13]),
        .Q(\x0e1_store_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[14] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[14]),
        .Q(\x0e1_store_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[1] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[1]),
        .Q(\x0e1_store_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[2] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[2]),
        .Q(\x0e1_store_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[3] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[3]),
        .Q(\x0e1_store_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[4] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[4]),
        .Q(\x0e1_store_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[5] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[5]),
        .Q(\x0e1_store_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[6] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[6]),
        .Q(\x0e1_store_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[7] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[7]),
        .Q(\x0e1_store_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[8] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[8]),
        .Q(\x0e1_store_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x0e1_store_reg[9] 
       (.C(drpclk_in),
        .CE(\x0e1_store[14]_i_1_n_0 ),
        .D(Q[9]),
        .Q(\x0e1_store_reg_n_0_[9] ),
        .R(1'b0));
endmodule

module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_gtye4_delay_powergood
   (out,
    TXRATE,
    txoutclkpcs_out,
    \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 );
  output out;
  output [0:0]TXRATE;
  input [0:0]txoutclkpcs_out;
  input \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;

  wire [0:0]TXRATE;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.int_pwr_on_fsm ;
  wire \gen_powergood_delay.int_pwr_on_fsm_i_1_n_0 ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]\gen_powergood_delay.intclk_rrst_n_r ;
  wire \gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ;
  wire \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.pwr_on_fsm ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [8:0]\gen_powergood_delay.wait_cnt ;
  wire \gen_powergood_delay.wait_cnt[0]_i_1_n_0 ;
  wire \gen_powergood_delay.wait_cnt[8]_i_1_n_0 ;
  wire [0:0]txoutclkpcs_out;

  assign out = \gen_powergood_delay.pwr_on_fsm ;
  LUT2 #(
    .INIT(4'hE)) 
    \gen_powergood_delay.int_pwr_on_fsm_i_1 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .I1(\gen_powergood_delay.wait_cnt [7]),
        .O(\gen_powergood_delay.int_pwr_on_fsm_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.int_pwr_on_fsm_reg 
       (.C(txoutclkpcs_out),
        .CE(1'b1),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.int_pwr_on_fsm_i_1_n_0 ),
        .Q(\gen_powergood_delay.int_pwr_on_fsm ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_1 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[0] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(1'b1),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[1] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [0]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[2] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [1]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[3] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [2]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[4] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [3]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.pwr_on_fsm_reg 
       (.C(txoutclkpcs_out),
        .CE(1'b1),
        .D(\gen_powergood_delay.int_pwr_on_fsm ),
        .Q(\gen_powergood_delay.pwr_on_fsm ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h7)) 
    \gen_powergood_delay.wait_cnt[0]_i_1 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .I1(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.wait_cnt[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.wait_cnt[8]_i_1 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .O(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[0] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.wait_cnt[0]_i_1_n_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .Q(\gen_powergood_delay.wait_cnt [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[1] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [0]),
        .Q(\gen_powergood_delay.wait_cnt [1]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[2] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [1]),
        .Q(\gen_powergood_delay.wait_cnt [2]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[3] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [2]),
        .Q(\gen_powergood_delay.wait_cnt [3]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[4] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [3]),
        .Q(\gen_powergood_delay.wait_cnt [4]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[5] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [4]),
        .Q(\gen_powergood_delay.wait_cnt [5]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[6] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [5]),
        .Q(\gen_powergood_delay.wait_cnt [6]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[7] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [6]),
        .Q(\gen_powergood_delay.wait_cnt [7]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[8] 
       (.C(txoutclkpcs_out),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [7]),
        .Q(\gen_powergood_delay.wait_cnt [8]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_i_2 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .O(TXRATE));
endmodule

module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_inv_synchronizer
   (gtwiz_reset_rx_done_out,
    rxusrclk2_in,
    rst_in_sync2_reg_0);
  output [0:0]gtwiz_reset_rx_done_out;
  input [0:0]rxusrclk2_in;
  input rst_in_sync2_reg_0;

  wire [0:0]gtwiz_reset_rx_done_out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_i_1_n_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  wire rst_in_sync2_reg_0;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire [0:0]rxusrclk2_in;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(1'b1),
        .Q(rst_in_meta));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_out_i_1
       (.I0(rst_in_sync2_reg_0),
        .O(rst_in_out_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync3),
        .Q(gtwiz_reset_rx_done_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_meta),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync2),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_reset_inv_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_inv_synchronizer_47
   (gtwiz_reset_tx_done_out,
    txusrclk_in,
    rst_in_sync2_reg_0);
  output [0:0]gtwiz_reset_tx_done_out;
  input [0:0]txusrclk_in;
  input rst_in_sync2_reg_0;

  wire [0:0]gtwiz_reset_tx_done_out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_i_1__0_n_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  wire rst_in_sync2_reg_0;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire [0:0]txusrclk_in;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(1'b1),
        .Q(rst_in_meta));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_out_i_1__0
       (.I0(rst_in_sync2_reg_0),
        .O(rst_in_out_i_1__0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync3),
        .Q(gtwiz_reset_tx_done_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_meta),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync2),
        .Q(rst_in_sync3));
endmodule

module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer
   (gtwiz_reset_all_sync,
    drpclk_in,
    gtwiz_reset_rx_pll_and_datapath_in);
  output gtwiz_reset_all_sync;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;

  wire [0:0]drpclk_in;
  wire gtwiz_reset_all_sync;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(gtwiz_reset_all_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_reset_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_41
   (gtwiz_reset_rx_any_sync,
    \FSM_sequential_sm_reset_rx_reg[1] ,
    drpclk_in,
    Q,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ,
    rst_in_out_reg_0,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    rst_in_out_reg_1);
  output gtwiz_reset_rx_any_sync;
  output \FSM_sequential_sm_reset_rx_reg[1] ;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  input rst_in_out_reg_0;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input rst_in_out_reg_1;

  wire \FSM_sequential_sm_reset_rx_reg[1] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  wire gtwiz_reset_rx_any;
  wire gtwiz_reset_rx_any_sync;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  wire rst_in_out_reg_1;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT5 #(
    .INIT(32'hFFDF0010)) 
    pllreset_rx_out_i_1
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(gtwiz_reset_rx_any_sync),
        .I4(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .O(\FSM_sequential_sm_reset_rx_reg[1] ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    rst_in_meta_i_1
       (.I0(rst_in_out_reg_0),
        .I1(gtwiz_reset_rx_datapath_in),
        .I2(gtwiz_reset_rx_pll_and_datapath_in),
        .I3(rst_in_out_reg_1),
        .O(gtwiz_reset_rx_any));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_rx_any),
        .Q(gtwiz_reset_rx_any_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_reset_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_42
   (in0,
    drpclk_in,
    gtwiz_reset_rx_datapath_in,
    rst_in_out_reg_0);
  output in0;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input rst_in_out_reg_0;

  wire [0:0]drpclk_in;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire in0;
  wire rst_in0_1;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__1
       (.I0(gtwiz_reset_rx_datapath_in),
        .I1(rst_in_out_reg_0),
        .O(rst_in0_1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in0_1),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in0_1),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in0_1),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in0_1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in0_1),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_reset_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_43
   (in0,
    drpclk_in,
    rst_in_out_reg_0,
    gtwiz_reset_rx_pll_and_datapath_in);
  output in0;
  input [0:0]drpclk_in;
  input rst_in_out_reg_0;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;

  wire [0:0]drpclk_in;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire in0;
  wire p_0_in_0;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__0
       (.I0(rst_in_out_reg_0),
        .I1(gtwiz_reset_rx_pll_and_datapath_in),
        .O(p_0_in_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(p_0_in_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(p_0_in_0),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(p_0_in_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(p_0_in_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(p_0_in_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_reset_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_44
   (gtwiz_reset_tx_any_sync,
    \FSM_sequential_sm_reset_tx_reg[1] ,
    drpclk_in,
    rst_in_out_reg_0,
    Q,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int );
  output gtwiz_reset_tx_any_sync;
  output \FSM_sequential_sm_reset_tx_reg[1] ;
  input [0:0]drpclk_in;
  input rst_in_out_reg_0;
  input [2:0]Q;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;

  wire \FSM_sequential_sm_reset_tx_reg[1] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;
  wire gtwiz_reset_tx_any_sync;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT5 #(
    .INIT(32'hFFDF0010)) 
    pllreset_tx_out_i_1
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(gtwiz_reset_tx_any_sync),
        .I4(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .O(\FSM_sequential_sm_reset_tx_reg[1] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in_out_reg_0),
        .Q(gtwiz_reset_tx_any_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_reset_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_45
   (in0,
    drpclk_in);
  output in0;
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  wire in0;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rst_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .Q(in0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .Q(rst_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .Q(rst_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .Q(rst_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_reset_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_46
   (in0,
    drpclk_in,
    rst_in_out_reg_0);
  output in0;
  input [0:0]drpclk_in;
  input rst_in_out_reg_0;

  wire [0:0]drpclk_in;
  wire in0;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in_out_reg_0),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_reset_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_48
   (rst_in_out_reg_0,
    drpclk_in,
    rst_in0);
  output rst_in_out_reg_0;
  input [0:0]drpclk_in;
  input rst_in0;

  wire [0:0]drpclk_in;
  wire rst_in0;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in0),
        .Q(rst_in_out_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_reset_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_50
   (drpclk_in);
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(1'b1),
        .Q(rst_in_meta));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(1'b1),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(1'b1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(1'b1),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_reset_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_51
   (cal_on_tx_reset_in_sync,
    drpclk_in,
    RESET_IN);
  output cal_on_tx_reset_in_sync;
  input [0:0]drpclk_in;
  input RESET_IN;

  wire RESET_IN;
  wire cal_on_tx_reset_in_sync;
  wire [0:0]drpclk_in;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(RESET_IN),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(RESET_IN),
        .Q(cal_on_tx_reset_in_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(RESET_IN),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(RESET_IN),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(RESET_IN),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_13_reset_synchronizer" *) 
module aurora_64b66b_SL_gtwizard_ultrascale_v1_7_13_reset_synchronizer_58
   (rst_in_out,
    txoutclkmon,
    out);
  output rst_in_out;
  input txoutclkmon;
  input out;

  wire out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire txoutclkmon;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(1'b0),
        .PRE(out),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(out),
        .Q(rst_in_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(out),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(out),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(txoutclkmon),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(out),
        .Q(rst_in_sync3));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2022.1"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
h4/8v0FBgXUomE5kJVs58UlO/ao4SLHpniPXt+fomPPYB6tv3U0iBfOL5737ZNNEhgP1kkKeMvq+
VxOLW94g7JZT6mWc5ZuQ7jgK8Qpa6+1xpVVQBB6gVSEeHij7ZHqPdYaLC9rL/SR7notnBC1OujFi
++mTu5z/HJZtnN4VJQw=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Su6POoQw092/hg4JN8GOCSrLUa435VAUaqUned4C4G61yBHlUmaG63UO+KxY5pgyMrDH6/XH2bPa
fona2wB0Y0sw6W61PXOfiew7cH42baMY0P9UBRjH25EZTf72W3O8r7DNj16ob9pPi7bkuCd3aab3
hdfeY613n+hUbAXTLQqbhjqGmO9kFeC/VmdSITa02RauMnpfVxz1wLu9iUQ0V+mPTp6hvfNXlD0F
7oONLZJg+c6/+uSw1WbEiltO2Lplqvbb0sYbZjtTSEQZSdF4DiUdA0SGK+L75aDYGx3Z/ajCRpBx
Mr39wb5wiDr6SJ/QQ/JmYc+HrTs/fbN9BJ/Grg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
JbOromwhdJgnOFMOfO8mpnyFC1anQPoDL/XeHYQuoY4+0yjNmPGasGLGjanpoUgfOYngBHPrFFFH
rapGBPsHEbT6JXWHeRJexf2moVhmq1sHJ7n+Jx1rVNuyclUCC08Fg3sy6FdUQmptKSpqOw1x0DV8
R9ZlmwLTkoN8IV6D7sg=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
XbCcyKbk3pmZ92QhZ1iCj+9jpzUJAn91N3YYwVHN3gwcgTU0NRr0oD7EmkLoZ8hVAhh/9YMUp7DE
059wcAzCBsD2W3CWY+GHUSJS57Xt2yi9tZH7binajEyHpCqaFKKO9WxDTO9XnYLVswRvAii0DOJL
mY+z3Z0uDx55BVWqbbvDkA5gABsZLueFt15rXRJPRnAjzWXhYzjiqC1WQDy5UHl/LBDlsOMuouyd
gM4k7zzEZUOy4o1sI2isD+6T/wd+iOsXvq39rguDUtkw3SR4GJmk+rBu3rBh+EvBHKxaWqQjGGNV
qWyrqd89LjZFGnXZ2jvsgxldJWCellgTK1ZEfA==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
dG5h8R2Fe36rfzcvmeDU4OapeKO/Lhe0DkL+4c9AG4It+1yVmtHeEWL8eVWMvHdPTwqJqgkMQbh4
OO9/9XZMyYCWFJTHu4ossKo7zKccfTeBbKfgP+rDEckDTGIWXihj2YJ2N0p6q9Ynpsz9qOLdoXTY
gZXwoOe4MrZBJWZrDOqkD1hQ+cRUV9c8S6FlH+AyBNj5dlaAM0Jyq6a8TvcRmLoZfdi1zFWXeTUW
/XfWQRP+vnqqV8VPdyfaJJzaKnG1u9PnvSFauc3SzydGZfICacU2pPxqAaJWzDYwSns+vd4vCu7u
e01UXo4XXeFCvO/9mye0QnyrDHhuE0b1Svw/jQ==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2021_07", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
K8hvyEyHvgdg02DFF2GnEdLUq6j/uKT5fsI+Nkpbw14CRrq5p+STF83Or85VDleAax2TYln4LhGn
6G6INbZ4BdMuA4nVtyx5xaogScfMwbjrTAn0bqxT20M++g4cn4gW2g3oEFMnXaYCsLaJ58t4/T42
ocO8oqJeCowKICP/eM+B+/jSusNp4JILdp522MKky1zANadPwlv8a7QrMrJQrnb/lF8qC10yXqfM
LbKfbAEBaHlel46y7YBqdIimfeAVng194wkXobD6WuMhQOpFkigBOLQzoKQWN1TWeY5/rSQt9pcT
xLm+NEQmtlL61OudMCIqm++dCQSgE4NFJj1fCw==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
gSLVZdmdCqRy/3LoTp5M48T1hUUfGQp8cxVz4NQ+P65mrZ0oJJXHSaNbzdvtYH41+27aGh3RBbLb
pzz+TmeVuEVneG5nGe1VY2ogM1D7tBMRUvNgXK2PkSRLnk9tYgnxoYi0cYLBxa3piqBh44cdYXif
bT0Uh2vFogmdeH5hxVNFk8FEhULNtR/T9r9ilPNDQALb08fQM461sjlhS2jgRgH0X8LZqnBOii+F
7+GguDMENTlzU0XSYWEcGFH9V5PdYMehb0WgZeiqTchxRuQFmLjDhI4J5dkci8RmkLCwz4KyjfOi
S8Nkg20qh9otuAisfQTh4Qx2lC7x7BHgmuwy0w==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
kXlkvzJI7Tq1glqNfjqmCb8YU69bhN9hH5OsWvFNj7VseyX6/5l9Mgif4B1r1LeKz06I27dmB9g7
AuHBFZ0bPN86mURBL/HK/dTOGyLYAveWeOIK1kqX56i4H9UNIUObEphcz9wdT0OgXHTPMxiIpJhT
1o5oYJW49mDsAv5yxe4FvPo6rFgZAiEo34vJGDxzz4//zJq0z+GxJNCibpLydZBWaJWRfsDUs9pm
1O6hS3KPIL5Evg1JOFt1uwKb1xEA08ETT+qYwg6zmFfwQbs6O7modRmBtEd1n9mrqsgCAviiLPtN
LUFiLdrywPt7LArLCRz4h5uHJxz/21Pj5m1VZtZq9nFmsbp6Lw/0RF1+nN8o+RIu+/tmu74xkL/8
nNEc9mEFy912OKP6WDP4Ajzg4gl9xhtaYA5eGkNB/43YjgGsmTe+L0dyxHIwa734JNMb5zC5dRtR
V4pCnWZKmnDJDXvMftedQzqQvdFwJg5hLxrHfkPD8LqiOwVck/Nt6QSF

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
ADtaDIjUIR6zZBfz+lPRaDMdXcoufPACX4aSe06/DoTgIDvM+UOlm8rH20gKO3r8YdsuLtUh7rhz
ekJB22nBPUdbl3FvlGdQIgiCyJ8XgZYvvuOo9I765yKjFxQsFmQE0Ih86fqCqvYmRnsZkpk1uQ7v
JpqhWGBX6tLgYu/txP+ShnzFfkWGhj29JhYII0zqJMBCjGeM89F+mlH+X/YL5Q/fZYyh9Cr2CJx6
ofJpBZ1SPlXwgafXVi0QAUVuQEBmZYVn9Kze++tMEr6qv62ANq23LevYQfCsYKoY5iyf5U7jJ5Qx
eC9nG5Es4y6lz5giep7veaXdBFBHd7VuD56v4w==

`pragma protect key_keyowner="Synplicity", key_keyname="SYNP15_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
zFwVPvNmX5sBruiGDSfENTp6EBfydwYKhxWi0YDKQ4j0gu6AMV8yJP6GXeJs/A9Zgb1UFE+sJifk
OngE9N2vVRp43pAVauHQf1hUkSWPDJuZ9yEQZbR7F3mmiBKu/Aehj7KcAjv07FWv46HzxRL9E2xx
gpDOzAyNSNubxORv7bVYUV0C4Fr+tZRA6douG4rxi56npPfzIAZjyU4wPvwabxrJ9L4ZRuZXciLk
lJGTIJZTH2uclPmuo57jlIXGo1ZtQZgRCDfn7W02AQ7MDKblx47m+E+sUKKYHZlvf30GkPcwlucZ
ZcUcGnYaRCZnrhwFl0qxxXn2pO15vG4MJXOHMw==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-PREC-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Lq86c/0SMuvdLuij6dbfI/ah4/50WGATVNRwXobLfbnZqWOhhEk3VDQATTxe7ZLrUauwrLuMoKhS
j4kqT2raqDijA51Tz7ee+F/MUKvyxGDJqfBi5JJX9y81LCXav7HpdRiPTy6w5O3tQoQbugh61D0B
oJBwNvL22Oi10e+Bu7H1yQvsbksxPAA8VE8HK+OJzZETk0PfHS2ySL5WXLQf7duD6CWmpWdLMrZQ
ojOqvNL31LsO1gZhssTk4RgyZUrZ3CboBbLWDxq2L/SsF5YiRIUPDTe17rRcrxa1y6LzMD/ve/nR
mptJOGxlUgLpJaPAA7jH3b+EQGlrHzHOsG8fFQ==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 55536)
`pragma protect data_block
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
IGaIMOPUDHuHBcz+YnN14KTT
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
